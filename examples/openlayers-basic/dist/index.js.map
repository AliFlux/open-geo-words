{"version":3,"file":"index.js","mappings":"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","sources":["webpack:///../../node_modules/efrt/src/encoding.js","webpack:///../../node_modules/efrt/src/unpack/traverse.js","webpack:///../../node_modules/efrt/src/unpack/symbols.js","webpack:///../../src/corpus.js","webpack:///../../node_modules/efrt/src/unpack/index.js","webpack:///../../node_modules/proj4/lib/constants/values.js","webpack:///../../node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///../../node_modules/proj4/lib/constants/units.js","webpack:///../../node_modules/proj4/lib/match.js","webpack:///../../node_modules/proj4/lib/projString.js","webpack:///../../node_modules/wkt-parser/parser.js","webpack:///../../node_modules/wkt-parser/process.js","webpack:///../../node_modules/wkt-parser/index.js","webpack:///../../node_modules/proj4/lib/defs.js","webpack:///../../node_modules/proj4/lib/global.js","webpack:///../../node_modules/proj4/lib/parseCode.js","webpack:///../../node_modules/proj4/lib/extend.js","webpack:///../../node_modules/proj4/lib/common/msfnz.js","webpack:///../../node_modules/proj4/lib/common/sign.js","webpack:///../../node_modules/proj4/lib/common/adjust_lon.js","webpack:///../../node_modules/proj4/lib/common/tsfnz.js","webpack:///../../node_modules/proj4/lib/common/phi2z.js","webpack:///../../node_modules/proj4/lib/projections/longlat.js","webpack:///../../node_modules/proj4/lib/projections.js","webpack:///../../node_modules/proj4/lib/projections/merc.js","webpack:///../../node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///../../node_modules/proj4/lib/constants/Datum.js","webpack:///../../node_modules/proj4/lib/nadgrid.js","webpack:///../../node_modules/proj4/lib/Proj.js","webpack:///../../node_modules/proj4/lib/deriveConstants.js","webpack:///../../node_modules/proj4/lib/datum.js","webpack:///../../node_modules/proj4/lib/datumUtils.js","webpack:///../../node_modules/proj4/lib/datum_transform.js","webpack:///../../node_modules/proj4/lib/adjust_axis.js","webpack:///../../node_modules/proj4/lib/common/toPoint.js","webpack:///../../node_modules/proj4/lib/checkSanity.js","webpack:///../../node_modules/proj4/lib/transform.js","webpack:///../../node_modules/proj4/lib/core.js","webpack:///../../node_modules/mgrs/mgrs.js","webpack:///../../node_modules/proj4/lib/Point.js","webpack:///../../node_modules/proj4/lib/common/pj_enfn.js","webpack:///../../node_modules/proj4/lib/common/pj_mlfn.js","webpack:///../../node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///../../node_modules/proj4/lib/projections/tmerc.js","webpack:///../../node_modules/proj4/lib/common/sinh.js","webpack:///../../node_modules/proj4/lib/common/hypot.js","webpack:///../../node_modules/proj4/lib/common/gatg.js","webpack:///../../node_modules/proj4/lib/common/clens_cmplx.js","webpack:///../../node_modules/proj4/lib/common/cosh.js","webpack:///../../node_modules/proj4/lib/projections/etmerc.js","webpack:///../../node_modules/proj4/lib/common/clens.js","webpack:///../../node_modules/proj4/lib/common/asinhy.js","webpack:///../../node_modules/proj4/lib/common/log1py.js","webpack:///../../node_modules/proj4/lib/projections/utm.js","webpack:///../../node_modules/proj4/lib/common/adjust_zone.js","webpack:///../../node_modules/proj4/lib/common/srat.js","webpack:///../../node_modules/proj4/lib/projections/gauss.js","webpack:///../../node_modules/proj4/lib/projections/sterea.js","webpack:///../../node_modules/proj4/lib/projections/stere.js","webpack:///../../node_modules/proj4/lib/projections/somerc.js","webpack:///../../node_modules/proj4/lib/projections/omerc.js","webpack:///../../node_modules/proj4/lib/projections/lcc.js","webpack:///../../node_modules/proj4/lib/projections/krovak.js","webpack:///../../node_modules/proj4/lib/common/mlfn.js","webpack:///../../node_modules/proj4/lib/common/e0fn.js","webpack:///../../node_modules/proj4/lib/common/e1fn.js","webpack:///../../node_modules/proj4/lib/common/e2fn.js","webpack:///../../node_modules/proj4/lib/common/e3fn.js","webpack:///../../node_modules/proj4/lib/common/gN.js","webpack:///../../node_modules/proj4/lib/common/adjust_lat.js","webpack:///../../node_modules/proj4/lib/common/imlfn.js","webpack:///../../node_modules/proj4/lib/projections/cass.js","webpack:///../../node_modules/proj4/lib/common/qsfnz.js","webpack:///../../node_modules/proj4/lib/projections/laea.js","webpack:///../../node_modules/proj4/lib/common/asinz.js","webpack:///../../node_modules/proj4/lib/projections/aea.js","webpack:///../../node_modules/proj4/lib/projections/gnom.js","webpack:///../../node_modules/proj4/lib/projections/cea.js","webpack:///../../node_modules/proj4/lib/common/iqsfnz.js","webpack:///../../node_modules/proj4/lib/projections/eqc.js","webpack:///../../node_modules/proj4/lib/projections/poly.js","webpack:///../../node_modules/proj4/lib/projections/nzmg.js","webpack:///../../node_modules/proj4/lib/projections/mill.js","webpack:///../../node_modules/proj4/lib/projections/sinu.js","webpack:///../../node_modules/proj4/lib/projections/moll.js","webpack:///../../node_modules/proj4/lib/projections/eqdc.js","webpack:///../../node_modules/proj4/lib/projections/vandg.js","webpack:///../../node_modules/proj4/lib/projections/aeqd.js","webpack:///../../node_modules/proj4/lib/projections/ortho.js","webpack:///../../node_modules/proj4/lib/projections/qsc.js","webpack:///../../node_modules/proj4/lib/projections/robin.js","webpack:///../../node_modules/proj4/lib/projections/geocent.js","webpack:///../../node_modules/proj4/lib/projections/tpers.js","webpack:///../../node_modules/proj4/lib/projections/geos.js","webpack:///../../node_modules/proj4/projs.js","webpack:///../../node_modules/proj4/lib/index.js","webpack:///../../src/index.js","webpack:///./index.js"],"sourcesContent":["const BASE = 36\nconst seq = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\nconst cache = seq.split('').reduce(function (h, c, i) {\n  h[c] = i\n  return h\n}, {})\n\n// 0, 1, 2, ..., A, B, C, ..., 00, 01, ... AA, AB, AC, ..., AAA, AAB, ...\nconst toAlphaCode = function (n) {\n  if (seq[n] !== undefined) {\n    return seq[n]\n  }\n  let places = 1\n  let range = BASE\n  let s = ''\n  for (; n >= range; n -= range, places++, range *= BASE) {}\n  while (places--) {\n    const d = n % BASE\n    s = String.fromCharCode((d < 10 ? 48 : 55) + d) + s\n    n = (n - d) / BASE\n  }\n  return s\n}\n\nconst fromAlphaCode = function (s) {\n  if (cache[s] !== undefined) {\n    return cache[s]\n  }\n  let n = 0\n  let places = 1\n  let range = BASE\n  let pow = 1\n  for (; places < s.length; n += range, places++, range *= BASE) {}\n  for (let i = s.length - 1; i >= 0; i--, pow *= BASE) {\n    let d = s.charCodeAt(i) - 48\n    if (d > 10) {\n      d -= 7\n    }\n    n += d * pow\n  }\n  return n\n}\n\nexport default {\n  toAlphaCode,\n  fromAlphaCode\n}\n","import parseSymbols from './symbols.js'\nimport encoding from '../encoding.js'\n\n// References are either absolute (symbol) or relative (1 - based)\nconst indexFromRef = function (trie, ref, index) {\n  const dnode = encoding.fromAlphaCode(ref)\n  if (dnode < trie.symCount) {\n    return trie.syms[dnode]\n  }\n  return index + dnode + 1 - trie.symCount\n}\n\nconst toArray = function (trie) {\n  const all = []\n  const crawl = (index, pref) => {\n    let node = trie.nodes[index]\n    if (node[0] === '!') {\n      all.push(pref)\n      node = node.slice(1) //ok, we tried. remove it.\n    }\n    const matches = node.split(/([A-Z0-9,]+)/g)\n    for (let i = 0; i < matches.length; i += 2) {\n      const str = matches[i]\n      const ref = matches[i + 1]\n      if (!str) {\n        continue\n      }\n      const have = pref + str\n      //branch's end\n      if (ref === ',' || ref === undefined) {\n        all.push(have)\n        continue\n      }\n      const newIndex = indexFromRef(trie, ref, index)\n      crawl(newIndex, have)\n    }\n  }\n  crawl(0, '')\n  return all\n}\n\n//PackedTrie - Trie traversal of the Trie packed-string representation.\nconst unpack = function (str) {\n  const trie = {\n    nodes: str.split(';'),\n    syms: [],\n    symCount: 0\n  }\n  //process symbols, if they have them\n  if (str.match(':')) {\n    parseSymbols(trie)\n  }\n  return toArray(trie)\n}\n\nexport default unpack\n","import encoding from '../encoding.js'\n\nconst symbols = function (t) {\n  //... process these lines\n  const reSymbol = new RegExp('([0-9A-Z]+):([0-9A-Z]+)')\n  for (let i = 0; i < t.nodes.length; i++) {\n    const m = reSymbol.exec(t.nodes[i])\n    if (!m) {\n      t.symCount = i\n      break\n    }\n    t.syms[encoding.fromAlphaCode(m[1])] = encoding.fromAlphaCode(m[2])\n  }\n  //remove from main node list\n  t.nodes = t.nodes.slice(t.symCount, t.nodes.length)\n}\nexport default symbols\n","import { unpack } from 'efrt'\r\n\r\nvar compressedCorpus = \"true¦0:BP6;1:BP7;2:BG4;3:BNH;4:BIX;5:BN1;6:BP9;7:BMP;8:BN7;9:BO1;A:BNY;B:BP8;C:BO0;D:BID;E:BLN;F:BOV;G:BNX;H:BHL;I:BI3;J:BON;K:BK8;L:BHB;M:BNN;N:BK6;O:BPI;P:BBO;aAK3b9N5c8EDd7O0e766f6OQg68Oh5QAi59Dj533k4UHl4F7m3NOn3CTo32Hp29Hq27Mr1M1s0FItVYuKMvDIw41x3Ly18zQ;a0QdnBDTe0Gh0Bi01loty0oVshoAQ7uRweiIyQ;deBLQg1CH;brPcRko,lu,mQri4XQzu;a,ba;c4TDkerQ;!beA4Zm4;b4E1diAXMey,hUiTlSmbAMDn7QAoRpe,rQsBLSya;aBBQba,d71Uin,n,o,ro;ey,keAASl7E0m8s,t;a,oAZGt4;dA4Tla,n9XJ;ar,ra;ad,daBegYff,gXlWmUnTon8OTpRrconiB49tQva;a,i,o,s;pQs;e12Ui1o,y;a,c,e,fandAUGg698;babwe9QOmerQ;!mB60;ch,liBNL;gy,zag4PT;feBDKl2;aTenSivaAU3oRuQ;ge,kADPme1o;ng,u;!g,ya;an,nIo;alXb14Lca,dd,eWitgeist,ke,lUnTpSroRst,ta,uQynB4Bze;s,thO;!eBNHi1s;hyr,pelP;g,iBE5;da,enQ;a,ka;k,laBH6nBD5;!and9FHoQ;tAFHusE;aBMJbAUBc03f6KFg02h01i00jAWRkiBMTlZmXnVpSrRtQza;hrBG4o16P;a,ek,kAD9;atRpQs;!a,ed,i1;a,eBME;a,dQe,uBDAy,zibB9A;er,ra,t;bQir,oBMB;iaBANoA6LraBBI;e,m4;re,us,zO;e2ir,ra;g5r6DHs;hQk;!arQ;ia37Ky;a1Ae0ZggdrasBN5hB8Ti0WmB5MngBFRo07stB9PuSvQ;an,eQonBEJ;s,tBIE;an,c03d02en,go01hi,ichi,ji,kZlXmWnVppAKYrTsRtQuB8YwOya;a4AEz;ef,sef,uQ;f,ke;a,iQt,y;!a,ko;a,g,n4tabJ;a,e,iA81my;eQia;!tiBFP;aAYKiQoBA2;!e,ko,muBLOo;!slavVM;a,dhistBNSi;at4ca,kB4X;d0Dg0ChA6Ii0Bk08l07ma,n06o4U5r03sYuQwl95Byo;a,d,juBLZko,lAGPnVrSsRtQve;hAFBo,uAND;!e6LFs5RF;!e,fQj64Es33VwiBBQ;aQrieBFZ;ce,miBJRth2;!gQ;!bloBDOeAGEstBJF;eThQsi,t,uA8U;!iQ;!da,e,ko,mQno,o49PwaBL9;i,uBL8;f,miBHL;am,e,gBJPiRkQ;!er0sA5JtoA9O;!ck,ko;d2g0W9i,keB64;anBHDi,k0o;eRoQ;!haB9LyaB9L;!d,l0;cBFJji;a,eBBChuB4Gi,uB4G;a,elN;d9BVeld8kAlmB6Vng,pQ;pQs;ee,i1;aYch,eXgAYZhuBH3lTmOns,oSsQti,u1vgeB5L;es,hiAEWsBMXterQ;dB53yeB7N;l,m4nIw;eB9NlQpAGBtsP;!aBF7eAXFinIoQs;!wQ;!i8KEk2SZs6ZR;h9SOsh;g2h,p,rQsBMJts;!bo8LPl5QZn8s;a0Gb0Fc0Dd0Cel,g0Bh0Ak09l08m02nXp1UQrUsRtAwn8yQ;a,oi;hRiA70m53PuQ;!da,ko,o;!iB0ZoBGO;dRmQn0rBAN;ouBBRulA7U;!aBFTer,lB8Bs9GU;cA3EgTiB98kSnQo;!iQ;!ck,s;!eAT1i1s;!tAVU;aQmeA0Zs,uB93;!da,gTha,mRshiQto,zaB72;ro,ta;oQuBK1;ri,to;aBFVucBEK;e,ta;iB8Iki1ov,s,u9V1;i7M5oo0tzATXw08E;a42Dyu;a2HNda;htQk;!i1sBFS;e,u;h,r;a01b96BeXhtml,iRmBDBoan6uanQylopAWG;!za1;aSii,mOnRoQ;maBJMng;di,g,j3EJ;nIoQ;!pi1yQ;an,i,u;nRrQ;oxBH0xA;a,ia,oQ;n,pB8O;nQvi2;aRdQ;er,ir;du,tBHTx;a71e5Og1MKh3Yi1Sl1Qo0DrVuSw8VWyQ;aAFPlQm4nn,o6P6socB67xc21W;dsty3er,ie;da1ko1nderRornBHPsQtheA01;hu,sB2H;bB61kiBDO;a04eYiToQu1yBHG;ngQte,ugB6T;!doQed,fANPhe60Uly,ne7s;eB41iAJC;gTnSstRtQ;!eB6KhB2VinA7Fs,tO;!baAOQs,wA82;g9L9kl8BV;glB2Sht0lB6W;aUckTnSstRtchQ;!e5ND;!ed,i1lBEH;!chBJG;!aBE9eAVIi1s;k8th0;ckBHRiBA4nglBEDpRtQy;h,tO;!p7W0s;ah,bbl8BKe11jtBJWkeB6Yl0Xm0Tn0Po0DrTt4uRveB6YwQyzeB9IzniAYP;ed,i1s;idB6WldQnd8;!a,nBKIst;ce95Id06e,f,kZldYmXn,rVsTtQy;!hQ;!inQle5RAs,w77Ly;e7gAJJ;e5Z3hipQlB6Et;!e84IfAC6i1p61Es;iQyN;eA4NsoBAF;!hoBEFs,woBAL;!cB8Rly,s,viA95wiBC7;!aVbUdB2KeLfTg0H6hoSinA6OloAN6m0MDoAOWp43LroAW7sQup;!hQpaBJKtaBH7;eAY8op0;r9SSuBH2;lB8EorBJH;enB3Jo8J9;b3dB4SholBEH;!ed,i1le7pRsQy;!miB9Fw9I6;erfeBIWlB4Pre7;dSed,f,gBJIhRi1k,lQng,o,st2zy;!doAW3e4JGf,l0V2sB5Xw9I3y;!oo;!bXcWeAC9foMhVie,lUm4pTrSsRwQy;aMiBCDork9K6;!en,h5iBBRm4toB8P;ow,uBKE;e6TGi3;aANIey;ouBGMuBBX;huB8KoB8KuAT9;rAC3uBE7;dRg,kQtBC3;!a,y;erQroD;!ed,fAEKinIlaBC2meKs;anSbRenQ;!foA69s;!at,le;!hoB9QizACYly;coADUd,fRoAGEsB5EveQ;riB8Ts;!e,f,ga1ie,m4rAXGsQ;!baB;fALXs;adQl20C;ek,imBJD;c1Rd1Ne1Mf1Lg1Jki1Il0Xm0Wn09p2MDr07s03tQvAzardAA3;ch01hTle7ne9H6sStQ;!eQy;d,n62Qr;!ec;!aWdrUerShRin,oABKstQ;a677oB9C;eB7Ko1B0;!ed,i1sQ;!po6;awQew;!al0i1n,s;l,m;!blaBAScASXes,i1y;consPdAUSeShRpB04tQ;erBF5fALF;!boBeAX4fAAKi1liBH6y;!a7crack90Gd,guy,ly,r,st;eQi1t,y;!d,le7s,t9QO;c09d02e01f00gYiXkWnTo1CCsStQ;erQhrB4Gon,ry;!feBATg33Uiz5s,tiB8P;!lB6UoB8Ot4YK;!eRiQowBFL;e,ng0p9UI;baANLr0tB6H;!ed,iAABleBGPs,y;fr5ng;!aBCReLi1m4sQ;!p4;ieB6WrB4C;!d,hA6Ar7K2s;!bVchiBAIeTfaA6Xi1le,miA6XowRpiAIKsQwaMy;!c33IhA5Sor,we50I;!ed,i1le7paBsQ;!iBAF;d,rQ;!meH;ag,re9K9;e9hQi1;!eQ;ll,stBE3;bled6pAN6;b08co07d03eAN5f01helm4U9i1kZlTmSsRtQy;!ed,i1on,s2V2;hiHon0;a,er,inALV;!a5Y8eUfAKIiRoQpA1Qs,y;ugh9VHw0;!amRe0nQs;!gBFJ;!s5WV;d,m;e51LiQs;e,nsBA5;!rQulE;ed,id;!caSeRfQi1l39Tm4ne7s;iB3Dl4IZ;!beest,n,rACQst;rd,t0;!ck,x;erQur,y;!f7FG;!lea9PMp78M;aB9WgQht,s,wAVH;iBDNlXOum,y;eAYMi;dersehOld8nBDC;d3eRgAVBmoHowQth0;!eARZs;!ly,nA41r,sQ;c32FpA2St;caB3HhSkQ;!eQhAV8ie,lB5Es;dBEUr,t0;!iBAX;a14e0Ui02l00oRrt,up2JAyQ;s,te,yB50;aBHOev2lVmUoSppB2WrRsQ;!e,o7IT;e2C8i1;!mp,o,pQsh4HX;!eB2ZiA8Js9YL;!ev2;eQly;!heartA16ne7sQ;!al609oB6V;mQsQ;perl1;ch0Gff,l6REm0En0Cp0Ar08s02tRzQ;!z4HO;!ak2by,coAOQeUfA8Uh2i8EElSmRnB2MtQ;ak2en,i2lC;an,oH;ey,oQ;ck,w;!chapALSd,fiB4VhUlig67Cm4nSoA8Zr,sRwaQy;shBBZt2;!iB8Dt;!eQi1;r,ss;aB8KeB1YouBD9;kTperA35tQ;!lQ;eQi1;!blA03d,r,s;!eQiAy;d,r0y0;!lQr8XVs;!ed,i1po9TAwiB8N;!laB4HpQs;eAQTi1le;eBCOi1nQy;iAyN;!p8TLsQ;!icJy;!e8J3;atYeWlVnUrRtQw,y;!h2;!eQry;!aQby,foHin,of,s,up6v2wi366;b5QYs;!ce,ev2;an,p;!lQzAA4;!barrB3Ycha1LBeLhA3NiA7Js;!g9QRiAon;a,ckZddYlXmWn,rVssA1XtQy;!aHchaTevRis,nABQsQta,yB3L;!it,o7HF;erQs;!yB3I;!macallA36;f,t6;!my;eAH2i1;a0ZDya;!ed,i1o,s,y;a0Ub0Rd0Pe0Ng14UhrmacB11i0GjuBDQl08mblB1Bn04pt,r01sRtQve,xl2ym9V2;baB46h2laAJ2ne7s8B7tA8T;en,lB19sYtQ;!bVche908eTfA7GgaB9LinSlRmQon,poAWQsiB76w7CV;in907oreACW;aA0Oey;!ghA34;n,rQ;!ly,nA1Z;ouB7LrQ;idB8JoA5Q;ex,on;eRn5YUtQ;!anOh2;!n,rt,wol9NE;cSdRg,tQ;!w9D1;!eB72iAJYs,y;eslB6EhB7R;cWdVfaHlSsh,tQ;!erQs;!weB0F;!bei1eRheB0Bing2F7ne7sQ;!p9TI;r,sA1C;!eLi1on;h,omC;ghTl,mAZGnSrQss;!dQ;!e9W7i1ly,ne7o9FI;be9U0er,s9WK;!ed,i1s,tQ;!ed,i7FPlQs,y;e5L8iftA7X;d8kQms,n9BIp8W7t,v8PL;!dAWOend5YFl5ISs;d0HYgQloB37neMMs;e9ie,woB4L;b9RGcaRer,l5QZma9Q4paB7RsQ;!hoB96i998t2;m0st;kWlthVnBB8ponUrSsRtherQvB7U;!by,ed,i1ly,mAZNp9EKs;el0lB04;!ab3er,iQs,y;ly,n0YFsoB46;!iz5ry,s;!ieA71y;!e9HUl7BZneB6W;ah,baB2Cc1Sd1Rew,f1Qg1Nh1Mi1Ik1Gl14n0Zr0Hs0BtXuBEPvVwUxTyQzAJP;a,lQne,sB5UwaM;aQon;id,y;eBCJi1m4y;a,k;eQi1y;!d,lengA4Kr4FBs;a02ch00erRkiBA1s6tQ;!aB77s,y;!bXcWed,fVgaB81ho0VHi1lUmSp9E3sRtAZDwQy;ay0or9LV;!h36Z;aQelBC4;n,rk;iBoo;aA25o6MRroK;olAVQre7;ed,orBuB80;!d5Q5eARSfA58inImQt9XAwoM;a4MBen;naAD7ru,sB5X;a3B3hSim,juBBRnBDBp0rt,s9ZNtQ;!eQinIrAIM;!baskB1Id,fA53laB5Tp6JTr0s,wA15;!ab3bRc46NeARMingQoA5RroAP8y;!ton8BC;oaMuAAY;b05cAN9d02e01faHh00iZlXmWnVpUrSsRtQwiB22y;!h9DGiB39s;!aw,hAYH;ant6T8en,iQ;ck,ng,or0;!aB2Ged,i1laB2H;!eAJPiABBs;!e8QBi1ly,ong9PMs,th,up;i9YGoQ;ck0rd0w;ly,n8P1;eAFTol;!housCs;!eRi1roQs;be,om;d,n0r;lQu5UR;e6KBi1;dSe9g,i1k6MCnaRs,tQ;!ed,inIonEs,to,yB0N;!be0;!a,erQs;!eLiAAVluBAZs;coA6ZdYe0id,kWlRmaAU1nAH7po3rDsh,tQ;!er0h2on,zBB6;!aTeSfl9WCiRl1oQp0PMs,y;pNwN;ce,ng,s;d,n9RWr,t0;!by,ce,nd2;!a1AReQi8BGm4oA4Us,wAUO;d,n,r0;!eRm4oQ;!rf;mAX4n;anB6HeQi1;!d,fA4En,s,up,y;f,kiAX3lA5RnSstRtQvB5T;!eAITinIress4D5s;!baB4McoB0LliB;thropp,wrAXR;ey,id,l9RJoo;eA4ZgRi1n2on5W3sQ;!taBCL;ed,i1li1on2;er0flCtN;a,d3e9ZWiA3Ks;kQo;!er,o0y;a50bulletPe36i0Olad0MoVrTsnB01uRyQ;i1vy4xsP;i9VHlQ;cABZgar3GVnerabA7OtuAXJva;eed3iAoQ;nsA0Wom;c0Cd03Ng0Bi08lYm7L9nB5XoXrWss,tVuUva,wSyQ;ageARCeurQu2;!w60V;eQi1s;d,l0;ch9O1l7FZr,s;eB84i1re;ac9LRenDlB9ZtB30;dAH6rheA;aYcanXdemoASWe,ga,iB8JkVley0NOm,odB5MpoBtTuQvo;b3mRntQpt7JY;ar811eer7A5;e0iANY;!aQerB99s;!ge0iH;er,oQsw89W;ff,v;ic,oB44;re,t540;cQd8gAWUla,p,r;eQi1;!d,le7ma8MAov2s;el,l2ue;aQiferoB17;bulAMAlQti8HI;!iQly,s;st0z8RS;!iQo;mBB0vostA1K;a26b21c1Od1Je1Fg1Bii,j19k16l11n0Qol0Mp0Lr0Bs00tUvRxOzQ;ag,i2;aReAUFiQre,y;!anAESdEenB18;!c9L1lA4Un,t;aTe,iliAFTo,rStRuQya;pe2HJs;lAoriAVS;eoDiolATPo;!e,lQm9OG;!e,i7IXly,s,y;aZcWe,hViSor0s2ta0ualQ;!iQly,s;se,zAP7;bB6AonRtQ;!aB7Fed,i1or0s;!arGs,te9RL;al,nu,u,wamitB8C;eraA3HoQ;nAN0sAXUuQ;nt,s;!ge,s;aYen,gUilAXRtuRuQ;leKsB35;alEe0oQ;sQus;iB61o;!e,iQo;l8FEnQ;!al,iQs;aAWCe,ty;go,l,t;er0s;aSeQinB8B;nB6LtQ;!a,s,tB1R;!t96C;aZcWdUeTiRn94ZoFtQyl;!aAH4neASSon;cQng;iDk;!gA5Is,yaAXQ;alAFFicQ;at6SOti73A;eQi,ke;!nQy;nAtB9Kzo;igrA2Ay;a,e,if540lQma,niD;!aReQieASH;!foAQYneuB14tB3T;!geAV0inQnueA1Js;!oDs,y;a0iRraQtALJ;m,nt;!ng0;ayQju;!awaB3J;aB33go,ilRn0OHoQ;!r84Tur;!anQs;ce,tAGA;iB73nn9IIs,tSwQ;!ab3e2MAi1pQs;icB1PoiB9A;!co1nam33G;aTeQs,ur,ya;!oQ;!cQgaAZ2pAJOs,tapC;ass0O6onV3;!l,r;a00ci,eZhy,iYkXoWs,tQ;iToQ;iHrQ;!iQs,y;aAX4es,ne,oD;mQni;!izB1Lle7o85Ks;!dPmB31;!eARNiB8Ns9EEy;niB4Jo8BLssitudA;!nB2YrA75s;!p,rQ;!aB21iA97;eTraQ;nRtQ;e0iB8DoB6P;cy,iASZt;!ke,s;bB43duB7AgB6Cl0tAKJ;al,c1Id1He1Fg1Ch1Bi1Al15n0Sr00sUtSuRxQysADN;at9IMed,i1;m,x;erQoB6Xs,tB5J;an0inar88D;na,pTs8ZBtQuviD;!aA1Bed,iQmB33ry,s;bu3gQng;e0iJ;aQer0;!si4;a0Fb0Bd09e8DPgANQi05m01nZoWsUtRvQy,zeichnB1C;aPe;!eRiQ;c8RKgo;braB7Xx;aQe9iB6Fo,us;!ce,illAt50Q;!nQ;a,iQ;ca,ka,qARU;!aQeB60on;!c90Kl;a,e2iRoQ;nt,uAX3;lQn;i6li6;fRly,similiADPtQz6;a7KDiAy;iQyN;ab3caB4Ie9RU;an43DeATTiQun;!ct0;!aReAUDiaB0XoQs;se,tO;lQtAL1;!izAP8ly;!cQnB1L;iB37ruz;a6IFd00eXgeWiVk5BNoUtQu1HI;!ed,iSriQs,ur783;cQloqu1K2;le,ulAS2;l4X1ng;m451us;ce,s6;anB6Ff9YV;er,rQt5U8zue5S1;aQeJ;b3tB2G;eQi1or0;e,tB0S;aScALHi,ma,oQu,vetAO7;ciQur;raptAJ0tG;sQyudhAKX;co,qu7B9;l8n0;em8H7ic1IL;aAB1etaQgA3N;!bB0Tl,riA6XtQ;e,iAOU;na,p,rQ;!a,ed,i1s,u;a0ek;chAF5tAOS;c1Cd1Bg19i17l0Qm0Nn0Dp0Br00sTtSuQya,ziAF2;dev9UUghQlt8nt5xhaAYP;an,n;ic4o,s;a,cVeUh,ilTqu7AVsRtB45uQya;!dAMX;aQilAPN;l0r;e,iy,y;!cADJliBs;o,ulAR4;anZda,es,gYiUla,mTnSrRsQun,vaB46yN;ha,iB23;iAV1o;er,iAI1;a,iB6B;aScoB2ZeQoAW9;d,g838s,tQ;al,iAy;b8D7n83DtiB4I;!a0heB2V;!aAXW;id,oQ;r3IZur0;adiAQEcYdTeSgRiQja,n3SDqui1GTs,taAZCya;!llA0IshB4HtG;elAZ3uaM;!s2RK;aRerQ;biA6Wgeld2;!lQ;!iQs;sm,zB51;e,ouv2;oRpQ;!ir6J1s;nB20oB2Fs;a05co,d03eWhalB28iUje4kyrA2FlTmoKoSparai913t2uQve0ya;aQe9IGi1;bAZKtiB3Y;is,r,ur;arAZ8e66Hi,on;!a9I0dQse,um;!atAT3iB18ly;!dictor85FnSrQt0;a,iQy;aARKe,o,us;!cB1Ks,tQ;!e,iQ;!nQ;!a,e0o;a,eQ;mAPYs,z;!nB4E;l,nEshQ;aAIEna4NN;aQinaA9Dn,ranAZZue12P;boA8PriA;a,er,im;aScinRillatB4Al9LOuQ;oDum8;atAJ1e0;!n85EtQ;eFiQ;ng,on7OU;bB0cAYdAXeAWfAVgAThAQkAPlAGmACn12p0Gr07sYtRzbekQ;!iA3V;ah,eUh2iRmoB32opAHMrecAQDterQ;!anB0Fed,i1ly,s;ca,lQ;!iQs;t57Yz8UC;ns8FQrQ;iBo,us;aWcAX0da,eUgs,hTinIm4ps,sSt5uQ;alErQ;p9R8y;i1r;a,er8imat540;ab3d,f9ZCle7nASJrQs;!naAUEs;bAZZgQin;e0i;aXbanA88ch9I2du,eWgUiRk3KQls,mi,ns,ol8X3quhaALPsQugu2EN;a,uB0X;ah,c,el,nQ;aQe;l0ry,tB3V;eQh,iA2D;!d,n6AUs;a,thB1Z;be,l0n910;b09co67Vd08f9QYg76Ih05keAJFl03moB2Do02pYrVsStQwa769;a9PFigAPNoQreAWGu0LE;!n,wn;ca3etB0FhA00iAVTtQurAXDwi1;aQreAHY;geFiAMTn9DZrt0te;iRoQ;ar,otAZA;gARUsiA21v2;eQi848saB0G;d,rQ;!cQmoB22s;aB0Jut;lu,n;aAW3iQo2OV;ftB0Lnk;eRiAVQolQ;d9X3ster8OF;av8WDld;atCraADJ;eARWrQ;a3VRin33V;a82b7Sc6Rd4Xe4If43g40h3Ti31just30k2Yl2Rm2Jn2Go28p1Tqu1Rr17s0Et03u01vZwQyiel9DIzip74B;aWeUiToRrQ;ap2H5i3AT;rQuAVS;k9I5tB2R;elAL6llingB0YndNr5seEt6MV;d,lQ;coAT9l;nt5rQsh5ve9HY;ra7BKy;ar4XeQ;il8rifi8J;m,sQ;ab3ed,uAZG;aZeYhinkXiWoVrRu67TyQ;i1pAC9;aSeat8EiRou6TMuQ;e,stwoAKOth9UN;ed,mm5;ce9HQdi3X9in5;!ld,uch4UwaM;dy,eFl9VWmeAZ3tl5;ab3iAIS;n9HMst5th9MY;i7B5le7B5m5nglAKKpp5x5;a0Fc0De08ha07ig06ki6SDo04pZtXuQwer70MympathA6T;bUccessfA59it84lli5ng,pTrRsQ;pectB20tai0W;e,pQ;a2HGrisiAIL;erv7Wport80;!sQ;!c8HHid89Ttan4C;aQeaAKEin9WDopp9HCru1APuARB;b3in5t5;eRoQ;il5kO;a1LcQnt;ifiQtac8V4;c,ed;lQphist1UYuAUR;d,ic7KOv7P;htAYIn5;k6Ur5vO;aTc7B8eSl7RGrQt9M4;!vQ;ed,i4NF;mAYDn;lAXJson4VPtAZ2;ath5hedul5ient2S2rQ;amb3ew,ipt5upu2FC;fe,id,ni4POtQvoAWH;isfQur7Z3;ac7HXi5yi1;a08eRoQuAY6;llAYVmE7;a02cZdeem5gYhears5lVmUpTqu7K9sQv76;e0Uolv79pon7B7tQ;!rQ;a6QYi7KM;en1Xo94Present1S;ark9GKit9VL;at5eRiQ;abAXBev5;as5n9VI;ist9LSul7YQ;epABCoQ;gniz6ZnQrd5v4W6;cil5st0I;ch9GCd65HlRsoQ;naAGP;!iQ;st731ty,z6U;t5vel8;aQestion1B0oAVN;li38Jn382;a02er01l00oZrRuQ;bli6RHni6RH;eWiUoQ;ce2G2d7X5fSmRte7K2vQ;e9TIok5;iDRpt5;es4PJit9FZ;nQv3P;cipl5t9FX;cedent9LDdic4U6p4Ctent9BA;ll5Upul785;a2GWeasantAYOug41P;su5GOtu2P;ckAXXid,lat9FSrQtriotAVAy9FS;all79Rd1Y;bSccupi5ffiUXpRrQs;gan885thod8LD;en5p2O;jecti1UsRtQ;ain9FMru7A5;eRtQ;ru7JK;rv5;aReQiB0Lotic5u1Z;cess4MNed5rvAZZ;m5turAX0;aUeTiRoQ;le6RTtiv7XOv5;staQtig7XNx5;kaAFQ;as79Intion5Wrcif5Z4t;de,nRpp5rQskAVWt6EW;k5ri5;age4Mn5;aVeTiRoQuc9PI;ad8ck8v5;cens5keEm7IPnQst5v9F5;ed,k5;aQss;d5rnNshAYT;b791wfA2R;em4ICiASMnowQ;ab3iAG4n0;!ifi5Kly;c0Fd36Sf0Dlateral6SBm05nWonUprotkb,queAXRsTtSvQx;!ersQ;al84Xe0itG;!ar802e9i1s,y;!ex,on;!iQs;sASXz5RK;corp3EformXhWi1PsVteRvQ;itAZ7olv5;llig4XCnSrQ;estAZ5ruptQ;ed,ib3;d5t3K;pirAZ2ur5;abit54ib7I3;aA9Fed;aginVpQ;air5eTorSrQ;essQov5;ed,iAR5;taK;ach9ECd5;aQed;blAV8tiAR1;i8AFormQyN;!ed,iAV8ly,s;ef,oQr6yc3;!rn0;aVeTinSoRurQ;ri5t;ly,ok;d9JEg5;aQed5lpf9QXrald5;ltAYMrd,t5;mp9JBnd,ppA4Orm5;ainAVDer,h,lRodAVDraQua1QU;c99Btef9QT;amoAEWu5;a01e00iYlWoSrRuQ;lfi6ONnd5rlAVZ;eeA8KiendAV8ozO;cus5ld8rQuAWI;eseeRgQm5tunateAW8;ett9DQiv63J;ab3n;aQinc6JV;g2Z8t0A4;lQni6OZt;l5t9IX;as4W8eAA1tt9IW;iRmili75TshiQthom9DJvo4X0z5;on9DI;liAEMrAWBthf9QD;a01conom4XHd00le7HGmYnWquVsAUPth9WDvenUxQ;am6NRci9SGerc3WpQ;ect9IVir5lQ;ain3YoQ;d5it5r5;!ly,ne7tf9Q7;alATWivocAUU;cuQdi1force2Nlighten5thusia5AZvi9D9;mb9IK;o3SQployQ;ab3ed,meK;it5uc7VF;rRsQ;e,iA3Ty;n5th3ZP;a1Ie02iUoSr14EuQyi1;e,lQ;aASFy;!cume76Ii1ne,ubtQ;abAUCedE;agnWd,es,fferenVgni359l2VmiUsQv3QD;cSp2UtQ;ingui6O7rib2TuQ;rb5;ipl6N4lSov9I4;ni6O4;ti7V0;os5;ad,c13f11l10mocr9X5niaAD2rUsSteQvelop5;ct38rQ;m6MYr5;ervAX3irQ;abARSed;!a0Ub0Tc0Qd0Pe0Of0Ng0Ih0Hl0Em0DneaAN1p08r07s01tXuWvaluCwQ;aUeToSrQ;itQoARX;eAJ4i1tO;od,rAM2;ar,igAJ7nt;t2y;s5til84S;akRhe,oQ;ne0ok,w;eQi9VN;!n,r0s;corCeUhiAESiToALUtQ;aQe2oANKuAF8;ff5ndQt85M;!aACIi9VIs;de,gn5z5;a,cre4KWll,rv5;a9VCeprese75L;aTinSlay5ow9HCriQ;c5vQ;ileg5;!n00Ns;id,nARXss,yi1;a2CXinC;ay,iQyi1;e0nQ;e9g0i1;a9QKiAP2;aARPoTrQ;adRoQ;uAPAwAM6;!ua8RQ;!es,i1ne;o9STuAUB;mploy9X2stimAKE;evelop9X1og0re2BJ;arriaAQ3la7oRuQ;rreAWStAT4;ok5v2;elASUid,ruAKW;chievASJge,rm;et5iv1N;eQin5;at5nd5;id5lQ;ar5;m1OCt5u74S;a0Pe0Mh0Givil866l0CoRrit9U4t74VuQ;ff,t;at5il5llect1Qm05nVoUrRuQv98C;nt5p3th;k5rQ;e7F2obQ;or7TB;k5l,pe22Yrd7HL;ce60XditYfiXne7EZsUtSvQ;eQincAVG;n3QGrt5;am7HHe6NBroQ;ll1Hv2MK;cioRol77QtQ;itutSra6L5;n9ASusATM;n5rm5;ionASA;for4PSmTpQ;eRlQromisAV6;et5ic7SX;ns7SWtiA5J;i9DGonE;aSeQu6OP;!aQs;nAR4rAR4;im5s32T;aQeck5;inAR1lle1OXngSrQ;acterist6X6teQ;d,r5;eQi1;ab3d;a81ns2AYrQ;emon7YDtQ;a8IKi32L;ll5nn7KZri1;a7RGeVias5lUoTrSuQ;i9WFn140rQtt96G;d6O7n5;aASTeak9A3idl5okO;rn,u9OVw5;emi6LEin8ZZo5BW;aRco5Z0iiev9R2knownAJ0lievQn959;aAADer0i1;raAACtQ;ab3en;b0Jc0Ed0Cf0Aid5l08m07n05p01r00sXttTuSvQwaAGS;ailQoidaAA9;abAQNi1;d7DDthori5YF;aSeASIrQ;acA4OibQ;ut5;ch5in99P;!ham5sQ;a4G8iQu5YN;gn5st5;gu4ODm5;olog9YTpQ;eRrQ;eci7RSov5;aA5Yt7DK;imA5In30XswQticip7RQ;er00;big7WMeAS4;aq,loQt9EP;c7RMy5;fQraAJ5;e7DAili7RKord99A;dre299ju6LOo5Z7ulter7RJvertQ;is5;cQhiev997knowleV;eptSoQustom5;mpani5untQ;ab3ed;aA9Hed;aRle,o9G0riQ;dg5;sh9EHt5;ar,bRlauAP0mm,pQ;iAFUte6P9;er9YEilA3CrQ;aANHel5JH;an,cAQ0eAGIisAlXna,riWst2tQyssA;eriA63imaTrQ;aQon;!conservaA3Pm8VFnatio1W5soQvi8R5;nAO9uAMD;!tQ;eEum0;ch,kATR;a,m4;ip,rain25Oule3;hRtr5uQ;h,ra;h,uh;a0Q5lQ;i5ULy;fe,os;da,ki,no,su41X;ay,dAPJon;hiQla,os;da,ha,mo9XT;er,iqu0F8;aGAbAHVchaiko6WGeDBhAQi91l8Zo6Jr20s1Uu0Nw07yQzarA8I;a41Rba9UJc05i1ke,le04neARLpWrQs6;aSeRi6oQ;l,ne;!e,ll,s;!nQ;nQt0;icJo8VUy;eUhSiRoQ;!graphABNs;cAPKf0ODng,st0;oQus;id,n,on0;!ca7C8d,faAOTsRwritQ;er0i1tO;!et9N6;n963r;e,oARF;a04eXiRoQ;foAHEsAIX;ce,ddlAAPgUki,lTnRrl8st9C7tQxASS;!ch8SMt95F;!e,ge0kQs;!acZPie0lAAM;igAEFl;!gy,sAL5;ak9FHeUlSntRrQ;e,k,p;ie6NSy;f9JDveQ;!treA;dQk,n,t8QUzAOK;!le,y;dd3in,ng,s,t0yB;an,b0Uc0RdoAQOe0Qf0Pg0Oi0Nka,l0Km0Gn0Bo0Ap08rWsUtQv9J4xeAH0;ankham9WIelaALWorRs4E6tQu;i,le;!ed,iQs;al0ng;canA9LhA9Lk0sQ;e8M2leF;b00d0eAKGf,gZinIkYl9QLmXnSpRqu1NMrA6AtleQvy;!cA46neAH3s;en9JSin;!aTbuAKDcoAGNdo9ENeA2WiSkAE5oRpi9DNsQt972;!ti3;ff,ut0vAO5;nIp0;bo9KJr9LT;erAMFoAR2;!aAEXey0iAGDmeni9R6s;id,ut;an0iAHDoARWulA7P;ac,eA82peQ;nAR8r6PX;ba,mAJF;a979dAPSeTgSiQnel9LFstaAK1;c,ng,sQ;!iaAE3;!stO;!d,f9JIr,s;blRmGoQs,ult4NI;r0ur0;eQi1;!d,r0s,we5;aAI1iRlQsA3E;e,iDy;o,p0;le8LAtiAQ0;boAFYgAQVs;fA8Qt0;sdA9Q;ci,kQo,s6;!eQi1s;d,rAMU;a,b2BLeQi1m4s,ulAC6;!rcul862s;aUe1iI8oukalANQuQ;baAC5chiALFen,i,kSnQru431to6ULy50Y;aQg;!mi0;amo9VIi6RC;i,ng,o,r43D;a2Ae1Ni0Mo07uSyQ;inQo9VPst;!g4Z7;anAO7b9WAc02d01e620ff00iAOKjilA75ly,mWnUo1sRthQ;!f9LZs;co9LDs97EtQ;!eQi1s,worth847y;d,e7YE;cQd3k0;a5WIheAPC;an,bSpQ;!eQi1s;d,t9DK;o,uAIX;a9J6le0;e94UgANXi,y;e,kQ;!eLi1lo9TJs;d03e96Gg,i02j9QTll01m00n,op5S1pYtWuQve,w81Wy;!bRgh0ncANTpeA69sQt;er0se94P;ado9J6lQ;eQi1;!d,m8IZsQ;!hoot8QQoAGI;!h,sQt92W;!ky;ez,hGicQ;!a18Ss;av9EMboBp;!ey0i1op,s;!ka,s;!dO;a0Nb0Ic0FdeKe0Ef0Dg0Cl0Am08n06o05pYsXtWumUvQx97V;e9K8iaQ;!lQ;!iQly;ty,zA7X;phQvi7Y2;!a9XNed,s;e,iAAIon;!hA52ta3MN;!aVe,lSoRpQs;!ed,inIy;d,li;eRiQy;caAK5ng;!d,s,t0;dvisA1WrtiAK3tAIA;!mpAN6;a,e,iQkA3Q;!dAB9ty;!b3e8AMmQs;eA0Ci9NW;by,lQo7MG;!iAPGs;!g91MlyceriAKWonometAK2;ecAJCfi9XQlC;d,n95Mr,s8TJ;eRia,kQord2yc3;!e7B8i5XRlCs90Sy;!ps,ratops;al,bTeSuQ;laAMBn0VNtQ;arGe0;!ca,sA91;ia97Ile;d0ge,l0ngQt1VD;le0ulaQ;r,tAOX;a05b03e02k01l00mVnTo,pi0SVsStiA37vQy;!iQor;!l3n;!pass7GKsAt3;chQd8NCtAHH;!aKe87B;aTblSeRle9JEoQ;nt,r0;!n4U9;!ay,e9i1;iByB;awnAATlAI4;!ki1s;!h9CQs,t9IM;ek,lQ;eFinAC3;cVdUsStQ;!ab3ed,iQmeAOVs,y;es,ng,se0;on3MIurQ;eAL7iAy;!i1miAGRs61OweAGR;her865le;c1Id1Df1Ag18i13jec6RTm11n01pZsXumaVvRwl910yQ;!nA0Ms;!a7ZNeRiQolAIA;aAI9s;lQrs7T8st45L;!eLi1l6ZPs;!s,tiQ;c,s5zANP;hQk;!c4eAMXi1y;!doA0De9XVpQs;!eLi9MH;!c0Og,ny,q0LsQ;!a0Hc0AducAK6exualAH2f05g03i00lZmVna3IKoce4EWpRs4YIveQwa9X3ylv3JA;rAL0sti8J3;aSirCla9LCoQ;!nd2rtQsALB;!aAEPeLi1s;c2E2r6JP;at,iQogri2V8u77A;s7NStQ;!s,tQ;a1VLeLi1;at8KCuAFB;eKstA62tQ;!iQoAICs;ng,on1IXve;e8WEressQ;!iAM8oA6P;erSix5ormQus9V3;!atiQeLi1s;onAD4ve;!abAJBe0SXrQs;a1VAed,i1;eSont4C7riQ;bAH6ptQ;!iAM0s;iv2ndQ;!eQi1s;d,nQ;ce,t9MT;ctRtlQ;antAHQ;!ed,i7RU;!uilQ;!iQliAJ5;ty,zAJ9;e,he;!ad90Bm9SGpQs;!i1lAKEoAN6s;lTnSpRtQ;!or8HTs;si1;!ab3e4ABi1s;!blazA8WeLi1s;eQic9PBs;dGr;algA7SfQ;icQoM;!k6Y7;ab3eTiQ;ng,tionQ;!alQs;!isAHOly;!ab3d,mark9VWo5SLr0sA6H;eTheSi9ECkRtQy;!ab3i6or0s;!baAASeLi1s7IJ;a,o9TV;!ab3d,r0s,y;a23b1Zck,d1Xe1Wf1Vg1Tho,i1Pjo387k1Ol1Im1Bn17o11p0WqA6Lr0Hs0Et09u01ve,wVxiTyQ;a4V2ed,i1m8ONoQs;!tQu;a,o9HA;cQe,n0;!iAIBol6B1;aAAEeTi1l2nQs;!e,h7ZLie,sQ;!eAEUfo993hQpeop3;eAETip0;d,l0rQ;!b8AIed,i1s;chWghVjouA57loUma,p9U7rRsQt8ya;!saiK;!e8PXiRmaAM7nQs;ameAMCey0iquAAC;ng,sAF6;n,uAIZ;!e8PWne7t;!d8R0e9i1s8PPy;alReQh,i9DNo,s,t85N;!d,m,s;!ed,iQl581s;ng,tQ;ar9IKy;a,ca,hQs965;!iQ;!ba,ko,o,ro;a03bOch02e01i00ment7OWnZoYpXqA5TrUsTtQu,vaAABy;!el2KIil5B8oi8UDs,uQ;ga,oDrQ;eAIBi1oD;o,tO;anAKZeRiQ;d,o;!nt1D3s;edo920or;!n9PWs;!adoAEF;!es,no;!ad9XL;!bear2eAK3i1woABP;!h,na94X;aTe37Rh93NicAAUle7moAJRoSpRsQ;!iAD9oAKDy;e9W1i9JLlC;!g8H8lo7I5;n94Sz;dlAk,lTmA77n0tQ;!hQi3JRle,s92W;!acAIMbru61Zed,le7pQ;asAFHiA9A;!bQe53Oi1k98Sm8DNs;ar,ox;al9C2da,e9D2gSiRk36PnQo,s3K8to,yA06;aAEIe0ie;!a,c0gA6Pn3PJo,te;!a,s,ue9;aVbUcA9Fe6KXfoo9NBiTlin6XNmRoQpkiAH8s,y;!e,ko,rr96P;a8GHiAKVoQy;!rA94;!e,ko;!oy,s7IO;!hawk0n0s851toADP;d,eTkiOlRsQya;on,t9J9;!b8VQe9VFiQs,y;ng,v2;!do,raQ;b3n6R4tA8D;eA8Xi94So,u4ZEyo;lQne;!eQi1s;d,tQ;!rGs;aAA0eQg3o;!ther9FL;f9SDt,u;d,i9C0na7VKs;a5LFdQo0;!lAGCy;aRbe,eA1KiQruk,y;!as,n;!ccoQgo;!niAIL;d9PBstQ;!eLi1ma854s,y;ak,hQing97S;at,e,is;a1Bb18c14d11e0Zff0Yg0UjuaA6Zk0Tl0Qm0Fn06on0p01rYsXtQvo9VOwa9SLz5KT;aTch,he,iSlCo,ra,s,tRuQ;ba,lA4Vs;en,iACWle,y;!ll4LC;!nQ;!iQs;a,c,um;da3h,s982;aReQi1;!d9EYleA5UsA9U;!de0mi4JE;oAKBpSsRtoQ;e54Un,p;!t2y;eQi9BAy;d,r6PZt;a,cAC7derXe9ZAfoAIMgVie9CLkTnSo,sRtQy;!ed,in,s;!el,lA5I;ed,itDy;!erQl9DVy;!beABNed,i1;!eFlQs;e0i1y;!b83X;bWeTiSmRoQur;!n,r3H7tAIT;iAFKoAFKy;d7O7ng0;!d,fraA9Bk0F2lRo9NVp33Xr0sQt4GG;!a6H5haH;eA58ine75Iy;erQre,uk822;!lQs;aQiB;ke,nd0;buADKdRe9lQt8;!er,i9AUm4y;a,eA5A;es,i;er0gAEYhRrQ;e9BXis;!tQ;!e8MOly,ne7ro9J3s;!anA23in,y;d,h,i1nAIRrQs;!ed,nA4Qra,s;al,bA7QeRiQweAAXyN;ed,ng0;!s,w96I;hy,kQo,s;!eRi1lQs,toA7H;e9i7GC;d,r0t8PP;b22TeQi9XNor;rQt9AS;!iD;go,nQra;!aQjP;!nmO;a20e19i0Xls,o0Lr04uRwart8yQzt;me,roA72se911;d01Eg01le,mYnSrQsE;goA8Km4sQ;by,dA0Kt6;!derQk;!bTcSed,heA3Si1oDsQzoM;!tQ;o6G0ruA70;aAD1l4LU;iA63o06G;bQp94V;!eQi1na7T8priKs,z802;d,liA4X;!geACIs;a04eYiXoSt,uQ;!sQwA2M;h,t8MM;!at9R1bTes,mboSn0WStDWughRwQ;!awA2JbaA6PeLinIn,s;!o9AAp9AAs,t;lytAC6sAB2;!bi1s;ce,ft9MVll9G7vC;aTeRshQw;!i1oA3F;!foA66sQ;!o7XX;dQt4U0;!baHed,i1s,y;cQll,sh8UP;e,i4;mZn93WrUse,uQ;!ghRsandQ;!s,th0;!tQ;!f9CDle4O6s,yA5C;!aSe8VIin,nRoughQpe,s91LwaA5V;!br2ANfaA33ly,ne7;!dy92Re,f99HhiA9Hie9AAs,t6y;cQx,ziB;ic,o9OH;!asQps6s91G;!iA43on;a9M8b5KIckZeWgh0js,mb3nSrRsQth2;!t3;dAEGst8RYt28R;!e,g9E6kSly,nQs;eQi1;d,r0s3OX;!er0inIpA2Ks,we,yA4Y;f,rABHvQ;eQi1;ry,s;!eQne7;n8r,st,t;a0CbAe,ft0h9KWi5OEj0BlA3Cm09n05Eo02rSsRtA18v,w,yQ;!juAF6ll,re,weH;a8JFe2OWis,pi4saloniA1O;!aXeTmQon;!al0iAB1oQ;!dyna0UYmACOnucleA1JsQ;!t8R1;!a4RQby,fSin,oRsQto,up6wiA60;!a,e,iensta4JV;f,n;orAGIr9SH;!pQ;eutA9Oi1JRy;!cr9FTdor9KGlogUrQ;eRiQy;es,st0zADN;m,ticQ;alEi9GK;iQy;an0cJ;!aQe9sel8OP;ru,t6HW;apa1Gob;!ndromeAAFtQ;er0rQ;e0icQ;alEs;cker2F4dYiXk98QlVmAnSr,tQw8y8YC;!awA0Qch8SBjuAEFs,tab9EKwQyA40;as,e;!e,g,kQos;!ed,f9IKi1le7sQyA3X;!gi6DV;er,iQliA0F;a,domiA7S;!laA8Cs;!deD;a2Gc27d25e21fl6gan9UWh20ja,kPl1Fm13n0Lodo9UCp0KquiACIr05sYtVut85OxQyACIzuA35;aTtQ;!bo7EVed,iRs,uQ;al,re9;le0ng;co,n0s;anDe,h7RXraRsuQ;!o,ro,ya;!r9YZ;co,la,sVtQ;!aTb5e9TUiQoste2O0s,y;c0RBf5YXmonQng;iQy;al0es;!b3ment6YU;!a0U4eraAE9ie;e03iAFje,k9KMmZn,rQseEt4B7;aWeViSorQy;!iQs;s9PTzC;!aABIblAB2e9WDfQtorA7Z;iQy4KH;c9HIeADU;!ll,nAEHst9P5;!cQfor5J0in0n03P;e9otA8X;!ed,iQs;nQte0;aQg,i,o7BUus;lACCt8BG;!nAEAsa,za;ee,id,p8XT;a06cto05dZeYfoA3FgXnVor0sTtRuQzP;oDre9;!aQh0s;cA8Xti9BG;!e9VWiQ;le,on0;aKeQisA76ys6;r,sse8L1;!a,o,u;meAEUriA2Vt0;!eRinQon0ri8UHs,ulk9ZH;g,itA7V;d,nSrQ;!ed,i1lQne7s;oPy;cGt8OR;neABC;b3ci9BZnA9F;eN6pQujP;!eWlUoSs,tRuQ;ra,s;!aABAed,i1re7s;!raQ;lEr1WC;aQe71J;r0te0;!rQst49Z;!aQed,i1s;ment9VKnADGtQ;e,u9ZV;co,eRfoMlQos,ugu;!er0in7WBs,ta3u4O9y;!c03g00kineZmXnoveAAQol4FWpSsRtQvisADVx;e8V5h6ubbiAy9E8;cop83Vis;athThoRortQrompt2;!aAB0e9OMi1;nQto;e9i7USy;!ic9G5s,y;aQetA8B;chDrket1AUti9DH;sA70tA84;enA83raQ;m0phQ;!ed,ic;aAC8harg2oQ;mRnQ;ferenc9VF;!muQs;n2KPt9VD;er4r4;d,g2i1mSnRp9LFs,tQ;er8hN;!age9K2s9UOy;!i1u;dy,iQ;oA3Hum;hRt2NSumsQ;eh;!ie0nQrepu23Ds,y;iToQ;!cr8NKd4LVlogQ;iQy;c9UKes,st0;cQq91B;!al5Y4i9DAol9P7s;cVg9X2h90ZkUl,mSp995rRsQt09Z;!da3eA9Mi1poABI;!dr96Tf9FLi1s,y;!ed,i1ma87XsQwoADD;!te9VW;!e6GQ;hQup0;!ab3e5KFi9B4;b2Gc27d26e23f21g1Zh1Xi1Tji1Sk1Kl1Am15n0So9CFp0Or0As03tWuVvern9W2wTxRyQ;l9OXy9XN;aA3FeABFiQm4o6R7pay9YN;!c3NZderm8SJed,i1ng,s;dA78nQ;ey,i,y;b,g9YCnt8pe,r9TDt;a,e9Y6iVo,sTtQu9LNya9ZJ;erRleQoo8;!ta3;!ed,sA4P;!uQ;!o,ya;!a9ZD;eVhUkTm37Ks70CtQ;eRiQy;e95Dng0;!d,f9EYle7r0s;!e9N1f6ABi1ma7XAs;!a,i8Q7;!d,r9LF;a01dZek,g0EFiYko6FAm9KEnXoWpVrTs9VXtQu9YJyn,z4;!aQer,s;n,rQ;!e,s,us;!aQed,i1y;g6nt;!aulPon,s;!t,u9HB;!aA94i0MY;ff0k,q;es,iQy;ne7s;!ntQs;i9Z1u51C;as,eRiQp8BQs;ng,o9TB;!d,rA8TsQwo8K5;!trG;a01cre95Td00e,gXi9UZja,k9A7nUo,s9T0tQu,vi,ya,z36V;aRo,rQ;a,ic,um0;liQm4PB;si1z9JB;a,eQi1oy;d,nQr;!ba9W2;!eRiQle9o0uy,y;bA5Ler0;ntXGriA0V;a1em,oo9JYy;!be,ka;aSbou607e8DOiRm9UNpQra,sPura;a,erA8Don57U;!k9WFl,ng,ya;!ki,le0n9Y7rQyo;!a,iA3R;a,botAB6cYeWiVkUlRmQon0w9W3yn;adA4Oud;!ahass9J5e946iRulABMyQ;!ho,i1;eA9Snn,s;!a9KWeLi7A6s,to,y;!a,b4sm9BA;!ntQs;!ed,le7s;!um;aVeSiRuQ;!m9MQya;!ga9X3n8XB;!aw9VKdRi,n,oQr0s6EYth,zo;!ff0ut,vA6V;a,o8XA;!da,gi,h4AAko,muA8Qno,o,sA3ByQ;a9XAu9VO;k,ma;cA38ga,i,ji,ko,lRnQp8TLs,t,wan253;!t8;!ed,gaA4Zi1l5IYor8pi9AWsQ;!pP;iQoe;r,ti8C3;al8ATgQoHs,ucA32;a9RZe9L8i1;fQt;!eA4Ay;jPkRlQ;on0s;!o,won9R0;a9ZWd,eusz,poA4G;hWitVkUoTs,tQ;!f9CWiQle7;cQle;!alEiaA6Is;!ma,s;!ed,i1lCs,y;!ly,u97V;!e,i78UyQ;!cardi9XCon;aWb7UZernac3it9QLlSoRs,ulaQ;r,tA9W;o0r;eQi1o9KL;!au7ULclo90Qd,sRtQwaH;!op,s;!poA8E;!sA60t9QE;a01VbjA8QcYPeUKfUJhQ0iNPkMVlLCmKInJNoGXpDWquDJrDIsDHt74u23ve20w0SyQza9UM;bA8Uc0Qdn9VSed,kAl0Mm0CnVphilA33rTstQ;emQolA46;!atiQic,s,wiA1O;c9C2z5;acuA6LiQup0;a9Y0n9GZ;a04cZdYeVoUtQ;ax,hQ;!eQ;siQt9YT;s,zA36;d,nym848ps1WL;!rgQ;iQy;es,st6B3;icA4Pro9ZH;!ed,hQop76J;!ed,roQ;!nQ;iQoDy;ciA55z7Z1;gog8XGpQ;se0tA3L;ant3AUbUmetrTpQ;athQhon8PIosi98Ltom941;et6ASiQy;es,se,zeA5P;ic9QIy;ioTolQ;!iQs;c9BBsQzC;es,m;nt,sA27t547;ar,labSvQ;aQe7TUi843;in,n;le0us;a8O1oph0L;a0Me08iVoRuQ;m,ng;llOoSpe,rQ;dQe,n;!fi9X0pl9TCs739;nA5Np8sh;ft01g,llNmZnWpCrl86WsVtQv9DV;chQz1XT;!bSeQi1;d,rQs;!oo,s;laA0DoaM;h88Qs;dRe0gQ;!er0inIle,s;lA1Zon;!mQs1JBwe9T6;er0i9OB;!e919ly,ne7s,y;aXdWeRlQns6pt,rvA5H;l8t8KT;n9U5pStQ;!ba9X0eQhea9TLie0ly,me9WMne7s,uA0Ew8VZy;n8KMr,st;!er0i1sQ;!ta9AK;e9CCi9WE;rUtQ;!eLinIpSsQy;!hQ;i9TDop0;anA2T;!engOi1s;b712gZhi9L8in,ll5CTmYnWpVrUsStRyQzi95I;!ed,i1s,ze;!chA0PhA7Ri,ti1;hbuck9J4tiQ;ka0;ek,m8t5EB;!na,pA72s;!ee,k9OXn,sQ;!ea,on;!i8OCp85Wy;!g8K6;in,lA1VnRtQ;a,la9UF;!d,ga9KVss6;a4Pb38c32d30e2Zf2Ug2Nha8PPi2Kk2Il2Cm21n1Op0Qr07sVtUvTwa,zQ;anRe9GJh9VEiA7EuQy;!ki,r4;!n9Z8;ar8W2s;h1WKra,t4HRu9T3;aYcept61Ge,hi,iA79pUsStRuQy;!mu;ain9VZenA6J;!eQm4;d,x;eQic0FI;ct8nQ;d95KsQ;e6E1iA5K;!nQ;!a,nQ;aA7Ne;a8Z9char9E9e07f04g01i00ly,mZna7N9pYrUu,vQya;eSivQ;aQe9i1or0;bA2Kl;ill7A5y79Y;eRoQ;ga45Rund8QE;alQnd8IUptit79Ry;!isA42;a84Olus9ZMris75Z;i6FYount6RS;!nd2;eRiQ;cA31ng;!d,on0rGs;!acRb8LXeQi1s;d,it,r0;e9i1taK;!fiHly,r,s0T3tG;er04pTrQ;aRemQ;a791eA3Qo;!na30R;er6HIlVoRressQ;!aKeA4YiA62or;rtSsQ;e9OSiQ;ng,tA0P;!ab3eLiA2Rs;antA36eRiQyN;caKe9KG;!mentQ;!aQed,i1s;l,ry,ti6;!b07c05f02g01hZiXlativAmVnUp37EsSviQw96V;l5DAsQ;e9iA5Qor9B3;!edConA0BtQ;ar0itio76RorAruc9YI;at3UFova0;aQen,od7WX;n,rk9JUs6F8x;mpo9C8ntendQor7KU;aKeA5Y;eQighw9QFum4;at5ro9YM;i943l9PP;aRiQl6E7;ciA22;miA1Wn;ar,edeA48harA3DoQ;mput9RFnduct71T;!ly,oy;a,bZdXe,fl36VgWiVk855l9R5nTrRsQt4up;!c1QOet0hiBpoA0Dt6RE;iA2BooQ;f,m;i8X0yQ;!da3va3;l,ta;!kyunkw4la9Y6;aQer6DFiJo8RQr7KP;e0nA4Kr,y0;aRe9JAlo9U2urQ;nA0Ost;e,th9N0;aZe48JiYmRn2o,pQs;!t6DN;aTeRi0POonQ;!ed,i1s9XY;d,rQ;!h8SXl9CYs,ti9V2y;!rQt5MF;iQy;es,ly,zC;!da,ko,tA2T;!n,tA2S;eUfTib4k8FOlRphur9NVtQu;an80Xry;a,en,iQy;ed,v4;a9Z1i9WMur9NR;im4k9L7;eki3IJiQ;!ya9PJ;c4B3ng,sRtQ;!abA0Dca8D6e9i1or0s;!se;arUgRiQ;!ta,ya9R0;!estQ;!ed,iQs;b3ng,on0veE;!cQed,i1m4pl9OWs,y;aBo9ST;fQi;er8BUiRoQrage9DEus5;c9RZlk;cQx9X5;e9i3WD;dA45n,s,y,z;an1YJdenEha,oQs;!ku;cRh,kQre,ti6;!a,eHPi1l9LXs,y;eRin3Z2uQ;bDleKmb8;ed8ssQ;!es,f96Ki6K5or0;a15b14c0Yd0Vg0Uh0Sj0Ql0Mm0Io0Hp0Fr0Es01tUurbRverQw9M8xp8CTze9IH;si747t8;!anQia,s;!iQ;tAzaA0X;eUiTlRotJrQy941;a08Cop9D2;eQy;!r,tG;tlC;rQxt;fu9X3r2HV;!cri01e00iVpaA2XtRuQy60A;m5rfaA2W;aQitut9YVra7YI;nQti6;ce0daMtiQ;a18CveE;dRstQ;!enA2Q;eRiQy;arGes,ng,z7T4;!d,nA2Ns;cA09que8FXrv3YVt0;b9WWpA08;eg0V4ip,outinA;l99EoQri9TA;ena9CCpu5EH;dh,pt3VUrd6TU;aSerRiQ;ssiA0Yt54A;geFsi7BV;chiBri9SG;eSiQ;g9OOmQ;e,in9ZE;a9ZTt;ectQug9IF;!ed,i77Ns;aQea9B2um4;dA0RsA3H;ro4CR;iviRuQ;eFrJ;d9ZYsiA17;atego7WGlaUoRuQ;l7V2tan6VZ;mmitt8SXnQ;sc75LtQ;i16Wract75O;ssAvi4;ed,i1u;ru,ssembliAtBZ;r66Wsi6t,ve;a45ds,e31i2Eo1Rr0CuVyQ;lRmieFrQx;eBofo9GG;e9iQus;ng0sQz5;h,t6D9;a9JQb04c03dZff5AEltif4BRmYnVpTrRttQyvesaK;er8VTga9JP;d6X2gQm;e6is;endoDidQor;!e8V4itGly;!g,k,nRs,tQ;!ed,m9NJs;e9CRi9I2;blCp5A5;!d5eSiQs,yN;eA0MoQ;!s,usE;b840nt0;co,k4LM;!bQs;!ed,le,orn9ZJs,y;a0Le0Ci00oXuRyQ;ch2CPk2;cSd970gglCmRng,tQ;!he9KOs,ti1;!mi1p9PVs;k8JXtQ;!urQ;alEe9i1;be0de,ga0JBh,kCll901m4L5nQud,ve;gQti9M2;!a89Ve8UIho9N9ly,m4;at92QcYdWfe,kUnRpQv1F7;!e9li1p6CSs,tea9YC;d8GWgQ;!eQi1s,y;d,n585r0;eQi9HD;!o8TSr0s;eQi1;!n9YGr,s;kRtQ;!e8U7ly,u9MZ;en,la9TO;aWeTi9FOnRp,ssQt6SPwn;!e9ZSf8SWi1o9K3;gQuo9R9;ht,th4DH;p,tQ;!c9LVl59Bs,wQ;alk2i9XV;k8mQ;!eLi1l3O9s;d07ggle9JVi03k2nYpXsWtRu7vins8Q3wQy8;!b6VAs;aTegRfoMi283osQt6u1LX;!pher4W3;iQy;c933es,st0ze;!g8I7;b7K3se9YX;!le7pA02s;d8gQ;!eSlQu5BX;eQi1;!d,ho9P3r,s;!ly,ne7r0st;ghtRn8NBtQ;!ja1XPs;!aw9L5eQforw4GNja1XOs;d9TWn8r;dlCivW2;ck0Ad09ic08k8SCl07m05n01oZpXrRttlem1SUutEve9G2wQy;!aw9INeF;aUeTi2UJk0m58GyQ;!bQli9PPt8HW;oQroo8LQ;aMok0;!d,froA0Eh8O5ke8LLro9C5s,y0;b3ge0;!g80Ll9LTov9W6pQs,w8N8;a97FeLinI;d,ge0lQp8;!be9SKie,s;eQg,i1y;!br8SFd,hRr0s,waQy;ll9X0re;avOen9TF;achQp8;!ac9XCs;e9M6id,le8KE;!al9W5k;daMgy;!a9RPbrok9LOe9AIholQi8Y2m4pilCro9BQs,t6we9RZy;d9VSm;an,ck0Af07g04l00mulXnUpSrQtA1x;!li1rQs;ed,i8XYup0;eQp9B0ul9UY;!nd0;a,e,gRkQs6t0;!er0inIs,y;!er0i1r9K8s,y;aQi,us;nt0tQ;e9i9RSor;!eSi7Y4lQt98L;!bo8X4e9A4i1m4ne7s9RUwQ;at2e9RK;!s,t4T9;!maQ;!tQ;a,iz9YN;fQl8R7;!eQly,ne7s,y;d,n9W7r,st;!er0iQl2s,up,y;er,nJG;a0Odm4e0Hf0Fgm4in0El0Cm0Bn09p01rWtVvTwQ;!arQe4HMi8QWs;dQt;!e9RWs8VI;eQie;!n8XX;!h3BVs6;eoSilRli1nQo99I;!e9X9ly,s,um;e,i9RO;!s,typQ;e9i0MB;!an28Bbro9FMc4N4daWfVhTla8C4moSpRsQ;!i8AKon;e8QPinI;m,th2;!anQen8XMie;!e,ie;a9FGoM;d,ug4PE;!ch,oQt;!g2WO;!m9XVp93Rs;i9UXlQ;!a9WNenbos9HU;!ar,be8DWer,me8VE;!anQfi;!i92Co;d,lUn,pRrQ;!a9RRed,i1pi8JRs;!e8FXlQne7;eQy;!cha9V3;!e,he9JRma830s,workQy;er,s;dSk0TElRmQr9UE;!bo9MKeLi1ro74Bs8ULy;!er,inIs,th4PN;!fastEiQm4y;ed,ly,ne7;b1Hc1Edi9Q7ff1Dg19h18i15k13l10m0Xn0Qp0Nr08s07tUuSvRyQ;!ed,inIs;eFi1r9UE;ffen8DDnchQ;!e9W9ly;!eWh9BXiTs,uQ;a9SCeRre,s9QQtQ;e0or6NG;!s,t9S3;c,ng,onRstQ;!ic7AB;!a9S7e6JHi1ma7INs;!d,hoUl1V6me9XUn,rTsQwi9PK;!i9PJmQ;anQen;!li8J1sh9IY;!o99H;od,u9UE;!h9UIi0;!b02ch913d01e9fZgaYinIkWlUr5Y9sTtRvQ;a9UJe9inI;!eLinIlQs,up0;eFi9DE;!c3XRh9IOk9EMmerchaK;a,et,iQ;g9IZng,t;!eQly,ne7s,wo9NJ;r,st,y;te0z2;iQle9LD;g4NZre,sh;a9RGom,u9VI;a9TZoaMuQ;ck0r9VG;h,lQ;eQi1;!d,r0s,t6;!cVdRf831ge7JGho8X7islaQk,l9IXn9Q8t6za0;s,v,w;!ard730by0er,iSoRp81UsQup;!ti9P2;ff,ut0;n8J8sh;e0h;foMi9JOm7ACpQ;!eQi1s;d0FQr;ag,eRin2VZk8V5lQwa9I4;!ed,i9WJoBs;!ma9QYne7;eQi1;!d,h85Ko917s;d,n83OrQ;!ca854s,wQ;ay0e8L3;l,ma;!eSf57QgRi1naQs;nt,t9W5;!er8WA;!coa9FRd,s;!eLi1oMs;ca90NeRhe,ie,kQy;!ed,h8K7i1s;!e,y;!bTilQle9BWs;e,iQ;seFty,zQ;a9T8e9SQi1;ed,i8UD;hh,sh;ivaCQtf5XV;aWeTiQ;dRggl1KVnt8PKrQsh5WS;e0m9SZrel642t8;!s,waM;aReQl8CU;g93UzC;k7U5l8INmi9K7;bUdTlSmoDnd788rRsh9SUtQw37F;!s,t9HO;e9CVi1;id,l0or;!r9U7s;!blC;a2Ce1Ih1Gi0Xl0Qo07rVuRyQ;d2g56Zi1waH;d0nSrRtQ;n8HYt87N;!ioDn9R1r9UXs,t8;!k9CS;a00eXiSoRuQy;ceFng;ck9JMut8;ght9RPnRtQ;!e0z8DN;gQkl9OZt8TT;!b9TFer,f8NIi1sQti9LE;!teO;adQchOe0;!er0i1sQ;!he998;in94Cng,t9V4wl8y8HZ;ck,il06k02nZoXrTtRuQ;s9TKt9S5;!lQs,t7C3;e7ight8ON;ad5WPe0k,tQ;!ed,i847sQy;!cQm6PMwe9FU;a7FXe5JO;f8k7T8l0nQ;!er,f8MOi1s;gQsor7H2tane95T;eQi1y;!b4BPs;aBeQ;!n,sQ;!m9G7peQw8VL;op3rs9T7;!a9O5eLi1sQt;!po9C4;aUeSiRuQ;rg9CGtt4Z;c9RTff,nt5L3t9R3;en,ndQ;idEo8ZC;sh7UAtQ;!t76R;c07de06e05f6BWg90Mk6LCl03nYrTtRvQ;ak,ey;!e61Cfi9G5s,tQz8CN;er,inIle;al5U8e0itQo0;!ed8PGs,uQ;alQs;!iQly;s9RJty;!aTd9OAeRks,n8AoQs85Jy;ff0za;!lQs;e7li;!ch,l;lQt;!a9NHe94Qi1ov2s,w9EP;d,g8Z9l4DKs;r8KEy;!e8LXi1s,y;er3V0inQ;ct2x;a0Ec01d,eWlTnRrQw8;an82Vm0ry;ce9S0dQs2t;!ab3er0i1s;lQt;!bQe94Fi8RZm4s;in83Tou9M6;chTdQr;!bo9I3ed,iRoQs,up,w9EBy;!m9AJs;er,ly,ng;!es,le7;!iVk58Cs,tRulatQ;e9i9KMor0;aRer,or,rQ;a8MJe,om9ADum;cQt9BM;le0ularE;alTes,fQm6BXoD;iQyN;cQe9RY;!a0FEi9P5s;!iQly,s,tG;sQtGz8PR;e9t0;kRrQ;!ed,he1EEm4s;!eQinIs;a87LrQ;!p93Qs;cZde0ghYin,ke,l835m,nWrSsRtQul835wn8y,z;!e,iJs,t2u9PP;!m0t9NC;!c,e9i98YkSrRseEtaQ;!cDn0;ed,i1ow0;!ed,i1l7ZPs,y;!d9KCgle93JiQk5TMn7SPs,x;a9GSel,sh;et95F;eRiQk3;ng,oD;!c92Qd,iy,m4po9A5r0sQti9IRy;!h9DZu8GB;a2Db2Ac1Zd1Wf1Sg1Rh343i1Pj1Ok1Nl15m0Un0Mo0Ip0Er06s05t04uTvSwRyQ;a,be8STou,uz;ed,i1n,s;ereign9JKi96K;ff3g9E7lZndYp7TBrXsWtQvenY4za;er,hQ;!aTb7NHeQfo9SVla9KYou9PCp7YIsi9KDw1HN;a1HNrQ;ly,nQ;!er0mo9QR;ll,m1HQ;!a,u8DS;!cCd8QMed,i1pu7;!bi7N8e92Zi8QJly,ne7proof9NRs,t0A2wa9JW;!d,f8K0le7ma7N7s;he85To,to;a,o,uh9FC;aC4bWcerVd9GVeTgh9COor93VrRs,tQy;!a,eLi8JYs;!eQie8L3ow8JUy;l,n8WF;!ly,nQs;!e7s6;e9IBy;et,onB;hQp4E0ra7LHs;!iQomo9DO;a,e,stQ;ic5ATry;k89InSo,r65Js,tQ;!hQy;e9i97Ss1K9;!e8KQg;aWd9PNe,gViUja,nToSs,tQu,y96T;!aQ;g,r4;!fabit9B1gr95Pma,ra;et0y;!a,c,y9CO;!biMs,w6PY;!li,r,ta;aZbYeRmeQ;!li2r0;!bodGd9C4h9FOo9GUp906rsVtSwQ;ay,hQ;at,e9D5;hRiQ;me0ng;!in8DP;!auFMet;erEre855;!li96B;a03d02e01iTly,oSs3IFu9JKvQ;ab3eQi1;!d,n9M4r0s;!i9PHm6n,s;!citVdSs,tQ;aQu9IY;iHry;!aRer,iQly,s;f5AEty;ri9MT;!a9NVed,i1oQs,u9IT;r0us;!d9CFil,ly,mn6VSs;!a9LQerNi74E;ce,nSrQ;!iQ;s,um;ge,o;ar,ka;ou83u;l8rQ;!ee;gy,o;a0i8UJtQ;!ba9IPeRie,ly,ne7wQy;aHo9GR;n8D9r,st;a0di1i9AYomQs;!iQy;te,z5;c2iSkRo,ratQ;es,ic;!e39Ti1s;aTetSoQ;econQl90Fp0CL;om9KL;al,e,iAy;b3lQ;!iQly;sQte0z94S;e,m,t90N;a,bRer2RKriQs;e9LWqu9E7;ed,i1l1;k8mApQr8ve;!b7AHs,y;a0Fe0Ci05oTuQyd2;bRck,ff9MWgQ;!gl9N3ly;!b9P7;bZgYoXrWtVut0wQ;!bTdOed,fSi1mRpl9E0sQy;!h49Vto5NL;an,en,obi9JT;a8EAla8S6;a1RCiMoardN;!lo8I3ty;e9i1kelNri,t8;kHDp4XPty,ze;!gi1;!bQs;e9K0i9DUy;ck81Jde9NOffVggUpStRvelQ;i1li1y;ch9O1;!e9LZi1pQs;e38Vi1y;er770;!e900i1l8JOs;akReQha,ll;r8zC;!eLinIs,y;ck8IRfu0g71Iil0keTpRrQt5X2z4PX;e9f,i1k96Fl8;!e,p6JEsQ;!h8VA;!bi9JEd,s84;a0De0Bi03oTtp,uRyQ;r9BXth9OZ;d0F3gQrf8IYsh,t5XB;!gl9ILly,ne7;ck,gYkVlUoRrgasboMtQul4JE;e,h80Z;ch2PVtQ;!hQ;!e86Hi7WVly,ne7;de83Le4KSle8J7;eQinIy;!d,h8COle7r0sQy;!c19Xta9CU;!gy;dgeWlUrk8I8tQ;e,hRtQ;en,y;!erQs36Ay;ee9KTs;e7LAiQ;es,n76R;!n,on;ar8e,g,lQ;l7MPt4Y1;ckUllTrRsh88NtQ;te835;my,tQ;!a7caMe7XWi1ly,ne7p8YZs,y;!e8H9ha1NQi9CMne7p78Ts,ta8B0v8CL;!do8APe68Ci1s;a0Ue0Mghl1i06nOZoXuQy9KI;d9HNgTi9NImSng,rQsh95Gt9F7;!pQr7Z2s;!ee,i1s;!b2mi1p8s;!fe9MGgQs;e8YRiQ;ng,sh9LQ;an9NYbXc98Ie,gWop,pVsh9NDtUuTvRwQ;!d7SXe85Mi1ly,ne7po89Fs;ak8NVenQ;e,ia9A7ly;ch2OVgh0;!h,s,t9N8;!e9i1p8TE;!an0g9N6;!b80Ds;c04d01ght00mXnVpStQv9JR;!heQs,ti1;en,rN;!cove96MpRsQ;!t3O1;a9H2e47LinI;gQk94U;!er,i1s837;!aBeRmQs,y;e855i1;!ba9FN;!e7Z4i1ly,s;!eQi1;!r0sQ;!h9BL;e8FBi1k85L;azVdTeQigh9N8nd2pt,uth8GVw;k,pQt,ve808;!er0inIle7ov9J9s,wQy7XO;alk7NIe982;!di1geQs;!ha36N;eQy;!b89V;b0ck01de,g0in9N1mZnXpWsh87CtVughterUvRw,yQ;!eLi1s,t6;!a,eRiQs;c,ng,shE;!d,r8S3s;!ed,h705i1s;!e8EWs,te9HF;!p6H5s7PD;derQe,g,t9JV;!ed,i1oDs;!mQs;e8XHinI;!eQi1ne7s;d,n8r0;a0Fe09iZoYrXuVwisga97JyQ;div4ODe,fu9H6lSn9AUpe,rocket9JOscrRwaQ;lk2rd;ap9IM;ar966er,iQ;g9AMne;lQnk0pP;kNl62Q;i9ENu9EN;al,da,k9LYur9DZ;dYe90Qff,i1lWmVnTp6GNrSs,tQvviA;!s,tQ;er0i9APlA;mish2NBt8;!he8P7nQs,t;e8WZi7VGy;!m5XKp93I;f8DZlQ;!e98Mf8OSi1s;!d9LJoo,s;dadd3et84Eff0MZlTne,p514tchSwQ;!eQi1s;d,r8V8;!bo8CPe9KPi1y;etQt2;al,o3Z0;ar,nStQ;eQi1;!board8FHd,r0s;d2k8R0;a1Zb1Xc1Vd1Ne1Jf1Ig16k15l0Wm0Ln08o07p06r03s01tVva,xSzQ;ab3eQi1zl8DS;!ab3d,s;e4TCfo9AAp9IPtQ;eenQh0ie5GWy;!th0;a9JWcUeTh,i1ka,r914s,tSuQ;!atQs;ed,i6S4;er0inI;!d,m7M0s;h,om0;i,ko,s32PtQyphD;er7NWiB;eRi955loPo,rQs;ah,ee;!d,e,n94N;h5AEowicz,p7WAs;bh4n,ux,w9IR;a01b96WcYd,eXf8D3gRha,i76AkQn5WNs,us9E8;!er,ho3i1s;!apoHe8RXhTinIlRsQular6Q7;!ong92I;eQi1y;!d,handed9HHne7s,t6;!aQ;m,n9HG;!ad,cuHst8ZNws;eQla9L6ro;!rQ;e41Pi9GW;i,n,t9IX;a,ba,c453e9DEhad8THiYmXoVpRr4s9DEulQ;at7HEca9JBtan6LW;ati9H1e7ZPlQs9JE;eRiQy;ci9GQf6YPst5MI;!r,st,t6x;!nQ;!a,e,s9D7;er8i,o9H0s;!an,lQ;ar55Qe;as,eWhouVicUkTlSo0t,vQ;a6Q9erQi7FU;!m4s,waHy;!i2DMs,y;!en,s,wo7SWy;a,on9KH;et7FG;nQs9GS;c8CEe,tE;a7T1es,h0;gy,hYi,mXnQr993uM;!aUe2EBiRorQpo9IYs,up;!a,e,i978;fQng0or;iQyN;c9GVe9IW;ge,l4KHtQ;orGu95Y;a,u9CN;!ed,i1s,tQ;!ed,i8IDsQ;!eeN;t8u;gSme9GAnRrQs9DUt93Fve;ra0;a,na,to;!e8D1fri5;dhWeRhQi1le,n95Vor88M;ar999u;!a7S7bTc94Pd8F0ki97ZliVXr,sStra664wQ;aQi7SG;lk0ys;!h980tep5KPwi8K0;ar,oaMur9G0;arth8YTu;hu4il3MEkQ;!b94Ce7NHl9FHne7o0;er8WKlQyl;ey,i8HV;m1DYnIo;a2Pe23hh9K6i12lo8WBmu8OTo0Gr01ti98EuSwe9DDyQ;am,i1lQne7st2;o98Cy;a1ck0dd7VJe,fflWi2SXji,k9G6m,nVr9BBsUtQ;!d7OEe7JKs,tQup;er8i1lQ;eQi1;!c8TEd,p99Ms;h2KBt2;!n9IOt9GB;eQi1;!b9HCd;a03eZiToSuQ;bQg6VInk7IUt95O;!be9DOs;o9BDps81Gud8SA;!ek8ft,ll,mp30WnTvQ;aReQ;l9EJr;st7ZS;e0kQ;!a9CFi1s;dSk,ve65MwQya;!dQs4AW;!e9H9ly,ne7;!d5U6s;ga,nk,pn8O3v2VN;al0b8ZBc09d474e06gun7EXji,ko,l8N5n9ANo04p03rZsYtXuVvTwQzo;!a,bRcasCdo858e73Ng9Jin856m7X3n,o9JCp23Gro7TGsQti6Z2y8VA;!to69D;iz,oatN;eQi1;!d,l5IKs;!d,idn,ldQt8;!a,er8n9IJ;!a,g3ZMs;hoBtako91X;e65Ci1n,tQ;!a8PScRe7VRfa873ha8C6i1ly,ne7sQwa9A4y;!igh3D5t949;a83Whan9G8omi8GPut0;!k4EZlift4S1p8E4s,z70F;!k,p,tQ;!er0in84Ro8MZs;!b72VhoRla9E3m7KFsQ;!hiBt7X3;rn9DR;hi4IDkQ;!e8SXi8Y8l946s,wa99M;a0Pb0Oe0Nf0Lge241h98Yi7M8k0Kl0Im0Gn07o3WJp02r00shZtUvSyu,zuQ;!kQ;a,o,u;!aQer8;!ji,m,ni,s;!b84Te,fa6E8hSlRs40KtQ;er,inIy;e7o93K;e8KVoQ;le,u9ET;!io;aQe0in,k9EWl41Mo8AFt61S;!i,ka941z;!bTlSmRown2p5T5sQwre3YKya95T;!ha8I1;a7CQe9HY;ey,o93B;oaMu7RT;!a3WHb80KdXe89OgWh93ViVjUkTni1oSp80KsRtQy8WS;a8W7o;!engu8CFu833;!b42Iha9FJ;ic9A3;i,u4HO;c9A1ga8CBnI;!en,le0o;e,ig,o8A0;!a2TWizu,la,mQon;erNy;!lQo9I1pa;!a,i8FM;!ha,o4HG;tQu;!e8RZi1le7s,y;d,ld8r,s;a681bole96Lu9BE;!t3GT;a09ba88Sc86Cd08e04f03i02k01lYm,nWpUrRs,tQu1;h,la99Mty;!at6b95Ae,iQlo95Ym7IMpa0r2X9wo97Dyl;!d4fQ;!f0;!aMhQpaM;aMerd2DK;!anQg,zhO;do9HDiga9D7;!by,d6f,ia,lRtQvC;er8on;!e3ZEfi957i1s,y;!e7WOh91O;!k9HGla;a8U5f88Y;h4la,n8VUpRr,sh,tQ;!a89Ti1s;!d7GYi5UOsQ;!kP;!di1s;!f,rQth9C3vA;!e8RAi1m4s;an,b16ck14d12e6CJf11g10h0Zi0Yk0Rl0Nm0Jn0Co222p08q07rZsXtWun8VNvUwSyRzQ;!am,ia;!la,ne,s;!l0nQs687;!a,ee;eQi8EO;!d,n,r0s;!n2t7SF;hi,tQ;a,ri;!at,d8ZIeWiVkTla,ma92Kon8VDpQ;!eRie,ly,ne7sQ;!hoot9C8;!n82Zr,st;!ey,sQy;!l18M;!a,f,ng;!d,h7P2r,s,waH;!u84D;eRiQ;ng,ro;!d,l1DHsQ;!hi3QZ;!aVd3KBe,gUia,kTnStQxi;hi,i,yQ;!to82B;a,on;!ar8UWed,s;!hai9B9;!ya;!a3SQbSeRiQp2S5ro94Ksh2u0;ng,sO;!d,f8I9le91Ps;hu,lAo,u;!e,iSlQom,t,u;!oQ;ts,w3ZL;m90Dni;a,eUiSt91ZuQy;nQr;i,ta9C5;er,ly,nQr8UI;!e7g;!do81Tn,o87Tr0sQup;!peare7GU;lu,na;!i8PZrukh;!g7Q5;f2t8OD;!e9i8DGoQwe97Dy;!w7DG;!ed,i1leQs;!d,s,t6;a91ZbQn8T5;at,i9BCy;or7O2pd;a37ba35c2Td2Me2Gft6g2Ci29ki,l1Ym1On18o17p10qu0Ur0Bs0At05u04vWwTxQymo87N;e9DMiRle7tQu6JEy;aKet,i1on;e87Wne7s9C8;aReQi1n,s;d,ll,r98A;ge,rd;eQill96N;!nUrQ;!aSeRiQs,us;de,ng,ty;!d,ly,st;lEn9DZ;!fo935s,tQ;e59Sh0ie59Ry;l,ng,ss;ba92OhTi,on,sStQup0;eQin80Xl94F;e,r0;!u5EN;!i,u;a94Hh,ka,si9CWtercA;a07b66Xen05f0g01iZli1m9CVot1RZpXraWum,vQyoz8UW;!aUeTiQo;cQle,ng0tu968;eQi1;!ab3d,m8ZQr,s;!d,r0s,t;l4nt0;!no,t5;entQi9AA;!iBs;alQes,o6H1za90A;!i77Hly,s;eQi8UD;!a9E7e8XEi,yQ;!evQ;i8XDna;a6N8dipQeEge8QLi99T;it6VI;!fin8SZph8RI;eRiQo0BE;ns,tu8WS;l0nRstQ;er9D5ra9AV;cCtQ;!i9A5;araTe6LPia,pSs96YtQulchH;!e7ZHiQum;c,mD;!u4DQ;b3tQ;e8JXiQor0;ng,on0st0;k,l,nIul;a03d02e01g,h8PLi00na,orZp83PsStQ;!eKSh9CGiQrG;eKment5OYn74H;ationUeTiRor8IIuQ;al84CoD;b777ng,tiQ;v100zeF;!d,i,le7s;!alQs;!i8MU;!a,i970;l90Nor6S7;ca,gJ;!ai,er0i1s;!tQ;e,or6F4;aYbl9CBeXiQp1RYt94Jy6;!aUcoTfin75VnRot966s,tQ;e,i1OL;aQo971;l,r92N;l9BDndu7W4;nnu99AutQ;om8C6;n,st98T;!k,n927phoH;a8LRby,dZeWfUiTlRma,tz2vQw7FAzni91L;a966es;!ab3eQinIo855s;ck,r0;m,na;!iQle756r73P;e0sh9AA;ctRnQ;a,e,ia;!ed,i31Cor,s;en,om;d8HPji,ko,m7VBnRsmQya,z5MD;ic,o698;e,fe90W;aSme89Lov98OregatRuQ;e0n8SY;eFi0HV;!l,wa;dUg2inIk7GYl7TKmTn84SpSr0s6YUthRyQ;a,ou;a,e,i1;!a95Med,i1s;!a,ed,i8S5s;!ed,i1li8ADs,y;aUeTgwi90XiRo8YZucQ;e841i1ti5S8;mentQt6D4;!a4EXs;n2ZOr;n0tQ;eFi33E;e00luZn7SNondYreUs,tSuQ;lar2SIrQ;e8SXi8L9;!a3F7ionQor919s;!al0ed,i1s;cy,tQ;!arQeFi99Kly,s;iQy;a2J5es;!ar0TPed,ha944ly,s;d5si6;d8TFs4X0;!sQ;!ti8WZ;b09c08f07g06h13Ql05m03n02p01que99VrZsVtTv2wQ;aRe5orQ;ld,t9AX;rd,t2y;!beQe8M3i1s,t3;lt0;!hSiRonQ;!a055ed,i89Ks;ck86Fde;e7ZUoH;!chQed,i1s;!e8PIi1l4JH;laBo8SM;!ce;!an,en,le8X5sQus;!t3OP;!aKe7DCi1s;al,u7ZM;ar8WVo6TF;oa99Cre99C;ed,iRoQ;aMrB;r8J3scu7YJ;a28e24h1Ai16ler6PMo0Sr04si,uRyQ;l97Jt989;ba,d01ff00lXmWpp2rTs7RBtQ;!tlQ;eQi1;!bu854d;rQvy;iQyN;ed,loD;!b5LBmy;lRptQ;!ed,i1or0ur98Z;e951y;!ed,l97Q;!d2s;a08e02iWoVuQ;bTff8ROmSn4OWpRtinQ;izCy;lAu4QQ;!pt7KL;!b6RAs;ll8o93Qt8USung97I;bUmTpRvQ;en2;!tQ;!ed,i1s,ur98Lwr59S;ma93Lsh7G6;blCe0;amUeRwQ;!ba928dr72Ned,i1s,up,y;ch2B0d0nQ;!e5U3i889pl8SAsQwr59M;!av95Zh8G5;!e8KNinIs;bb3mTnt6pStchRwQ;l95Dny;!e7U5i1y;!bo68Ye96Fi883p7KQs;!bl81R;b99Af02l01n00oZpCrVtTuQw82V;ndr70TrRtQ;!ed,i1ma6UOs;!ed,ge,i1s;!ch7Q3ia,la925s93LtQ;!i0A2s3VVy;ch7MReSi1nRpiQse96H;o8XWus;!ed,f81Bs;!b97McaMd,keep830le7r0s;b8QRch,p7WAt7WC;cAe0;d8i6O7;f8ie8XX;a3L8enQmit8U8ntilla83Aon,pio8ZTss8RLu8DQ;ce0tQ;iQo665;f5AYst0;a0He0Fi0Bl0Am08n06oXrWti8Y4uTwQ;arQeiUXi2SQ;tz,zQ;!ene70U;be8QMe6U4lRmaQst2yl2;ch2nn;tz,z;ad2o4IDu93E;en,f818lVn,oQpenhau2;lQn2;!boSchildrOeLgRh7WXi1maQro8KXs,teach950wo99EyaM;st2te0;irl0;ok0y0;aQl;rQst938;!ly,s8FC;ap89DeQitz8E2;id2ll;e8K3iQooz8QLu8WV;dt,tz;ep,ie53Xo7;ff7QXllSndl2sm,zoQ;!phreniQ;a,c0;er,ing7QU;dul926heraza90GmQnecta8QH;a88Ke80Ii1;denfreu90EefQf2;er,f2;nSptQ;er,icQre;al,i95X;ar088e7Z7ic,t8HI;b0Bds,ffo0Al05m03n00pYrUtRvQ;eng3RRo;!hi1tQ;erQi1;!ed,i1s7NV;!ab,b86Hc36IeSfRi4GIlet984rQs7XPvAy;an0ed,i1;!a97G;!cr7TVd8PDs;eQu94S;!goat81M;!dQl6n5JCs,t3ZL;al72PiQ;a,nav8FO;!m97BpQs;!er93Ei;aTd94We9iI0lSpQy;!eQi1s;d,l0r0;io942op8GY;!b3r;ld81B;!b0IJiAs;a41b3Wc3Qd3Ke3Jf3Fg3Bh38i34j8WEk30l2Dm22n18o8G7p16r0Ss0Pt0Du08vZwXxUyQ;a1U1eSiRoQs,u8G6;!ko,na95K;d,n7U0;r0th;e8UGoQ;n8CNphonQ;e,i95V;aQdu95Ued,i1mi7W2s,y2;!da,k3H8nt;aVeTiRoQvy;ie,naro943r7I8ur,y;!le,n6FVoQt8FV;!r0ur;!d,rQs;!io,s;!geRii,nQ;na97Vt0;!d,ly,ry,s;cSdi0erkra7ZMl973nRr6sa8EGteQva90M;!ed,rnA;a0de8Q2t2;eQi2y;!p4r0s;an00ch8CAeZh917iVoUsSurRyQ;a,r;at96Pd8P9n;!uQ;ki,ma;!ko,mi,ru,s8ZEu;!n96TrSsfQ;actQie95HyN;i95Aor5WG;e,i8H0;!d,lli71Ps;!i8K5;a2PEc8N7hRi,kQqu7TRs8NYu7S5;atchew4ia;!a8NWi1N2;a01cYdWeVgeUiTkSoRsQtH;!apar6OL;!ja,y4;!ar,issi4o479;!n8LLs,ta;!aKnt;!e,k;ar7N5in8BRoQ;!n90R;asRoQ;ma,p4T4;m,t57Y;!c5OUh,je5X4nIsQto7PS;o902wa8IW;ers7O9i5OSli84Hna,pQs;e8GWhi8RYi1o8KQy;a0Ibo83Vc0Ed02e94DfoMg01h00iXjVk8L9n8Y0o,sUtQy3YM;!aSee,iRoQy;!ri7OCs96R;!a8B5lla8SZn3FVs;!na,s;!a,kr7TOon;aQe7AEi,u;na,y;a,tQ;aQize787y;r3BVti6;!edrP;!er,r8ONuiB;!al00bXeWhViUl2m4oTpSrRsQus7UZwi1CAy;!to4FB;a,iBo;ap2ip2;r,vJ;!a,ng;i8XTu,ya;d,r84K;aQe7L2la93Yox;gQr;!gi1s;!s,wo8VR;h7OFtQ;iRuQ;arGm;!f2ZUmon7FNon8ty;!da,e,to5YU;aYbXc8JVeWiVm8OLoTpSsRuQy;el0r7VJ;!on,u1;ei,lLRs6;a8RIsQv8Q2;!a0;!r8K9;!er8K8ne7;a93Bo,u8ML;!nt8LLrQ;!a,it859;a08e06ga8LNi03l02mZoXsa,tWuTvQz7AQ;aQe0ia,o0;dor7X8gHVtQ;i6oH;d,tQ;!aQe9i1;ry,ti93C;!e8FJinAs,w7SNy,zm4;mQn0on0;e,on;a8R1i,onQ;!eQ;l91Eus;e,ie,y;eKh,m,nRs3WMvaQ;!t8MG;a0e,g2i90G;!ab3em,h,m,r8RPsQ;!gi82Xm5Z5pe732w85D;!am,c7ERd8OJh,mRnd2rQs,z8PC;ie934y;!anQi;ca,d2;aSe0halPiRs,uQ;!ma,ra8PA;!ko,na;i,ki,mo88N;c,d,go8QKjo,lSnQp4ra,s8WPt7BQy4;s3W8tQ;!eFho8UHly,s;!bo7EKed,fi8SJi1or0s;aReb,iQ;b8J8l,r;i,ra8QE;aSeRg7EZittQs,ua8IM;ariD;!bru8SDm,r,s,t;!n,r8J3s;a8CHeRfQ;r6y;!cra2BCgua5E0h7RUkQly,r,s93UtGw8OL;eeC2;ed,k3DN;aUdRe,hu,iQl6J6ne7o;e,s8EC;am,e77LlQ;eQi1;!ba51Sd,s;!ko,t;co,hTkSrQs;ament6NBed,iQosan92I;ficVZlegUVs8ZH;!ed,i1o,s;a,iQs;!ko,n;aTbatSe8P1in87Hle,otRrQu7HE;a,e,i8QD;ag90Oe66O;h,icJ;!n,ta;b,ra;aHWc7PMe68f8S1h5Ui44ln43o1Ap51Esvp,uVwaUyQ;an,deSe6PSg88Kk2la8VSno,oRuQ;ic8VSji,ng,ta,za8O6;ko,ma,su7OPta;ll,r;nda8PH;a13b0Zck0Yd0Qe0Pf0Ng0Li0Jk0Il0Gm07n02pZrJsUtQxPz92E;g8Z5hSlQs,t7WM;a8VLeQ;d8WJs;!er7LMie,le6VM;e,hTk1ONl4sRtQ;!ed,i6JXl5UIy;!eQia8RAkiAo;l7W1t;!e7N7i1moH;aReQi93BturC;e0rt;!li,ul;aTdo7P9e0g0k3nRo93Ds,tQw8L3y6;!i8SUs;eQinIy;ls,r0th;bo7V5r6XPw8KZ;bXiWmVoUpRsQ;!fe8R5;!elsRleQus;!d,sQ;tiltskP;r8BOur8BO;ag8KCy;!n89T;a,l03P;eQi80O;!bo7T1d,ma777r0s;h,ia;nQz;!a8ZEed,g,i1oDs;al,by,er,gQs;ed,lA;fQio,us;!i82Ele9;f40Us;dVeUiSni8QZoQra,y;!lQ;f,ph;!mentQ;a8WJs;!ly,ne7r,st;!erQy;!le7;!er,sa8QRus;bSdo7OCeRiQle0r8W9s,y;c6es,k,n,o;!n0s;e3LSi5ZJle;i8AAn;a2Cb23c1Ud1Pe1Of8PYg1Mh1Li1Kj1Jku,l1Bm14n11o0Vp7TPq8LRr0Us0Gt08uYvWwUxTyQ;aQce;!lQ;!e,ly,s,tG;an5ZYie,t6y;an,bo8Q2dGeQi1l0OQs;!d,na,r;eQi1;!r8BX;blAen,gWl7U7ndTr7MYsStQx;!e8Y2inQ;e8YSg;eFi1se7FKt;!aRe8C3h7PBi1ly,s,tQup;ab3r8MQ;bo7TS;e,hQ;!e7IXi1ly,neQsh8RJ;c79Fss;aWc,e,hUiTor0s,tRuQ;!nd8GA;eQi1weil2;d,n,rVE;!ss6WL;!m4sQ;c76XteP;!ry,t1V1;aXc3L4eUhTiSl2E4sRtQwe8T6y;er0ov,ro;!et8DLi8A0l73Ho,um;!e8Z4n8G0ta;an,ni;!ann8SPb84Dma8VDnRs,ttQw7YOy;a,e,i;!be7GAcran7XSthJ;!lSmu8T9n8NOrQu8YP;iQy;a,es,o;ba,eRiQ;a,e,nd8FRta;e8MXs;scha8K0y;fTkSmRn8MJp,sQt77P;!eve81Pt6RD;!f7SAi78Kma6VHs,y;!er,ie0s;!e8B6iQs,t7UA;e9ng;aRdQg,i8MPn2GKon,s6;a,e7EJo;!ld8R4n;aTeSi,mRn8MAo8GGp,s,ulQy;an0us;el,ie;!k,o,ro;!in906nQ;!a,c7UKia8OIoVXs,ticQy;!al8WGi8FJs;a4CCeWf903lRoQy;!d8RM;!a,ba8OXeSiRoQs,y;!ut,v8W2;c74Ue,n812;d,rQ;!bla7A3coa6KXs;!s,x;as,o;l8Z9sP;an,it,ypn7CZ;an,eQue0;!l88Dr0;bu8OMs;an,dTeRg8VRh8DTin,m4n8LPolfo,rigQs;o,ue4BS;!nt0o0riQ;ck,go;e8ILy;a,c8KPhWkQ;!aUeTfoMi70Bla8S2o,sRwQy;e8RQo8PT;!tQ;ar,ea8HF;d,fe65Or0t8;b015w8K4;a,eQ;!fo8GUl3r,st2;bWeTiSlAoQs8RSust8X2y8LN;!c8L4tQ;!ic0n7LOs;e,n7Y8;!d,rtRsQ;!pierH;!a,o,s8RM;!e73MiQo,y;e,n7RX;ch8S0dSm8nRrQst7XK;!ed,i1k8Z1s,y;!o7KI;!blo8N5h7MYie,ki8R7ru742sRwQ;ay0o8ZE;!h8N7i8UBt2;gl1;a1Eb1Bc11d0Ve0Tf0Qg0Jhan8LTi8LTk0Il0Hm0Gn0Co0Ap06ri,s01tYvSyaRzQ;a,zo8AH;!dh,z;aTeQie8WR;rQs,t8;!a,bQda3f7LQs8QNt6;a882ed,o8N7;!lQs;!i1rGs;a1K6ch8Y6e0o8KYsu4YUt2uQz8FX;!alQ;!i3B7s;a,e807hSi1kQot82Xq8ILs2BYt;!ed,iQle7s,y;e7RIn6AM;aQi;bh;eSl8KEoRpQs;!e894i1l7SSon;ff,s8SP;!n8VD;rd4s,tQ;!e8H9i1oDs;aSc6d0gQk0o,s8VI;!eLi1le3ZXma6J7o,s8Q4tQ;a8X8o8NM;!ld37Z;a,ba81Oes,i7GEm2s7DT;e6UWl;a,er0i,k7EMo,yu;a,by,el,gVhRid630oQs703;!l3SPr5LS;!tQ;!aw8IOeRf80Lha8QHiQly,ne7o,s,waMy;ng,s8SV;d,ous7T3;ed,ht,in7QPs;at,e,fRkPlQt0;e7OAi1;!ra8YEs;nFsQ;!en,li1;dUeTgeSiQl8JPs;culQn7K4;e9i1o8NU;!d,s,w8IC;!r654s;an8WXen,i3B6le7PL;aYcXe,hUin,kSoQ;!chQt8RD;et8;!eQi8XGm4s4VMy;t0HQy;!aReQfie,ie,l3V6mo8PXne7t2;!l7JMr,s8XC;!rd7WC;ar8DZi;!n0r8DY;bQca8QRs;eQi7FMon0;d,ntr8J1;l35Dn,r85Sz;a02eZiVoRuba3NKyQ;di4mCs,thm584;adAdRnQ;da,e;a,eQi8HL;!s7WZy;b,nQ;eRoQ;!cer8TFs;!sto8MC;a,in,sDtRumatQ;i8UFo8LL;or4BLt8BY;de,psod6SS;aAJbA6c8Fd7Xe7Nf6Yg6Ah65i5Nj5Kk5Il52m4Fn41o3Xp2Nqu2Kr2Js1At0Mu0Jv00wUyRzQ;a,i4o5IX;es,kjav7J4nQ;aQo8IG;l8DBrd;a56RiToRrQ;it0A2o8QY;rQu8P3;d8TLk8TL;nQr8TS;dNg;a05eYiUoRs,uQv8VV;e,l4HW;ca8N3ir,k8TOlQ;t8utionQv8Q1;!arGiz8TMs;ew4E7l5sQt5HOv7ZN;e9iQ;ng,onQt8;!is8TLs;!al8il3lVnUrQ;ber8RIeRie0sQt8;al0e9i8RU;!d,nQ;ce,d,t8SF;geFue0;!at8QKry,s;!lQmp8;iQu3RN;da8T3;bOniRsQte8EXvO;ab3eFi1;fi7I3on0tC;a0Ach6CPe09h08i04o03rRurnQyp8T4;!ab3e7R2i1s;aXeViSoQyN;!ac5YMfit3WZg6JHspectQvirD;!i7SE;al,bu8SUeQ;d,vQ;a03De7NOi1;aQnch5Y2;d,t8;cRin8SMnsmiQ;s4H0t66;eFi1tQ;!ab3ed,i8VAor;ol8SIrt8QZ;c8B7nSrQ;eQi1;!d,e0me8VLs;a7ZRue;i090o4WS;!n8DGst8SC;iRk8D5li5ZGrdQ;!a8UPed,s;l6ZYn7TP;a8PBc0We0Ph0Oi0Gni8K2o0Bp02sl2tUuQy1VL;bmit8UJlt2K9mSpp8RHrQscit8UW;fac8SEg8AWreQ;ct60H;e9i1p8S7;!aVed,f7MUiUle6NNoRrQs,y7G1;a5WMict8N5o75Quct8B;ckNn,rQ;a8RYeQi1;!d,s,th;ng,tu8S1ve;rt8t8L3uraQ;nt0te7NJ;ectXiVlendeKonQs;dSsQ;a179e0iQ;b6ONve7PX;!eQi1s;d,nt0r0;ratQte;i6or7ZS;!ab8QBed,f7X8i4D2s;lTnaSrt8uQ;nd2ZUrceQ;!f3Z9s;n8TPtC;d,utYOv5B9;dSgn5ZJli2IXn0stQz8CB;!an8TMeQi8R0s;d,n8TQ;eRi1uQ;al0e0;!d,nQs;cQt5WD;e0iAy;ap8RHma,o7QCuffl8RH;aVc8RBll6YXmbl82ntUrvStQ;!s,tQ;i1le7CS;a8R3e9i7Z5oQ;ir0;!ed,f7LUi1me8U9s;l78Xr51X;hedul8R9iQu8NN;nd8s4FF;an,eadNo65un084;est7GQiQ;em,r8K3sitQ;e0iI1;a0Te0Khr040l0Fo0ArYs,tilXuQ;bliTdi8HJg1S9lsSrch03ZtQ;a8S9eQ;!dE;eFi8BW;cQsh8QQ;!aQs;n0ti6;e0i7TU;eXiVoQ;a64TcTducRgramQ;!m8SX;e9iQti8RD;b8P6ng;ess8QH;e8L2mand82Lnt8sQ;al0e;he2NXsQ;entQs5I;!atiQed,i1s;on8IRve0;!pu732rtSsQ;eFitQsess5DQ;i5E2orG;!aQe368i1s;b3ge;aTeSiQyN;caQe8RR;!b3nt,s,t8P5;ni4M6te;cHKnt8Q1y8;aWlUntTrRtitiQ;o5TTveE;cus5SRtoQ;i8EOry;!an8S2ed,i1;!leQs;d,nt;l8tQ;!ab3e35Ti1s;ckUiSrRst,tri8SGyQ;!ab3i1me8SWs;a8PNt80N;d,nt8POrQ;!ab3ed,i1m4s;!ag8PU;ccuRpen8rQ;d64Yganiz7P3ient52F;py,rQ;!ri1;a01dYeVf7KNko,nUoStRuQzo;!mb64Qn59H;!a501eLi1on,s;!ir,m2IQuQv8S7wn8NV;ncC;e6AMie,y;!e,gRwQ;!a4ZWed,i1s;a8NLeFi1oti8S2;!eQi8P6;rQzvoD;!e5C9i7QFs;!i4Dl6XImCrd,t6NCuQ;d,lt;a07b06e01iUmy,na8S9oRuQy;ne62Qs;!delRrse4YZte7N3vQ;a4ZMe7JZi1;!ed,i1li1;!nSss5CPtQx8OY;!tQ;an8NNed;d7QBgt6iscQ;eQi1;!d,nQ;cAt;b2dRmbQ;er8r8R0;iQyN;aQe8QB;l,t8MD;er,ran2UV;de,in0Ek89FnSpRrQt8AZ;k45Mr5CH;pi1;d8MZufaQ;ct50J;aXeUiRoQuct8O2yN;ad8c8MP;a589c0eRgQnqui3YCsh8Q0v8OM;io875;d,f0s,v7JA;aRg6HNntQv2CN;!ed,i1le8DB;rnNsC;b7WHp7XNtRun792xQy8;!a7S9e8PUi1;ab3eUiQ;ng,onSvQ;e8OGiQ;st8LGty;!al,s7XK;!d7M6s;ha,inQ;dl8O7;e8FQoiQuven8EN;cCnQ;!d2ed,i1s;ch05d6QIf,gn03ko,l8N5m02nRsQter599;!suC;!a,carn86Bde2e6T3forc8GZhZi1sVtSvQ;eQig2CY;nt65Nst7XH;eRroducQ;e9i1ti6;gr866r0XD;!e063tRurQ;an8PXe81B;aQitu8KW;ll8LBt5YW;a78Mo8F1;burs8GOpo8NDs;!ed,iQs;ng,teF;!m4sQ;fuhr2t7D5;aSeaQir8NLyd5YD;rQt;!i1s8KZ;bQsh8OW;!ilitat614;a0Aen09g08iYrTs,uQ;laQrgit5ON;r5J8tQ;e9i8KRor7V9;a708eQoup8N4;ssStQ;!f7SNs,tQ;a85Aed,i1;!ed,i8KM;!e,meWnVonUsQ;!tQ;er8rQ;aQiAy;nt0r0ti8OC;!al80Ys;a7T9e;!nQs;!tQ;!al,ed,s;ae,i88T;!cy,e58Qt0;in8lQn,rd6WRt8JG;!eFiQly;a,ng;ashi8NLer0Ai04l01oXrSs,uQ;el3AWgeQnd7X1rbi50Zs8K7t7M2;!e0s;aSeshRigeraQ;nt,t2L1;!e79Pi85Fme8PL;ctQin8me;i8GZo8JV;cus8NYrQ;es58LmQ;!atQeLi59As,ul84S;!i6o8JRt5;eQux;ct595xQ;!es,iv2NH;lUnRtQ;!t5;anc8MBeRiQ;ng,shN;!d,me8P7r8ERs;eFl7Y5;!eRrQs;al0ed,i1;e7IHnQ;cCd8H3tiJ;ce,d7TZf38Wk8lXmWnTsRt,vQxamin83J;alu8OJe0;!e,tabliQ;sh8LS;aRg73ItQ;er8LQry;!ct7NE;a,er8MGp03F;!eQi1s;ct8K1d;a57Gcoa8JHd05e04f03head7XQi00li5AQmZneYoWrTsSuQwo670;cQndH0;e7GIi1ti8N0;!k72BtoB;aQessN;ft8LGwQ;!i1n,s;!i1ne,ubQ;l8LLt3SD;ck0ss;an,o8GS;al,d,re4Y4sQ;cov4H4triQ;but8BYc7I4;e7LWi8CJoM;!c2ACdica8IHem1BHfin58Ymp8HRploy7UWsign8velop4WT;!er,iQy;ck,ng7N6sh;a1Ae11h0Xi0Qk0Pl0No00rXtTuQycl54U;per2PFrQse;!rQ;e8N5i1;aRiQor858um;f4UBtu8FU;l,ngQ;le0ul88Q;eatRimina8KTuitQ;!eLi1meKs;e9i51M;di1gni09il0llect08m05nTrdSuRverQ;!ab3ed,i7OMs,y;nt8p8r6WB;!ab3eLi7LYs;!cilZditi58IfiXnVsRveQ;ne9;ider7KVtQ;itRructQ;!ed,i8FV;ut8KR;aiQe4XC;ss8MR;gur824rmQ;!a8KIed;ab3e9iQ;a8KBng;binRmQp3PQ;end5SDit;aKe,i1;!ed,i8LQ;s53Zti6zQ;aQe9i1;bl8IZn8MH;aQin7GMus4U8;im8K4ma8K7ssif4TH;!le6FNon8;divVev5pSr4GDtQ;aQe9i1;l0ti6;e0ie8N5rocQ;aQi8IT;l,t8K5;is8K7;argReQ;ck8JUrc8K9;eQi1;!ab3d;dCiVntEpRrtifi4T5ssQ;!e8LDiG1;!tQ;ac3iQor0;on7PCvQ;e7HRi8IH;pt0vQ;ab8GNeQi1;!d,r5U0s;lTnt8HZpQst7G2;!itRp8LUtQ;ur8JO;aliz6GPul5KV;cQib5UEl8;itr60Lul8M2;a01eWiVoUroadca8KPs,uQ;ff8ilSkCs,tQ;!tQ;a4TVed,i1;d7FSt;ot,rn,u776;d,r8BJ;cTk8MKlQ;!lQs;ed,iQ;ng,o5MW;a,ca,ka;!lan4HUr,te9;c0Ed09ffirm7J8g06is,l01m0pYrXsQtta73Tuthor5TAvAwaken8IZ;onUsQ;eSign4D8uQ;me,rQ;an8HMe9i1;mbl3RUrt8ss7SK;!ablQe7WIi1s;e7GXy;!d75Zed,g6YZi1ra2DVs,vi7AL;!eLi1pQs;earQly,oint4UC;!an8KZed,s;!iSlRm0polit780s,tQy;or0y;oc8LAy;gn4CVsQtGz5PU;a8IMe9i1m,t4WH;anQe8LO;!oQ;mi7L5;!ab8H3d2Z1eTiRjust7S5o7Q1s,yQ;!i1ma8DA;e8K0ly,nQ;!e7g0;!r5SS;h7ROquTtQ;!ed,iQor0s;ng,on0RGvQ;at8KXe;ai4TLi2FK;ah,b2Zc2Od2Fel8HGf2Cg27h25i1Zj1Wk1Tl1Rm1Dn12o11p0Uqu7QEr0Rs0Lt06u04vZwWySzQ;a,e6NEia,orQz3;!ba89Xs;aSbu7IRdReFlQmo8DJna,on,s,y4;an,eO;en,or;!nB;alpin7F0e8JBhi8CUlQne7r;ey,inQs;gs,s;aTeSiQn,u;!nQo7Y7sHT;e0g0;!d,l,n6FHr,s;gCn7ZU;coDl,nQs;ak,c8K6;a03c02e01hZiUna,on,s,tQ;ed,i1lQy;eQi1;!d,r,sQ;!na7N1;f5VJng0oQ;!nQs;!alQed,i1s;!e0iQly;ty,z3G1;!er,oQ;d,re;!d,p0CTr0s;h4RSl1T;!n,tou78L;a,c6D4g16ThTi1mus1ZOpStQ;aQer;!fa7SP;!b5EKi1utPy;!ad,eQid,ly,mi;ed,s;eRiQo;fi5ng,tG;!fi5ly,r,st;ac6U9e7BZhViTpRs,tQunz7P9;!or0uH;eQi1o81E;d,l7V9r0;dQer,ng,st0;!i8FQly,o,s;!a5V4;h,ul;a,cYdVe,gUi,jTkSn,sRt8vQ;e2ir;a7D0om8JO;!ed,in763leFs;an,e87Uha,it;!a,e8G8i1o8C2;!al7CPh8JPi,oQy;l47WmQ;!iz5ly,ne7;e,hQid,or1HE;!e3R2i1o;a01bYeWiVji,m6JCoTpRr89QsQu,ya;!ay,e7OKha2PK;!aQed,i1s;gCnt,rt0;nQs;!a,e0;!f0QHr729;n,sQ;h,sA;aRlQo,unct6TH;e7B6i7HG;bu,l7D8;!cQda85Fkrish861ll8JKn7Y8;ha7RM;ei8JSf,lQph70Rst6;ie8HPo,yN;eRhi,iQs7ZJ;!ng,sh;!d,s8JM;aReQiEOjo,p7BEu,ve2;ev,sh;!h,n,s1YVt;d7HBk86TlUnRsQ;a,e8FFin7JVon;!a,b74Kco6T6dr7CMe6K5fRi6RZm6KWsQw76My;!to4GM;a77Core8HC;!c83Ked,i7GZroad8s,w810;im,l,m6K7uQ;i,l;a,e7AMgThSin72El4narRs,tQ;ag,i88O;!ok;av6K2u;ed7ZSi1;a5TSe,fRiQt6N7;!q;!ae3er8EBi,le0y;a7ZJclXe6L4foMhWiRl84Dn7UJoQu;n,v4;aTcalRoQsh8B9u03F;!ac2JWed,g149he83Wl7SIs;!iQly,s;sm,za8FD;l,n8HFt8EB;a,e,i85K;if86E;co8GNeXhViUkRquetQy;!ba8ABs;!eQh7W6i1s;d,tQ;!e6UNs;alEnSJs8B2;!ael,el,id,maniQ;no8IJ;!cRd,hor6QJm4r0s,tQw82M;ra861;ar,o03G;an,bRen,iQ;d,es,n;!iQle;!n7R2s,t0;a1Ji1HuQ;a0Te0HiVoRrQ;an,es8A7;i,r826tQ;!aRe9iQ;di4eKng;!b3s,ti8G2;bbl7BXc07d,e03gl83Il02m6V5nVpUrSst,tRv6U5xot3CTzQ;!z3US;!e,o,s,t4ST;e,kQt;!e,s,y;!p5s;!cVe,iBl4n,oa,tQ;!aTeRil63Ion,uQ;p72As;ro,ssenQt;ce,ti8DP;l,na;a6R2e7YHy;l0t73Z;rSs88LtQ;!eQi1ly,ne7s;d,n,r,st;es,o;he,kQo;!eRfiHie,ly,ne7sQ;a89Hilv2;n7AJr,st;a6VGb1ILeZlXnWrUsRuQ;e321i1;ad5YWo,tQ;!a,ionQs;!ab3eLi7F3n1GOs;iQyN;da,e8FF;ch8DRtP;!lQ;!eFi1;g,nQqu6SMr0;!ie,s4OS;ck7A6d08gmiHh6GVi07k584l04nZrTsRtermaQy7UF;in,ss;ar,h8DKiQ;!mo7X5;an30Zk0lArTtQ;!eQi3s,z;rQt0;!ba84Jde859ed,ly,ma61Ds;elQiAy;!ed,i1l8FQs86E;!d4SStQ;!a,iQri88Hum;co,fQtU;iQyN;ab3ca8DBed;!iQm0;f7UFtQ;a5IYiAy;!d,l,ntE;!rQs;aRen6W6iQuplC;ce7GLl626plQ4;!nt0t8AD;aQng;nIo;e8A5s7TJt80R;aNGb81Kd87FeJCfJ9hHPiFAlDRm84LneumDPo9Tr2Ks23t22uZyQ;aHgmGja4RKlWoVrRthQ;agor87Don0;amSeRoQrhJ5;!m4B5tech7BA;!neA;id0us;ngya1tr;e,oQ;n0ri;b1Lc1Id1Ge1Eff1Dg1Cj1BkCl12m0Zn0Pp0Nr01sXtSyo,zzlQ;eQi1;!d,meKr,s;aTin,nSo,r848s,tQz;!eQi6G8s,y;d,r791;am,ey;!ti871;an,hSsQ;!iAyQ;!c6PP;!e7TMinIkPov2pa,u7FVy;c0Ad09e08g07i01lo44Ho,pWr78UsTty,vQ;eyRiQ;ew,s;!or0;e775i1uQ;aKe733iQ;ng,t0;lToQ;rtRseQ;!d,f7HMl0CJs;!edEi1s;e,i83B;!fTm,st0tQ;anQy;!iQs;cJsm;iQyN;ca8BWe6Z3;a4USeFi1;!br082e,ly,r,st;ue,y;e86Vhas88B;a,il0kPpQs;et5ZTiAy;cUdit75Ge,geKiSjab20CkRs,tQy;!a,eLi1o,s;!ed,s,u,y;shQti865;!ab3e6YSi1me8EO;hTtQ;il6OPuQ;aQrC;l75Dt8E4;!e6YNi6NJliBy;a,b1JGi8DNmel8BCpQ;!eQi1k6S4s;d,rnick7JJ;as7Z5iXlUmo672pTsRverQ;!i67M;aQe0i1;r0ti1;!i6WH;!ba82YeRinIm4oQs;!ut,v2;d,r,y0;tz2;a,ol;h,nac6O8sl7ZX;!e57RinIs,y;b7U1rQ;i3t7YZ;dQgy;in708le0;ci7MVkQ;!eQs;r,tt;eVic,liQm5s;cRshQ;!ab3e7RZi1;!aRiQly,s;st0ty,z8AU;l89Vti8C2;!r89Fs;erodact6WYole7KSsd;alm0eudo05orias86Rs04ychQ;!e01iYoQ;!analyVbabb3logTpSsRtQ;herap6T7ic0rop87S;!is,om7CQ;ath7NX;iQy;c89Qst0;sQt87N;is,t;atrQc82H;iQy;c,st0;!dQs;!el87H;h,t;!n86C;a6Fe3Ui31oVuRyQ;ce,i1or;dQe,i77Dn74Xr28Jss7KO;eQh2X2i81A;!nQ;ce,t5FL;ac5FOb2Nc2Fd2Af22g1Thibit1Sject1Ql1Mm1Gn1Cof1Bp0Vs0Lt09u07vVwUxQz7L0;iQy;es,mQ;aQi88N;!l,te;e7l6D0;a7RYeZiSoQ;!catQkCloBst;e5FVi8AH;dUnSsQ;ionQo0;!alEed,i1s;cQg;e0i88X;eQi1;!d,n3VJr0s;!d,nQrb5EHs;!ance,ce,za;dQst;!e75Bly;!agoni8AWeUoRrQ;a4V5ud7U4;!col0n0typQ;e0iQ;cJng;ctSge,in0stQus;!aQeLi1or0s;nt0t7DC;!ed,iRorQs;!a86Ds;ng,onQve776;!is851s;!a86CcXeVo7TWpeSs2tQ;!a869heQitut5GZorAra869;s856t853;ctRrQ;!ed,i5CCo7VJs;!i3U9or0s,us84Q;!cutQlytiz7TN;e9i8BNor5DU;iut7G3riQ;beFp88T;!a02eZhXit6LYoRp8B2rietQs,ul3X4y85Z;a866or0y;f6ORne8BTrtionTsQu75B;al0e9iQ;ng,tiQ;on7KP;!aQed,s;l5GFteE;eQy1ZN;cGs4WDt7M0;c87QlQn6Q9r61L;!lQs;a8BJeLi1;gaQne;ndQt7Z1;a,i2NV;!ed,i1read6BJs;e,g0SCounQto,uncia886;!cQs;eQi1;!ab3d,me8BBs;!eUiSoQpt6M2s,ulg871;!s,tQ;e87Ni5FK;cPn5LGsQ;cu5BMe9i1so85I;na82VtheD;etariaSifRoQ;g7UXng786;er8ALic;n0t;!ed,iQor0s;le0ng,on895ve;!ed,i81Ws;!enXnosWrQ;amSessQ;!e89CiQ;ng,on0ve880;!i1mQs;aQe877i1;b3t4C8;es,is,t0HQ;it7MNy;!an7XZessUf5MSiRliga5YSoQs,us4PV;r7WZundE;ci5H7l72EtQ;!ab867eQi1s;d,er73Y;!e890iQor4MW;ng,onQ;!al1ZKs;!d89NigTs,ucQ;e86Ui1tQ;!iQs;on0v28I;al,i39Qy;!eVlTrStoRurQ;at7M8e7DAi1;l7MGr0;astin3E5e58I;aQiv7LQ;im8ma86Y;dur7MFed6TKssQ;!e88Li89Tor0;!aTe9iSlemQst;!aQo,s;!t3OL;e,ng,ty;bStQ;e,iQ;on4T6ve;ili3NNl85J;am,c0Gde0Fe0Dg,m08n03or00sZtWus,vRx,yaQze9;!n7X0;aRileQy;ge9;cy,tQ;e86WiQ;sa86Mz7O7;am,chRhQ;ee,vi6Q7;aMe73U;c5RFe0m,on6W9s7QOtiB;!itQs,y;iQy;es,zC;cRg83EtQ;!ab3eLi1o7DWs;eRipQ;al87Ze,ia,le9;!ly,s7S1t6;!aTeSiRoQro861us;!r07F;ng,ti80I;!d,r0s,ti7Z5vJ;!cy,l,rR4te0ve86Z;d,stQ;!e81Vho7Z9l6Q2s;!d,f70Qs;eQi3H9k3TB;!d,le7s,y;a28c1Xd1Ne1Lf1Dg1Bhist2AUi84Rjud18l16m11n0Yo0Wp0Or0LsZtUvQw7TQy8z;!aSentRiQ;ew8o7YZ;!a1ZLed,i814s;il8l7OI;ax,eRor852riJtQz5ZT;ie52Ny;nQxt;ce0d774sQt6IX;e0io84W;!agCbyte2C0c09e04idZl7UKsWtUuQ;mRpposQ;e0i85I;ab84Te9i1ptQ;i7XFuoD;es,igQo7UR;e,ioD;!e6SPi1m4urQ;e9iQ;ng,z5;eRiQ;ng,o;!d,nQs;cGtQ;!e,iJs;le872nRrvQt;a58Fe84Ri1;ce0tQ;!aQeLi1ly,meKs;b3ti5EK;hool6GVi7NSo72GriQ;bCp81M;eQoga7ZD;coQquisi62X;rd5;!aToQp6IT;nder876sQ;itQte7NQ;ion5AL;ckSid,rQy3IF;at829eQi1;!d72Wr0s;ag5;ccupQrda3WW;a84Mie86B;atJderga860tiRupQ;!tiJ;ce,ss;!aTedSiQoni84I;erQse9um0;!e9s73Z;!it82V;r3ONtu172;imQo2N5u82R;!in7INs;gRicQ;e9i5IX;e,meK;nQo;an57T;aVeQix804orm5ro1VV;ctTrQ;!a7MFeQr86Js;d,nQ;ce0ti83J;!ur85I;brQceFto81K;ic546;mQnNt7RXxis70W;iBApt3Q8;aXeWiRnisoBominaQ;n83KteE;cRlec83UsposQ;eFi3OO;aRtQ;!ab82Led,i81For0s;me86YtC;c0H4st3VYtermi4LE;tQwn;e9or7BT;aYeXiTlSoQri7WQurs7OV;c6GWnQok5;ce0DRdi83Kfig4FO;in7FVudC;n7XToDpiRsQ;!e848i6;ce,tQ;at867o7WM;d7Y3e6GKpt0;r59EutiQ;on4CQ;ch4XXmb3rraQ;ng5;bh06cti03d02e,g00iXka7UNm,nVsUtSveOwn0x7ZKyQ;!eQi1s;d,r6XZ;!ap,er,fal6M2tQ;!l7O1;ad,haK;!c37UkQ;!i1s6V5;r72ZsQ;eQi1;!d,s,wo7NS;er,matiQue;c78As7Z0;a,e7UAh4o,y;cQsCtiFQ;aQe9i1;b3l5AS;aQu;!k7QN;ach6I9c3Hd3Fe3Dg3Ci35k33l27m20n1Qo1Kp19r0Ss09tZuUv4ANwQxy;der66JeQs,w7TZ;ll,rQ;!bo7U5ed,f78Ah5IWi1le2CHp3DYsQ;!e5BV;ch7YJghkeeps855lSnRrQt6GH;!ed,i1qu7RXs;c82Td741;!tQ;i84Ury;aXeUhTi83ZlSom7DNpour7E0sRtQus;e2PGs,y;!d7JI;at7OTu7U9;e7QYo7ZH;mkPnQ;cy,tQ;!atAi5OV;b3sQto7Y6;h,si7PR;e07h,i04n2s00tQy;!a35Sca7T6doctCHeWgradua7ZIhumo7VCi73GmTpRs0PQuQw7Q1;la3ATr7N0;art7PNoQ;n7VAst5;aRoQ;de72Rrt6MI;n,rk80Ist811;d,rQ;!iQs;or,ty;!eRibQum0;il7GLlTR;!sQ;!s5B4;es,ng,tQ;!ed,iQr01Us;onVvZP;!d,id6r0s,y;c05e9gy,i1k04n02oDp01q7OPr6X3sc70ItQ;!aZeWfol4JhoViUl32Em4oTraRs6BDugQwe6RY;al,ue81I;it0yQ;!al,ed,i1s;!b2Y6;a,co,ng,on0;le,s;!d,nRrQ;!h6SDs;d0t0;!b5BKge,l0;oi818;!oQ;!gQCs;!ch7Q2er,y;e3BJh7X5upiB;co71XeZl3YFoYpUsTulQ;aQis7X8oD;ce,rQt7ZH;!iTPly;!ic7Y7;a,eSiRyQ;!co7SW;es,n752;d,r0t;!v;!s,ye;ch6LLd7Y0fUh,ja,k83FlTnSpRrQt83F;!e6WVh6RTly;!e7EKi6VOs,y;!am,ta1;!e663i1s7VO;!s,t2;cYdVg7UIiAs,tRyQzi;!o,ta82Qv6S1;!e,iQo6us;!ac,fQus;f,icaQ;l,t2DN;!erQs;!ed,i1oQs;sa,us;e,h6CE;eUme,o7QDpQ;!aSeRoQ;si7ZAus;ii,y;do6W0no;grana5YArQ;ani4oy;a0Hd0Ge0Fi05k7IDlYoXs,tergei81VyQ;!eVgUmSnRpQstyreBtec037uret5RGvin6MO;h5T3ropy7XIs;es7G4omiJ;erQorphi0ES;!a800s;a7ADl6Z7on72Ira3RF;st7Z3thy7XD;!niuO4;!aVe6VDinUoTs6S2uRyQ;!an7PW;tQx;a834e7ZJi82P;!ck;at7XMg;ck,n,rd;!cUn6K2o,sTtQ;bu7HCe80IicQy;!alEiQki1o0s;an0z7HF;!h7ZQ;eTiSyQ;!h6BNmakQ;e7LLi1;a,es,ng;!d,m7O1s,w73F;!m7VQn7WDs;a82Xi;ck,nSrQ;!iQo7D2;s,ty,z7VA;d,s7NB;eQi1;!d,m6r,s,y;gnan7ZIitic6SKnSr6YFsQtie7LA;eFonQs6;!e7CZi70JoDs;dext2settStQ;!eQi1le7s,y;!dEr0;ia0;o,ro7UDue;m0tQ;!ic,ry,s;ca80Nge,iQs,u7BD;at7BXum0;ahont7TJkRoQus;!n7YF;etQmark5;!bo6SKed,f6TOi1k88s;at7W9oQ;!n7Y6thor6N3;a0Fckm4e06i02o00uRyQ;i1m6HIwo7S2;ck602gXmWnUralSsRtoQ;!ni7M9;!es,h,sA;!iQ;s5M0ty;d5E1g6TLkQ;!e1K0i1;!a7V1b6E2e0me3DGp7X2s;!g80Xin0s;dQnk,p3Qt3TXugh7YJw8y;!di1;aSeRg7N5nQ;th,y;rs,s;b3nt;aUdTi3M9nRtho7ZAxQ;igl43Yus;a7VTtQum;if6T1y;!g6T7;!d6KTkl7N6sQt7AD;!antRe6T6i1urQ;ab3e0;!ly,riA;c0Eg0Di09n04q6PBs01tWuVyQza0;!a6GHbSda7VEeLf6W2gr6UTh6P0inIli7ZGma5W1o36XpOro7D0sRtQwr39D;hi6ZBi7R4;!ta7Y4;a7PUoQ;ok,y0;di7VUs1Y2;!a,eTfo3YRh,iRoQt5RQypD;!n7V9on0;nQtu7W7;g,um;!au7WAd,l7ETs;ma,tQ;er8iQ;c0q7KQ;!ar,ck,eSi1k4NZn4C0s,tQ;!aQeLi6YXs;gen7OTin,ti7Z4;!d,r,s,tQ;!ar26Ks;d,nQt;!clothAer,ly,s,tQ;!iQ;ff0veE;iari7FTuC;aSeRiQ;dEng;!bo,d,me80Jn7U6r,s;rd0t7I6;a22c1Qd1Oe1Gg1Ak18l10m0Xn0Io0Hp0Dqu0Cr09s02tWus,votVxUya,zQ;aSzQ;aQer7WK;!s,zz;r7EQzz;ar,el0ie0;!al,ed;a,bu7SAchUfa6OPhy,iTkPm4sStQui1NTyN;!an7ZEed,i1m4sQ;!b3WE;!t7LT;!ab3e7YNf72Lle7;!e7EAfo725i1m4y;a,cAh,sUtQ;aRoQ;l0n0;!chQ;io0;!aQe6K3i1y;nt,r7EB;aRel7D4oQ;n,u6SF;cy,nha0tC;aKeF;eSi1kPpRsQ;!que7DN;a,i7LVo;!d09Jli7OYr0s;ne6BLtr,us;a4QBba7ROc03d02e00g8hZi5UHkWnVoSpo39HsRtQup,whe74R;!er,o,s;!tri79V;!cQt;ch77YhQ;et,le;ac3ed,i1;!erRiQm4s,y;e,sh;!t7XQ;e7KSolA;!aQd7EAs,wo7PGy;l,pp7T9;ar,y;er0h53Xus;li7V7m,pQ;!eQinIle0s;d,rn74A;aWeVfer7YDgrim7SFi6X9kUlQot8;!aSi1oQs5T1;ck,ri5wQ;!ca7VSs;g7W4i,r0;in72S;!d,s,up;f,r,te0;aQe7EG;!c4PW;al3eonUgShe2EGl7CQmentRn6pOsQt5AD;!kPty;!a7VRs;iAo6T1yQ;!ba6RW;!ho6JJs;a7VFcVdUrRs,tQ;!er,je,ro,y;!cRo,rQs7QX;e,ot;e9i6WP;!moK;eQi1;!d,meJs;d79OgQ;e,in;a00cYhu3MZkUn7RGo,s,tQ;o788urQ;eQi1;!d,sQ;!q7I6;!axe,eRfoMiQlCpock7C5s,up0wi7MZy;er,n6KI;d,rQt649;!el,i1s;adQhu,o7E5;il7UA;rd,s5TJyuB;f,k,nQo,z66Z;i7WAo0;a0Zds,e0Ti0Gl0Fn79To00pbb,rXuk7M2wo7IQyQ;lVsQ;!iQ;cRoQq7HT;!l4UJth715;!al7V3iQs;an0st0;l7QYum;asQe7M0yB;eQi1;!d,o4UFs;bi3OQe02nZo7JJsphXtoQ;!copVdynam7RXe1ZGgTjourSmonta7R0n784sQvolta7RX;!hopQynth3RZ;!p5;na4RZ;en7RTraphQ;!eLi5ECs,y;ie7BPyN;a5SBorQ;ic,oDs,us;eRiQogra3LMy;c0es,ng;!bo6NWd,s,t7MHy;b5A4niQ;ci6XEx;e4A5ox;lQne7OOp6XP;!aXby,harm5MZiUlSoQ;!me7JZsophQ;er0i2S1y;!iQy;es,p77E;be7EFpQsti7MD;!pQs;!a,e,i7MB;delph7T7nQ;der6QCthropQ;iQy;c,es,st0;a76Ge61VlUnQromo7M6w;ix,oQter40A;l7FRmQ;!enQ;aFCon;an,ps;lXnWrSsQt;eQi1;!d,o6P0r0s;!aoh0iseAmaQre7OP;!cQ;eut09iQol3L2y;es,st0;!t673;anx,lQ;ic,us;eRfQ;f,t;i4S9nn3U2;a3Lbb7QCc3Hd38e35g33iBjo32ki1l2Ymb2Xn29o27p23r0Cs09tUuge6SCwSyRzQ;ue7SXzi6EG;o7QIt6;s,terQ;!schmi1ZE;a03e00iYrTs,tRuQya;l5ABn7SE;er,iQy;co66Egr6KVn584;!a,el79DiToQus;!chemRdol6AZgr7HJl6V3s,vQ;!a,ic7WLna;ic5OS;!e,fi5;!tQ;!e,i53T;!chiJrQy;!ed,m4sQ;!bu6B8en,on;!l0rF;et7N8haw7GJky,o0simis768tQ;!er7SOiQle,o,s;ci7QZl7SK;a1Fc18di7SPe17f11ha6W6i0Tjur0Sk0Rl7G0m0Mn0Ko0Jp0Cquis40Cr0AsYtWuUvQ;!aSerQioDs,y;sQt74P;eEi7U0;dCsi3P3;!g7RSsQvi4;al,eFi1;!a6L1h,iQti,urb1O6;neK;!eZhi1iYonTpQs6ua1QT;ec7MPiQ;cADrQ;a7SDe,i1;!aRifQn70Is;i569y;!b3e,ge,lQ;!iQly,s;tGz5KW;a7JFmm6st1LA;!cut7UTp75Rus,verQ;an7UDeF;iQy;!er,n7UY;!eRlexQs;!ed,i4VF;nd3C6tQ;ratSuQ;aQi7QQ;lEt7IK;e9i1or0;!n,xi7MO;e7MXiQod;c64Zl3;!aTeaSiQuta7RN;an,ssiQt2VU;b7QBon0ve6PS;b3tC;fro7SYli73Wn550;!ed,i7QTs,y;eFy;!cWgn6l4I8mVodTpRsQwi5UJ;co6UPh4FK;at6YKherQ;al7RRy;!icQo1J1s;!al7RPi7Q8;et7QCort6BS;ardi7C4lA;!ectTid7NNorRuQ;me9nc4A9;at4ZDce,mQ;!an7PYeLi1s;!ed,iQly,o;ng,on4TN;!g3IXi7S1mp4A4nni5DOz;eShRivJoQus1VIy;c7I8l1VF;!an7TCe7SO;!ivCll,ntSptQ;iQuJ;bl7PRon0ve;!a717i7O0s;!l7NP;a,e,i18QpQsi,t7O8;eQi6KXoBy;!rQ;!cor7Q1ed,i1miKo6C0s;n7JHpQr7Q2;!ie,le9;a0Ac09d06e05g04h,i01k00m680nXro7QKsVtRuQ;lti1PYmb7RL;!aQecost6T1h6HKi7E5oJY;!gRtQ;hl6;on0r77M;!aco7Q8iQ;on6GCve;!aKe5VRiRsylvaniaQy;!ns;es,le7ng6SH;ni7HL;cillPle,nsula7RKs7M9tenQ;ce,tQ;!ia7NT;!u673;lo6THtr7GY;a7TEeRi1l3C2rQul7DQ;ag6i7I1;jo,r;e,haKil2ST;!lRnQ;ce,g;!izCtG;e2B0l3BVro6EH;aSe,h772ic6T7lQo7KXt725vi6VK;!eQ;!gri7G3t1XI;d6nt;ra72O;asDgQs;ed,i1ot7OPy;d,i1kRl6FLpQr5ZXs,ta,ve9w70R;!eLho3i1s;!ab6YGed,i1s;aWdl6OFeTiRophilQroEHs;e0ia;atricQcuHgr70M;!i6SUs;rsOsQ;!tQ;al0ri6SR;gog6RWl6M3ntQ;ic,ry;an0kSos,s,tRuQ;li1DUn1OA;orJ;!e733h76Gi4Q4;bo7AAcUk5QNl,nutTrRsQt,vy;!a7SIe,y;!ce,lQs7KQ;!m4s,y;!bu71Ss;eRhQo7GC;!es,y;!a77Ff6URk60Om32Lti7I8;a4Xbl4Wc4Nd4Ke4Ig4Di48ja43Uki47l3Nm3Ln31ol30p2Rquit7D8r1As0Wt09u04vYwVxUyQzu;aSba7GYche7G8d7CSeRinIlo6V0me7SAne,o0ZDpQro6GPs7KJt6;al,hoB;d,e,r0;b3l;il,t6;an,el,i1nQs;!brok2e7E0i1sQ;!h6LQ;arot74JeUiTlQ;ik,ovQ;!a,iQ;an,ch;a,li7Q9ng;!d,l,me7RXr0s;ci7NLlQn7B4p7NQsC;!a,eSiQo,s6BXus,y;!e,nQ;a,e,ho;t7LXy;agon7NWch0Be07h03i02moHna,rUs78UtQ;!a7LQeRiQon,y;!e0ng;d,n,rQ;!i1n8s6;iUoQ;lSnQ;!a7KUiQs;s797z7OL;!l7QPm7CSs;arch7GRcRk,mo67FotQs,z7NM;!i02Ws;e,ia7DJk;en1MLl,na,o0;!an,et3SUfi5ZToQs,w79H;g49QlogQs;iQy;c7NJes,st0;!l76AntSrQs;!nQs6;al6NPi7MWo;!ab3ed,i1ly,s;!e7PMi6ILou74Cwo7RDy;a02c01h00iph1PZoZqua3sUtQ;!a,eSiRor7GDrQs,u7COy;a6LOiAy;c7OAes,me0ng,s;!d,l0s,ur;!aTbo6HGco7IPeRiQk7CRov2po7C8wo7ES;nIon7FUv1P3;!d,l,ng7MRrQs;!by,s5SQ;b3ge78Y;!li68W;a,to;al,hJoe,uJ;!de7DH;a0Kb7F0c0Jd0Ie0Efa6E7i0Ak09l05m04ne03o01qu7EQr00sYtQva737;!a6BZe5SThen6iQly,ner5CPon,r5HMs,w7B7yN;!al7NUcQe7P5ng,san4XZti3FI;ipSle0uQ;iar7NUlaQ;r4JHte0;aQle;nt0tQ;e9i7INo7KU;!a,e9iQl7C9n7BOon7JQ;m7JMng;!is7QWot0y;!chial6MWdGleQ;!d,e0;ll,t;!a,es4i5YR;aSe77DiamentRoQ;r0ur;!ar402s;n7PCy;!a0e74Bin42Mla7IHm4s,w7AOy;!ah,etJng,quJsQtG;!hQi6Q5;!es,iQ;on7LW;!d,e,ntQs;!a2QFhQi1s;eQo7G2;sCUt6NK;!n2o24E;!el0h6Q3;!b0Ac08d04ffPg02ke7DVl00mXnoVpRsQtroop7LP;!it5FKol;et,hRlQ;eg7JZ;ernal7LWrQ;as7MS;iQrmJ;a,d;!eRili1D6ouQve2;nt,r;d7ILt6EO;egJlel3O5yQ;mp7JQsWDt7JQzC;!on,r0KHuQ;ay5QT;e9iRoxQ;!es,ic7LO;gm6K3nQs7P6;e,g;eQhutC;lsDtam629;le0ol7JH;aXeSiRpQri7CFua,yrD;a0i,u,y;!er,ll6;!rQ;!bRed,i1le7ma5TSs,wQ;e7ALo7PC;a7D1oQ;aMy;!cy,l,razz1YNs,ya;a,i7BZo;a06c03dZeYg0handl289iWky,nVoUs3QItQz7KT;!heSi6PNl1omi7EUry,sRyQ;!ho7LM;!u7DP;on,r0;p7KYram6X5;a,ed,i1;cQni,s7LH;!k5ZHs;!l5FPs;aSeQit659o7MGu;mQrNy;ic,oni78Z;!s,v7FZ;a6QWhRreaQ;s,t7IR;ay7CTo;cRmaQs5E7;!ni6OI;ea,he;e7KYm77IpQ;er8hl728;a06e01fr7A5i00lXmVoSpRs75GtrQ;ow,y;!ab3it44N;!mQs;aQi7B8;!rA;!a,eQs;!ir7FJr,t6SC;!aRe4L0iQor,y;a6XQd,s2;di78Fvi;!n,sa7J8;!d,fa7N6ont273rTsQt7I6y;!tQ;!inQ;e,i6NZ;!mo;ce0dPis,n76NtQv2z54K;ab3e0iQ;al,ne;!stan19D;d,ge,l,nRr677sQ;!a,e,l79J;!eFf6Q5i1ki5W0le79LsRtQ;!b25ZeLi6LSs;!taki73I;anSeRinQo7HP;a27Lg;!ant6E9d,r0s;!iQs;ni,sm;an0doQl7K1;!phi7HE;aw4dQil7JZlo240ma,re0s,ua;ed,iQl6HMo7C3y;es,ng6MA;eWhViSkQo,qui4DHt0;!aQe3SNinIs,y;g7GRrd;fQn0RM;iQy;c725e6XRs7G3;e7J5in3N7yde5VD;!d,m5FIr0sQy;!e6WI;i6RAo;n,ppi,vo;a9Wb97c8Pd8Ie8Hf7Pg7Nh7Li7Hj6D4k7Bl6Tm6Nn6Bo66p5Er41s3Kt3Bu25v03wZxTyRzQ;a0S7oBz5HZ;aQez,st7IUu77Q;b6QVma;b7B0ca748en,fordTidSly,naMyQ;coQg1O0mor6tocP;doBntP;a7M4e0iz5;!sQ;!hiH;a6V4eSi1ls,nQ;eQi1s;d,r4U1;d,n0s;a1QeSuQ;lQm;ati7M7e;n0rQ;!a1Kb1Hc1Cd17e13f11gro68Uh0Xjoy5ki7EKl0Uma0Tn781p0NqualiTMr0Hs04tVu6STvUwRzeaQ;loD;ei2R9helm6M8o3VKrQ;itQo3NQ;e0i1tO;alu6L1iGL;!aWhSi7CAly,oRurQ;e0n8;!n6T9ok;e3I1iSrQ;ew,owQ;!i1n;nkN;kQx5;e6QAi1;!aw,e00hYiWleVo7AHpenUtRuQ;bscrib5pp7I8;aRepQo22Nuff5;!p7L9;t7C1y7HC;dNt;ep,pt;g79UmplifQzeF;i3S5yi1;adow7IQoQ;otNt;a0eQllNn1N5;!i1n,r0s;a6JSeTidSo7DIuQ;lCnQ;!ni1s;dOe0i1;acQli7KS;h7K3t4QT;aUlay7IGoTrQ;ic5oQ;ducQtec6V6;ed,ti6;pul7GQw5XE;id,ss7E7y3CD;n,t2ZR;aRoQyN;ad8ng,ok8rd0;id,nd,p3M4y0;aSeaQ;d0rQt7I5;!d,i1;ng6ENul8;is364lQ;i2SCow8y;aSmpRstim7GXxQ;c43Epos3SNte6EN;hasi6UK;g2ti1;id,oTrQue;aReQi7CH;ss5;ft0wn;!i1ne,se9;aSh3USoQrowd7K4;at,mQnfid70Gok7G7;e0i1pensa6EL;me,pQst;aci7GI;ea5ZElo672oRuQ;i6LQrd3DJ;aMok7JX;bund7JTcQll0rc35L;hi3MBti7H2;l,r5JMti7IY;a7DPch,ght0Ui5JXn0Tr0Rst5XLtQya1zo;a4GWb0Oc0Nd0Le0Jf0Fg0Bh4XMi6IOl07mod5numb4WTp04rZsSta,vot5wQ;a3MNeigh8itQ;!h,t5;!cVet,hUiTkir7F8maSourc726p1ONtQ;an5UFrQ;et2YRip3L7;rt7FQ;de75Rz5;iBoB;or5;aSea73JigRunQ;!ni1;g2ht;geQnk;!d,o4MYs;aRerform8oQut0;st0u5YR;cCt1FI;aRet0iQo4J1yi1;er0nCveF;ndQst7FCw8y0;er,i786;oi1rRuQ;nn5;ew,owQ;!n,th;iRlQ;a17Row0;eld5AGtQ;!s,t5JH;d,rQ;!mo7HXwe74E;at5id,oQ;!ne,or0;a7I2o4ZRrG;a78Aid,oQreak0ur7I1;aMu7BW;j209sQ;!el5RS;ce0d;!a,n,ta;aXheUiToSsu05NtQ;a75Fer0oQ;!m6JF;ko,mo;l7FHs;l6Z9rQ;!s,wQ;i7FYorld7FD;ku,ni;a04bo03c00go79AhYir7CAka7H8lo,mWo7AXpr74ZsVtQu0REval6ZNwa0I0;eRia,rQ;aci6YCi4U7;nRopQ;a1PMor4XO;!d,si6Y5tat4LV;a,i2FP;an,oQ;nd,s7C2;a,iQ;ma,n;ar0illQ;atQos1O2;e0i7IJor0;rn7ILurB;ge,ka,mQ;a,u;a0Yb0Vc0Sd0Ke0Ig0Ch4i04ju7GXl02mo7B1nZphXry,sWtSv66VwRyQ;ou,u,x;ell6K7h76Y;e61ZhQiz,on;e,oQ;!doQg4YRped7CS;nti7GRx6ZN;i60Lon;anQeD;!a6PLed,s;aQe7CSitho4F3;mentQte;!a360s;aQea7EGov,y;!n6YS;entVfi7DWgSnRoQ;lAn;!o7E7;a6CUinQ;!aQs;l4B2t7E2;!aQed;l0t6W4;aQiAy;nQsm6SG;!iQs;c773sRzQ;ation7BLe7EEi1;a7EQe5K2i1m0t;gQn,o0s5JQ;a74Von4FS;a36WeTinaQn7GZw72D;n7DFrQt7HE;iQy;es,ly;al,n,rQ;!ed,i1lQs;iQy;es,ne7;a0hQs;a75FestraQid0;!l,s,t7CQ;iQs;s6tQ;!al,er,i1s;c48DlEnRtorQ;!io,y;!gQ;e0ut6HF;a0Ge0Ah08i04ossu79FpXrWtRuQ;l6WWs;ed,iQometr5WXs;c7AWmQng,on162;aRiQu25;s0W7z56T;!lE;ah,y;a,enh6XDoRressQ;!ed,i799or0;ne7H3rtunSsQ;ab3e9iQ;ng,t4LW;e,iQ;s0VYtG;a5BQe,nQum;e9iQ;ng,onQ;!at5s;el7CZthalmQ;ic,ol364;c,d,nUrQ;aQet7AE;!b7C8n6AMs,tQ;e9iQor0;c,ng,on7AAve0;!eLi6EQly,ne7s;ci7CBl,que6BL;dlAg7FXhTlo1mSna,oQps5Y3ty,u74XzC;h,oQps;!h,oh;e,p0T3;h,s;ass79Jb7EDcZda,eXg3DTiWlVrus31CsStQu4YKwa749yx;ar6OThe,oQ;!l4CZ;c1Eet,hoHiRlQta79N;a3HLow;de,te;iBoo3LJy;on0zu73F;dPne7roDsQti764;!e5YPie;e,h46AoQ;l35Gmi1;aUbudsm4eTiSniQri,u7DV;!bDpQsc1BH;ot6VMres6VM;cr6no760s4FOt2H1;c,ga,let10Dn0r,te6G2;ha,n,r;a06d03e02fac3VSga,iXlWmVof,sUyQ;a,mpQ;iQus;aQc0;!d,n0;en,on,s6;e6W8o;e,i7FJy;gRn,vQ;e6V7i1TS;archRopolQ;i1S2y;s,y;a5O1f5T8g;eRh6TGie0m4sQ;!mo633;!n,r,st;f,v;aTeySiRlaho71Sra,sa726toberfe7DNuQ;bo,da;e,na71Eta;!doke6WG;da,mo6JIno,t1ESyQza702;!a71Ned;c77Mga,lRnQs77Mwa;k,t6MO;e3Z5f62Ji1m70IsQy;!e8C;hh7FMioQ;!a7B8;aQdOgy,l7C6re0;mi,ta,wa;a772co0Gel7B7fZhXit,jWlVm7APo67JtQus,wh73Cyou6W0;enThQi74X;at,eRiQo7BP;n3CVs;!ir,m,se;!timA;i72Xo76C;a7DPoy,us6ID;er7EMiQ;m,s;a67Pbe732e01ha773iWlUsRtQw8R;he,o;!cRet7B2hoQi76Gp5TCta780;ot0re;reO;iBoQ;ad7BG;cQi7DQng;eSiaQ;lQt6W7;!d6Q9ly,s;!hol3BZr0s;d,nRrQ;!ed,i6CIor0s;ce0d6COsQ;e0iveQ;!ly,ne7s;ur7B0;cd,dip6NBuv6ZV;dVeTiSoRum,ysseQ;us,y;m6UYr3XXur;e,le,n,oD;ll7DXon,r,sQt78A;!sa;ba62Ie66WitGly,s;cZeanWhVlc,tQul6YQ;aRet,oQus;b2gena1H8p6UJ;g6hedr6ne,vQ;e,iQ;a701o,us;i,o6STre;!f60Ni70XogQs75K;raphQ;er,ic,y;asi12JiWlu2Z1uQ;lt,pTrQ;!ed,rQs;eQi1;d,n799;aQie1Y8yN;n78Fti4JX;d3RYp2UM;a0De0Afusc4BUi08ject06li04nox4GDoe,riga6U0sTtSvQ;er7A8iQ;atCo73H;ain6KTru3MPuse68G;cXeSidi4oleRtQ;ac77Cetric6T8ina51Jruct7BJ;sc7A5te;rvRssQ;!ed,i74A;aQe79Qi1;b3n3JLtQ;i4JKo77L;enRurQ;e6U4i4DI;eEitG;gQq5ETter53Bv4E2;at6MTe9i6SY;!ed,iQor0s;ng,on75Zv2WN;e,tQ;!s,u6O3;di4N8liRrQs70Ay8;o0NKst;sk,x;di7D5ma;hu,kSrs,sRtQxa6U6;es,h0meJs;es,is;es,lQs,wo72V;a752ey;a87c86d2e5Hg5Gi3Qo0Rt0PuWvid78VyQ;aUbTet,l7B0mQpd,s62K;an,phQ;!oQs;!mani6U4;e5RWo5RW;da,h,ng;a0Hb6PAc0Fd0De437g0Ci0Bke9ll09m01n00pti558rXtQwa,ys;cVel791h609j1T7m5OAriSsRtQ;e758i1y;!he74G;e7CFtioQ;nQus;!al,i7AK;a791ra0JL;em5RLi6R8sQtur643;eQi1;!d,ma70SrGs;a,chuc5K8ez,ne76Ko,s,z6KM;a75UbTerQ;aRic6TFoQ;!lo48Tus;l0t6O2;!eRi6RXnQsku743;e7u76S;d,rQ;!ed,i1s,wa1;!iQ;f4MSty;s32Zt;eKg6PQ;e0g78XiQ;e,st,ty;k6SWleQ;ar,i,oti73Ius;l,nce9;ac,sQ;b,c;a2Nb2Hc2Gd2Fe2Eg2Di2Bk77Tla6XSm26n1Co17pe,r0Ks0Et02uYvTwRx5LRy7ATzQ;o669z75K;aQheHt,y6ZE;da58Zk;a3BCeSgor71NicRoQ;!t6U3;e0k;lQmb2;!i79Vs,tG;gSn0rRs,veQ;au,l3;!i34B;at,ht;aYch5RKeXhViSju79IoriRre,s,tQwithstan5L9;e,i5CH;e76Yo718;cQf4OWng,on74U;ab3eQi1;!a6Q9d,s;!er,inQ;!g645;!bo4A1d,p6WHs,wo6SO;!blRrQt4G1;i5A4y;e0y;eTfera4TPh,i1tQy;algi6Y0rQ;aQil0u72Z;!d1JD;!ble40dQr,s,y;!i72A;a0Bb0Ad09eOfo5XDi08m03r02s01tRvJwQ;ay,egi6ATi6U0o70V;e,hQon;!amXb55KeTm4umbSwQ;aMeQ;stKE;er684;astSrQ;!ly,nQ;!e6TCmo78R;!e682waM;pt6;e,k;e72Gi5X3;!aQie,s;!lRnQti71U;!dy,s;!cy,iQly,s;ty,z6OT;!e5TMko;!ic,sYF;ac,e6RIit;!d,h;dl64Dg79IkTnSoQr,se;!oQ;!o70P;!a6W7e,ti6ZZ;!ie,s;a,bin5JZc0Cd0Be09f08g07i,l05me40Tn03o,pYreXsTtRuni6vQ;erbJi5SWolaMC;echn6J3rQ;adi046iviJ;ens2OApecStQ;aQi6YKop;ndaMrt2;if741;fund5OIsident4BP;aThys6IWol3MZroRuQ;bl73Y;d45IfQ;es0XYit;rtis4y6H3;aQy;!tD;eQine6U9;thJ;!overnm3NW;at68Qer6P7ic76F;!sQt2WxisteK;se14Gu6SO;es0RFiscriminat3TE;e,hala5LUoQ;mSnQ;formi3T6trovQven03K;ersiJ;mRpQ;e6IUli78D;er6IFittJ;aTeSiQu76Y;!nQ;a1XMe6G2;!ncla71J;!d6JHr;r,sQ;e0i002y;alAgPuc71C;l6MMs;a1R1d785e0s,ulA;he0turn6VQ;by,el,iUlSoRuQ;!ko,na5S7o;dGru;eQy;!m6U2r,s78J;li74Gs,ta;h,m;a1Cb39Lc11d71Ze0Xf74Eg0Ih0Giga72Ck0Al09m07n02o68Bp00rZsWtRxQya767;e775ie,on;a,e,h72NpickNrQs,ty,w6XG;a53EiSoQ;!gQus;en,lycer0PL;c,de;a,hQka,s4t;!a,iQ;!da,mu767;ma74Yo,va6V5;pQs;e6IWi1le0on,y;a,compo6TYeSgRi,ja0n6RFo,tQ;en6ORh0;!ke;!fo6WLr0s,tQ;e338ie337y;a,bQm1HTr6YA;l73Tus;a,e0ka,l,s3KN;a,e0h76Yi3YRkUlaToQ;!laQn,s;!e6R9i,s,yQ;!e6R8;s,us;ei,i,o;aQi5EU;al,l;e02g00hQ;!l5YCtQ;!cXd1LAer,fa6ZUgo5U4hWiVlUmarTsQti6XQy;!hRtQ;a703i6WG;a6ZHi6P1;e0i6VW;i6VQy;e,nga71L;awk,or74C;ap,l5VA;aQer0li1;!rd73Os;!l,rQ;!ia6VN;ce0dermSls56YmRs,tQvA;!zsche5ZJ;ey2;ay2;aragua6VIco6NBeZhXkUoQu;!demDlQtiB;!aReQo;!tt6YY;!e,i,s;!eQiZ7l6YLname9s,y;d,lQr4OP;!ode6s;e0olQt;!as,s6ZD;!ly,ne7r,st,tG;ga74Tll,mh,ngQ;!nQ;ia1;a0HLos,uyO;a2Ab27c20d1Ze1Sf1Rg1Jh1Ii1Cl1Am19n6YMo16p13r11s0Yt0Tu0Fv09wRxQ;t4I1us;a774b05c04e03f02ga711h5UNi6V2ki774lZm4ne7po6O6sRtQ;!on6MO;!cast5TIfla6V0gro5SXiAle0JmVo6WQpTrRsta6AEwQy;e75ViHo6OE;eQo5HA;ad2el0;aper51VeQriK;ak,op3;aQen;gaziBn;in,yQ;!wQ;ed0;angl5ound3EI;ll,r,st;a1M4om72B;erQie0o56Hu70S;g,ry;a70GeRiQ;l3ns;!n,rQ;!la6YMmRs,tQ;he0RJ;i6YKoH;ma5TCrUtQ;er731rQ;alQi4ZJon0;!iQs;se,ty,z736;al,oQ;!logVn0p75CsStQ;ic,oxPransmiQ;tt71U;cienRes,is,urgeQ;on,ry;ce,ti744;iQy;c6N4st;fl3OGherSo,sRtQwo33U;e6GCi5XGle0;!ca65U;!l3B1wQ;or6U2;bi5ZXsRtQ;!e3PLi1l72Qor,s;!a,ie;d6AKf,i,o,u6ZOvQys;!e0o48Cy;alRhQo65EtuB;ew0;!e727;li1C0nRpQ;hy508reB;!atJ;es6YHo;eh,lQs6;!a,e,ie,o,y;ghRlQm4n,th2;!l,s6;!boQi1s;rRurQ;!ho4NGi1s;!ho4NFi1ly,s;a,emi75Eru;atUlRotia2R9rQ;a,o55V;ect5FHigQ;eQib3;e,n71H;e9iQo6ZB;ng,on,vQ;e723i352;ar5EZerti6HDf;c6J8dRi3NHko,lQs6tu;!a,ey,ix,u,y;!ed,f5WEiTlQn,s,to,y;eQi1;!p2CUsQwo74Z;!sE;e72Wng;a,dy,ra;essUkSroQt6PB;ma6EDpQs6XP;hil70Qol6XO;!ed,i1lQs,t61A;a704iB;ar3TZitQ;atCiAy;raska6QKuQ;chadnezz6P3lQ;a,oD;l745nderth4X2p40XrRtQ;!e5X5h,ly,ne7;!by,e5LSi1ly,sQy;!ig2IC;aa,i66Nle;acp,b20c1Yd1Vf6XVg1Si1Ok1Lm1Gn17o16p11q10r0Ps0Kt04u01vVwab,yUzQ;arRca,iQ;!m,r,s6D0;!eQ;ne,th;l6G1s5VA;aUc6FTeTiQy;d5Les,gaQn;b3tQ;eFi3HMor0;!en,l;jo,l,rr6MV;g6KYseRtiQ;cJlD;a730oD;a03e02hZiUo,suTty,urQ;alQe9;!iQly,s;st,z62C;k1DBmi;!onRvQ;e0i6ZC;!alQho6TPs,wi6VC;!iQly,s;s6DXtGz6I2;!aQ;l72UnQ;!i68K;!sv5RL;lQr3GYs6JR;!e,i6V2ya;a5WAcTdaq,eSh21Xir,sRtQ;iW7y6I9;au,er,im;do,em;ar,eK;aXcUdo,esu4f,i3TVn1YErRsZuQy;!se,to;aQow4YR;!tQ;eFi0UFor;!issRoQs;!lep5HEt6W2;e,is4N7us;!sRyanQ;!a6P3;im6JA;ahd736uadr6Z2;aTe,ht6J8i2k5GJlAolRpQs5E2;er,i63Ky;eQi;on6LO;!lm;k1CDmi,n6PXsu5O1to;aXc6YDdVet6WVg,i54JjUki1nToStQ;es,uQ;ck6QO;!bo6XDsBEtechno3ZA;a,i6VCy;i1o;a,hi5KMiQo,u;!ni,ta;!e,k6T3mi;as6WMeRiQ;!b6YLki,ng;!d,lRpla4X7r,sQt5P0;!a5NOpa71J;e7y;aQed5XBra1ul;!ga6OBha702i,ji6ONmu702nQya6ON;is6UMo;du,k,l8na,rRto,veQ;!ly,t6XV;!a,oQ;bi;aRel,g71CiQo6W5s,us,y;!la,sa;!no,r,sa6MTt6N0val6FA;a5UZeRiQja,s,u,ya;a,ne,r,ya;r,zh6W2;el3hQ;o0t;b5il,lDoQ;b,o;aI0cGQd6O7eCKhCJi73k6MDl3m72nemC6o2Dpeg0r6OLs2Bt69Uu03w724yQ;anm6MIc63Be01j1IJk00lZoXrVsRthQu1wi6PV;!b1VHic611ol3YEs;e5KAhkPim6pa70Xql,tQ;erRiQ;c2GKf2KZq6LK;i213y;a,iaQna,on,rh,t6VL;d0m;carQpi6OO;diJ;ar,es;a,es,on6XT;o1r0;a1Wbar6FCc1Td1Pe1Off1Ng1Lha1Kir5TGjahideOk1Il0Wm0Sn0Kpp6FBr0AsXtSzQ;ak,e,zQ;leFy;aTch,e9hu,iRo,tQu45N;!er5KSon,s;l70ZnQ;ee6K3g,y;gOnt0t70Y;a6QMc00eZhYiWkUli58In,sStQ;!aQer8n,y;!c5WUfa,ng0p6HJrd0;!el0oQ;li5J7;!etQr6PEy;!e6WXs;cQng0;!al6Y7i612ol6D8;!ro5C7y;!d,s,um0;at,lCulaQ;r,tuH;aYchXdTiSk1ZUli,mur8ph6HZrRtQuga6N0;au71Ehy;ay,y;el,l6GR;erRocQ;!h,k;!eQfa6ZVi1oDs;d,r0ss;!is6;d,ka5V9l4OBo6NTri,t6FK;cUdTe,g6R7iRn6C8oz,ro70EsQtz;on,t2;cQt61M;h,ip6Z3;!aBi,o,t,y;hQie;!aQi615k5E3;usO;bSmQps,s6HHt6K5;iQy;es,fi36K;ai,lCo;a0Ab54Bc09d08e0hol5XRl05roon6M2tiQwr6KS;!bil4M8c03di02et01f00lYmWnation4SYpRra69GtQus2ver6WY;askNu6VE;art6HAlQrocess6C5urpo6WW;ay2eSiQyN;cQe5K9;a6X1i6VT;!s,x29J;ed6W7illionQo6RS;!aiH;aQev653in5F9;t5G1y4C3;acet5u3ZX;hn6U4;m0O4s0O3;hann64Yolor6V6u0O7;!ah0eRiQs;g4n5SF;d,n,r,t;er,o6;a6Z1h6WK;n,t63V;e6NUhQund4;erj67Ft6KB;mm43rr5GW;gQhJs;eLin3PTlAy;!in0le660s,y;ll2r6TN;dSsQ;!linQ;gi1;!ie6XVlCyN;hQk2ZZoDus;!aQo;cho0s;d,h,y;gQie,to6R9;id,str;a4Cb49c45d3Qff6NHg3Ph3Ji3Gj3Fl33m30n1Xo1Qp1Pr0Ws0Qt09uYvVwUxTy1DAzQ;aRil6VPzQ;ar4U1ie;mbiq6IYrt;ie,on;eLg6C9i1;ab3e6T0iQ;eQnI;!ma348s;ch,lZnVrnUsRthQ;!ed,f5QIi1p4MIs,wa6N3y;eRsQtac5UJy;aL2e;!r,s,tr4Z3y;!eLf5QEi1s;a,d0ir,tQ;!ainRed,i56MsQ;!tua6G0;!e5B4oDs6QEt6KB;d4WSin;a,eKGh00iYl6KFoRs,tQ;!a,e,o;!c6IMrQwn;!bUcRiQo6V3s,w6J2;ng,st0z5;aRyclQ;e0i6WO;de,r0;i60Qo6MP;!f0on55CvQ;atS7e0;!baUeQra,s;fru05KrQ;!b6W7fQho6ODi1l2BXs5UL;!uckQ;!er0inI;ll8;a6R6by,cUeTfi4FQh6XYleSquRsQtE;!ad;e0ito4YW;m0y;!r,s,y;a,ow;a0Fbi0Ed0Be09g07i05k,l6JSm6WBn01o00phZrVseJTtQ;!aTeSgagCiQon,ua6SBy;c6APfQm2s;i5yi1;!m,n0D5;l3QRr0;iRoQ;!w;e,g4sQ;!on,s6JJ;!eDin0IKol3UBs;!cc8Hn683se,z5M8;!ay,inQ;!gQ;!sQ;!i6PBt6I9;!ar6T9bu6PVn,tQ;a,z;!an6CFenQue0;!dor3TAste5V0;!au,h5L7i6V7lQno,ov2s6O1t69Xy;!a6PQlQD;aKeQor,r5;cQn;ai,hai;d422us;!g,iBlQn,ss,tori6PBv6TFy;!e0iQly,s;st6G3ty,ze;e39Ri1p6WEs;chNd624i1k5EOl6XFnRrQs6WYt6SH;!eFi5JKla60Ps;!bTey,i5ORlRri6TTsQwa5JOy;!hiBtoB;e7iQ;ghtNt;a6TPe6UP;a0Qd0Pe0Mg0Ji0Ik0Hm5CIo05r1GXs02tQum3AYy;!aZcla6WVeVgome6RAhUiTmartHo6QYpRrQu,y;eJo6TM;arnas6TLelQ;i2li2;!c1QA;!l111s;!ci60Yi6B5neg6B5rSsRvid6C5zQ;!u6J3;!so652;ey,o,rey;gQigBlba6JNna,uk;!e,ne,ue;!an60Seigne5P3iRo6UXtQ;er0ro1RW;e5P1gn68I;!cYgWlUm6SDpolSra6VDsyllab6QQtQxi6O9;onQy5WK;e,oDy;e,iQy;es,st6FAz6AX;iQog5KF;n5BMth66R;am4DRraQ;m5XTph0;hromRlQul6OP;e,onJ;at6QFe;!ey5PLfi6KDs;!ca,e6UNk1TPq6G0tor8;!er5PJk5MMoQr4N1;!lQo6ST;!ia6K8o6KMs;!tRyQ;!ba2TXle54Hm26Apen6ELs;!ar3LHi5NI;ay0e,o;!co,dno6KMh4mi,rch6LIstQ;erGic;a,ba5LRentRmQo5FWs;a,ie0y;!ar3LBo6FCs,um;a00dZeVin6NHlToStRyQ;!bden6G4;!en,o;ch,t5K9;!a641iQoy,y;e,f3GF;!culShi6NNsQy;!l6HEtQ;!a6SIeLi1;ar,e0;!e3FGi1o5NFs,y;r0ssA;a6MXi1P7o;nAra,stQ;!en6QQurQ;e,iz2;aSiQ;c4nQt;d2i;ir,mQn,wk;ed,mQ;ad,ed;adis3M6e6RAul0;al03eViUs,uQ;lQs;aQe0;r5LWtQ;eFi6or;!c6FDf48Pglia5D3;!lWm0na,rSsQ;!tQ;!ly,o,y;atSnQ;!iQs;s6NQty,z69D;e6BRi6UFor0;!ed,i1l6RNs;!itG;cas58EhSkQtezu6H3;!e3GCingQs,up;!biMly;a,izu6FE;b5ilQl6GFs5JIy;!e0iQ;se,ty,z4K6;b,i,nQt0;!a,ed,i1s;hmm,mm63C;a54c4Jd43e42f40g3Who,j6FEk3Tl33m30n22r1Xs02tVu6S8wa,xUySzQ;oguc6MSuQ;ki,no,s62P;aQos6MQu0CX;!gi,ko,mo5YJn,ta,za6F3;e68Hi1tu6FXup;a65QchVe0ig6HUoUrTsuStRya,zQ;i,v5OV;!al,en0s;!bis6MKko,o,ru;a5N4e;!chond63Z;!el5N2um;a1Gbe1Cc10d0Wer0Vf0Tg0Sh0Qi0Ljudg0Kl0Gma0En0Do0Bp08quotCre07sZtTuQ;nderstQsC;andQo6K5;!i5S4s;!aSer0let1DYo5KHrQs,y;al,eQiJu6S6;at60Iss6MO;!kQ;eQi1;!nEs;!e6SBhapOiUou626pRtQus,y;at33Sep;eQo5F2;llQnt;!ed,i5RT;e,le0nIonRsQve;!sippi4V0;!arGs;ad5N0present3YI;ercep6QDla3PLrQ;iKonQ;ou2J9;!gynQ;i0TJy;am5om2;n32EtQ;ch59N;aSeQ;adQd;!i695s;b31Zid;eFmeK;!dSnQ;form1KPterQ;pret6NR;enQ;ti06;!aQeaMi6FFka,ma6H9ra;!ndl6S9p0;ivi5R4uL7;iQortu6I8;reFt0;!a681iAly,y;eSiQ;agnosQr33A;ed,is;ed0mean6AV;!aZellanYhWlasUoQrea6STue0;mmunSnQ;ceQdu6RGstrueF;iv5p6PI;ica6PH;siQ;fi5;a,ieQ;f,voD;eoDy;lc0J6rriQ;a5ZMed;goShavQ;eFiQ;ng,or;ttO;!dven4KLk11ZlSppQto;li2YKrQ;ehen2DKopri2CD;ign5SHlo5EA;aSeRiDHja6EZko,o,rQth,za;en,or8;!d,il3k,s;!cQge,i,m6CUn6M8;le0u28C;a0Mba60Gc0Kd0He0Dg0Ch,i03k02nZoXsVtUuQx,y;et,sStQ;eQia6RU;!ly,mOs;!cu3es;!e62Ii1on,s,y,z;!k,tQ;er,r4IT;!an,l6LJrQs,ta5KD;!itGs,u;a,eRiQow;e,f5JT;ap6KUl64Zso6LF;!s,us;!aturXbWmTng,on0sQum,v4;cu3e4LAki6CYtQ;erQrG;!i432s5NY;alRiQum0;se,z4H6;!is6OPly;ar,us;e0iz5Q4;!lCo;!c61Bd,f5ERrSsQy;!tQwe5CM;roB;!al0s,va;!eRf5IXi1le7sQy;!et;d5M9r;eQi1;!d,me6FI;!j,ko,mi,r651s,to;a,e0iQmo,osa0sy;!cQ;!k6QBry,s;a0Dbu5OMch,d0Be0Af09gr64Zh5EUi03j4k01lSn2oQs,t6JCve18Wwauk5YV;!rd,sQ;!ev6L8;!aXeUiQm4s51Vwa6J0y;!ceKe,gSkOm005nRon565sQ;eco5UI;er,g5PT;an,r6OL;!d,nQr0t;ia,niQ;a5JQum0;!ge,n,rF;!ed,ha,i1m4sQy;!ha5T1;!ba6J0eu,tQ;aQia0;nSrQte0;iQy;ly,s677zeF;cy,t6NQ;!oM;!a6JSna,r,s3O6y;!eQly,r5;r,st,w;!dy,gr6MPnQ;!e6N3o;aRe5VBhailQi6GYk6Oo;!o69J;!do,el,ge,mi,sa,y6MU;gy,htSn6o,raRs,uelQ;!i5UF;i6FGnt0t5ZX;!iH8n,y;fQuB;ed,lP;n,p;a04d01f5I3g00i,lYmor3C2n6BKo5YFp1Y6rU4sVtUwQye6AR;ay,eRiQ;fe,nt2vA;ek,stQ;!e5NI;e2NMo5C8;eRhipm6B7om2tQu098;!re63S;as6c6MS;a5TEiQ;fe,ne;aMe3MN;ay,iAlQ;eQi1;!m6AZt6we6B6;fterno6ir,s;a6Q4e,h04k03roQs;!b00cYeWfiVgr63InUorgan5XMpSsQts,wa6GU;copQecon5XMo5ZHyste6HN;e0ic5RP;ho6ERrocQ;ess67J;!es6LMs;c6MPlm;cE1lectrQ;on6IE;h6AIoQ;de,mpu1MYsm687;e0iQ;al,o3LX;!e66Ci,s,y;!aUeRiQ;!g4ko,o,yo;al,lQ;!aQe,in,le;!n0PA;!el685l;mi,o,ta;atHmm;a3Ic3Ed2Xe2Rg2Lh2Ki2Jko1l21m1Sn1Dow5IEphistoph09Gr0Qs0HtUwTxicSy6KUzzQ;aQo;niB;an0o;s,two;a03calf6ONe00hWiVo,rSs,tRzQ;!g2;e,le;e0ic0oQ;!no6ENpoliQse5QB;s,t4;cu24WnIs;!aSin4WOoQusel6OXyl;dQs;!i2LBolog5KSs;doBmpheta2RYn10;!d,orQr8;!iQol5YJs;c,te0;!boliXda6I4lUmorphTphRsQtr6;!tas3VL;orQys1J5;!ic6KNs;ic,os48Y;!lRs,workQ;!e673i1;ic637urg66L;c,sm;a,cal6FUdamAe56Qh6MOmerXopotam6KDq0V3sQtH;!aVeUiQn2rs,y;aSeRnQ;!a,eo,g;r,u66W;h,n6IA;d,ng6JWr,s;gCl6AQ;!iz6N7;c03de,e02g6HFiYk9FlXmaWrSt6G8vRyQ;em,l,t;!yn;iQy;ck,er,l49JmQn,tt;aQeK;ck,n;id0n;e,in,ot4RMyn;di4nStQ;!ed,le7oQs;cra3Q5r4XR;g67Ho;!di6CTly,ng67Gst;!anXeWhSiRuQy;r4Pt5VY;!a,e45Nf5PYle69E;!anQ;dis16RtQ;!aQs;bi6J3;dAn5YHr;ti3;a01dYeXgWiVnoni6HHoUsStQu0ziA;!al6JWhQi2C5or8;e,ol;!a,ch,truaQwe67X;l,ti6MT;n,pau6JWr6NG;al,ng2EK;!e3;laDnd2RD;!eQi1o4VY;d,lQs,z;!sso5J9;!cRgeQh54A;!r6MB;e,h548i62S;bXeWmo,oQph6G0sah1GH;!ir0rQs;aSiQy;alQes,seFz6JW;!i4G1s;bQnd6ET;il6IWle;!n1GG;er38Mran4EF;a02b01chi5YMdZee,iXlVm4oSro6JDtRviQ;l3n;!do58Wed,i1on,s;dQn0;iQra47Jy;c,es,oD;!ie,oQy;!n,w6JB;nQs5CB;a,da;!ed,i1rQ;i6B1um;a,o3ZJ;nRtQ;onP;cholRge,iQo68L;e,n;i699y;er,ji68Am54Vn6LYr,st2;di,me68Er612ta;aRg6LGhQu5GQ;a687na;!bSher5IVlRn,p4A1ra,tQwaV7zoM;o6I4r6;i0SJoman0MY;it0uc4TZy4GR;ch66Ah4kUnSp,rRse,tQ;!in585s,up,y69P;!a,k6A6;aQie,u,y;!ks6E6;!er,ly,s;a04dl02e01f4ROiSlRs,uQved4Q0;l6IAsa;ab,ey,iB;aXcUevJna,oTtQum0;atRerrQ;ane4;e,i6G2;!cr68W;!aRiQs;!n6JSs;id,lEre,t5ZI;!l,n,t6HDwi667;a,llPv5TF;eQi1;!d,r,so6BA;lQv5JP;!i6JJli6JNs;ca,hQ;!aQ;!niQ;c6EUs5YTzeF;ch5Z3dZgYh5TJl2W7nVrs,sStQ;!ba59Lhe66Ki2lQs,w66Ky;e7o17Xug;lRurQ;a606e6L1i1;es,y;!d4WXe5DUiQne7s,t36Ww27Y;e,ngQ;!f5NEle7s;er,re;!e,owQs;!laQs;n5SWrk;a0Yb0Xc0Ld0Ie0Hf0Fg07h06int05k00lYmWnTpheSquRr0JPtQvei6LD;avi68Ze2;a69BeO;e,rs6;aReQul6GF;al,il;b,ir,l6GSma6IF;aQi9Burp6JY;h6nDs1I8;aQe9BinMFntyHuh4;ne,rOughlP;ay,eRinQn660;l66An3NQ;eRnQ;na,z6JS;!n,v2;o68KyH;a3en6EPu6KW;arrWee,iUoTrRuQ;iHrk;aQeg5W8;th,w;ve5HRw4;ll,nQ;n6D9ty;e5EDy;aQly;ddOr5HK;nr140wO;eRoQu68P;na65Krma6CBugJwe6C0;eHrmo5E7;aXlUoQrea61Pull5I3;mb,nSrQy;d,mQ;a68Ji68J;augh65Mne6BU;aRe8Ho5N5uQ;re,sk65K;in,ne,rO;be,in,llSnRrtQ;hy5G7n65H;d04Xn;!i44Fum;aPeJri6BC;lli44Dndr589rth5C2v5HX;a8Vb8Uc83d7Re7Ofi7Ng74h6Wi6Kj6Ek6Al5Hm57n3Vo3Up3Tqu6CNr1Ps15t0Bu05v03xZySzQ;da,eQ;!l,r,s;a67MbeVd63Ze41LfUheTkSnaMoRpo3s,uQwea605;!mi;!nn90r68P;el,o;m,w;a6J9ie67Ol52Z;!l3r6DNs;ed,iQwe6BA;!e,mQne,s;!a5C5e,iQs,u5P1;li4z48S;eQis;n0ri673;dUi,l6FYrRsQve;er,ole63F;a,eOiQo,y;c0OEtQz5RF;an6F5iD;!e,ie,lP;a0Ich0Ge0Ah07i05lo67Mo04r01sXtSuQzo;rQsch6HZ;a6FTe5ZTi5S5;!eShRiQre6BKy;!a0e,ng;ew0i6A6;!i,o,rQs;!ed,ho5GAs;!on,uQ;!ba6GGdaRi,ko,mQo,ya651;o5MUu6GF;!i6GE;iQon0;ar61TcAmonQx;iJy;!bo;!as,ld6A6nQs6F7;ee,g;!ai,eRiQs,ur5XD;as,eu,ld6A3s6AO;matic3UTr0s6w0;!d,o,rQs,y;!iRnQ;al,i6E0;alQel;!iQly,s;s5YUty,zC;!boQe6GOi1m1SGsti66Vup;ok,x;!d5U3ta;a08c07era5ULh06k8lPo03querad5ZSsWtQu65A;!eQhe63Hod6s,urb6HM;c5P4rQ;!cSed,fRi1ly,mQp45Ms6AAwo5K1y;an,i52T;or6H4ulE;aMh0LN;!aUeSiRoQ;n,ud;f,mo,ng,veE;!d,r6DZs,uQy;r,se;!cQg59K;huset6CHre9;ch41VnQ;!iQry,s;c,te;!a,e5S6;a6FDot0ulin64X;!da,hi5VYi,k0R7la,mi,o,ru,to,yu62B;a1Pb1Oc1Gd1Fe1Eg15i0Sj0Rk0Kl0Hma0GnXJo0Ep3qu0Cr09s04tVuUvSw4x0EZyQzip4;!aQla69Us;m,nn6HA;!a,elQin;!loDo67Fs;!s6BFti,ya63R;!a,eWh692iSok,s,yQ;!rQ;!d5T3ed,s;!a36UnQ;!a,eRga3iQo,s69J;!q613s;!l5UFz;!lQn0;!l61X;!a6DOdOeillThQt517upiJ;!aQes,la69Fma52Oy;!lQ;!ed,l0s;ai6DQe0;!akeRed,iQo1DVyN;age69We6FGo5B7;ch,sh;eQis6GP;!e,sa,t6B1z;nQon6C6;ey,i;du523la68J;a,bo5V5eRin0oQy;!n,w6GJ;n68Ey;!do52ZeSh5ULiRm4oQs3B4u59Ry;!s,v;e,ng0;!dEr0tQ;!ab6C3eRi1pQs;la6C5;d,er0r0;a,or6FU;!a00b5LKeZgo64TjYk61ElXmo,nUoSpo56CsRtQus,z4PC;!a59Di66C;!a,ka,ol,sa;!nQ;!et4B5;!aReQo;!o,r0s;!de,ra,teF;la,yn;a,ua62Y;!l5V8tt67V;!c68Ih,m,nQ;!a0n67To;!aVeUheri69RiRo6FVrQueri6A9;a67Jet6DC;e,nQt;!alQed,s;!i498ly;!ne,ry;!rQte,ux;et,iQ;ne,ta0;!chJk,n,s;i,le,uk;!eVhSiRoQus,y;!ni,s;!a56Oe,n;!a681eRiQ;ng,o62J;d,rs,s6FGt5S5;!au,lQ;!a,in5YKl5CIo;el6C4le9u4UW;!b63Cdo62Ais,tRuQ;c0V9d618;!hQ;i,on0;le0o,p6ENs;i6DMri;a0Yc0Vd0Oe0Nfred605g0Jh0Gi09j08ki67Pl07ma674n03o00p4Z1sXtSuQx,y5UB;!al6CJel5UAfactur68Tre,sQ;!cript0;a,elSiRle,on,rQua;a0id;coHs;!pQ;ie6EC;!a,eRf576i0U6laug15ToQ;n,or,ur;ll,rvaK;!eRh5ZRj,lQn,r,s;as,is,o;l,uv60M;!a,eRhe5SGiQu,y;!ng,on,t4RX;d,qu4SLrQ;!ed,is66Zs;ey,i61Qy;e62Vu;!aVcTfRlQnd2on,pul1ZWsh,to5TE;a,la,ow;estQo60C;!a6BJed,i1ly,o,s;!urQ;e9i6CW;!c68A;aRe5S3oQunt4WQ;le,od;nd4ZDtt4;!aRe5VIl6BMoQro65Sy;!es,ld,steO;!lQne6B7;!am;!t4IBuv4QC;aTeSi4TNoRraQy;go6C5ke;!lP;l5T9rl604;!l5YTmDrRtQ;e9i1or33R;!in;hQi4WAu49M;a,e3YZuQ;!r5QX;!bu,gQli,mi,na,ss65It549us,v;eQi1;!ab69Ld,me6E3r3FZs;aXb5YZe,iWmRoQ;!ru;aToQy;gQth0;raQ;m,p6D8;!l0;!e,ta,ya;!cQn,s;h4i67G;a0Dco0Cd0Be0Af07h06i02k01lWnVoUpTtRu,vQwaH;i60Ho;!a,eQi,s;d,se;!rac5H6;!ne5UQry,u;ouri23Outri6AJ;!a61EeTiSoQs,y;rQw,y;ca,y;!ka;!ab68Zt;a,o5WN;!a,bu,cSgnRk5SCnQ;!a,i;!an3DRed;e,io63B;ot6B2;eas6CEoQuncti224;rmQy;at5EAed;!fi64Gk,na,s,v4W3;en,ivAona5TM;lm,nt67U;!cTdGga,i69TrSwi,yQ;!aQs5KM;!l5QY;ia,k5YT;ca,h5W3;eRiQo0KYs5QF;!n3LAs;!ov68Rp0ZNr0sQth,up;!hi5MS;a,eSi551nu,oQ;rQy;!ca,do5PEed,i5M2ly,s;stQuH;iQy;c5EVes;a,co5Q5d00gr60Pik,ko,lYm680nSr6CHsRtQze;e,la64Zre;!ie,on,y;!e,fra3SQlUsStQwa4R8;ainQen3QN;!ab3e5N3i1s;!a6BDtQ;ay0reamN;and4L4iBy;!bQeLi5AJm4ro5O7s,to;ag,ox655;!a5Z4en0s;aTdi,eSi6AEjo1l2mRoQ;ga5UWne5TF;o5FNu5YK;nd6A1r,sh;!bhara65Wd4GHlSraQt5YL;jQs2PJ;!a6CO;!aksh56So;a07da06e05g04i01ma,nRoGHp6BHs,uQ;iHs;aYeViRol688uQ;m,s2OK;fQtu677;iQyN;cQe5Q4q5VT;a68Ven68Fo;si5W9tQ;!iQo,s;c0sm,z5;!nim3CAte0;!cRstQ;er,ra46K;!alEi5BS;i2Z6ot0y;!e,ll4n65C;!len63C;!li,ta5XZzi60V;a,o470;b0H4da,lsRsQve;!t5PX;tr5NA;a00c4BRdYeVge,hUiTly,m5WSne7oSrQs4AZur51Kw5C6;as,e,iQ;d,gJ;!ff,ka,n5Y5;!ba,g4s6;av5W4ou682u5LZ;!a,i693lRmoisQro;el3;aiBeiBiByn;ale5XZeQi52Wox,ux,y;n0GBr;gasc5VVle5XXm6AZn;a0Cbe60Dchia5FCd0Ae09farlaBg06h02i00kXlVmiUneTon,phe3XHroRs,uQy;!l5VT;!ecQm224s;on1YG;il,ll;ll4;aiBeQ;an,od;!ay,eRiQlP;e,nto5Z3;nz6A8r5FZy;ntQs650;o1RGyH;!a4G0e45LiQo,u;!avelli4C4ko,nQs5ND;!at5BTeQi5FL;!d,rGs;rQyv2;eg5MMuQ;b2d2;!d46Qy;oQu6AZ;na5YWuga62K;!bHdam5AAo,rRuQ;!l5V0;e5X7oQth52Y;ni,o66J;el,u674;m,rQ;!i,tO;aB6di5GCe85fy5Y4ha507i4Rju68Jl4Pm4Mn4Go1Pr6s1Ou05vpd,yQ;c03d02e01g66GinIl61ZmZnXoUrTsStRuQ;ba,da;a,t6;a4IOol;a,e,ic4UP;nQs5QI;!nQs;ai66T;ch66XdQe5J0l5VVn69Vx;a,on,s5VU;an,e,phQ;!at647o5WC;k5X5ll;eH7ia;e5U9os,ra;a16b14c0Td0Qe5ESf0Pg0Ni0Lk0Jl0Gm07n02p00rYsUtRxQ;an,emb3T2or,ur1P3;e,hQon,z;er4B5orQ;!co5IJ;c4JUh2ZRtQ;!er,f51BiRrQs,y;e,oD;g,ng;cQe9iRUk8;h682io;e,iQo,us;n,ta;aTchRdQe,g1YHkhe5UXn;!grOy;!b3TUeQi1ro5L8ti5ZD;on538s;!cy,r,t62F;bVen,iRpQum5NY;!ed,i1s,ur,y;eHnQ;aRoQ;l,us;!n68ErG;aRerQ;!i1ja5X5yaM;go,r;a,lQu;!aQed,i1s;!bG;a0eQ;!wa4H7y;gi,sQz5NX;!a,e,in5PB;e66ZgQo60P;a627i1;fy,twaf5WX;di43NicrRl5WXmi65EoQw26H;!vic5ZF;ous,us;a0c5KEeYho,iUkSrQy;a5IDeQ;c64Vt64Vz64V;!ed,iQle7n5WRs,y;e51Hly;!aSdReQf2ll60Bn62Po5S5us;!n5YV;!a,i64A;!n5NI;!nt,rQ;ne,o;bQe,rica20W;e5R8o5X4;nQu;!da,g,n686;ha4la60O;a2Eb29c1Yd1Ueb,ft1Tg1Kh1Ji1Gja5X0ki,l1Cm19n0Uo0Kp0Hr09s08t05u00vWwRxl5U4yalQ;!i66Qly,tG;do4UKeRi1lQry,s;a5BTi10Ty;!ll,nRrQst;!ca64Wed,i1s,y;!s4Q1;ab3eQin3Q8;!ab3bir5G5c5HZd,j56GlRma4CRr3P6sQtt,y5KG;!i5WR;a677e7i18Vl,o55Ly;dTel64KiRl5VTnQp,rdAs63Ot0vH;ds,g527;e,sQ;!a,e,ia5UOv4W3;!e50Qly,m4NGon,spe409;a,hRi667s5MTtQus;a,e35Cie,o;!br4YB;e5T6inIs60Jt;aWca,dVeSiRn5ZGrQy;aiBiAy;!e,ng;!da5UFen,lRnQt61C;!a,z5MM;ai,ei;!e,s53Xy;!l,zep5LH;eRp5sQ;id5;!s,z;f67Qg66TkVmUnTpSsQt4JS;!eQi1;!d,ly,n3Tr,s676;!e5HXho61Bi1s,y;!ey,g,iAy;!ed,i5KQs;!ali4SLeSiRo5BRsQup,y;!ma5OK;e,nIt;d,e,r;do03e00gQi,n425s0T9;!b5V8eYf0WVhXiUmiHo,sRtQw454;e4FBi5X1;!hoRtQ;an4H1oc4BQre5V3;re,t;nRsh,tudQ;e,inJ;g645us;a5Z9o46Z;d,r,st,vi62M;!lQr0so5WS;iQy;e4ZNne7;!n4FG;aRbardQpoc;!i,o;!n,x;a5Q7i2XClQo;!iRyQ;!p5S9;!p509;c,nQre,s,t4J0;!cQs;lo5VQ;an,engrP;aVbo4WYgSiQj646o0s;cQn,st601te5PO;!alEi4;eQin4Z0;d,rQ;!hea5EDs;n,rQ;!ithmQ;ic,s;!i2s,y;eRgQi,z;e62Li549;!n,r,stQ;ar,oB;aWh,kSoRuQ;s32Xti6;!mo364s;!b3QDdo4SAeShRi1j4BVo4YAsQup,wo5W3;!l5RRmi5V6t5L8;a5N8e5;!d,r0t;!lRtQ;e9i3A7or;!e0iQly,s;tGz5YH;bRe0oQs4UN;!s,to5CU;ed,iRyQ;!i5AJ;e645ng;d4D0f1F3m,n4S9thQvA;!e9i1so5VI;clu4FJdUfo4DRspect5HJteQ;l31GrQ;es4Z9nQ;aQet;ti4KG;epend627i4lstlnct61Ku;a52ZmRpQ;e5F7o02Qres2EM;ediate61Hig3FV;aQewell47Po5Z1;ma0no;a30b2Nc2Gd2De28f21g1Rk1Ml1Hm1Bn0Ton0Rp0Oqu0Jr0Is0Et02vSzQ;aQz407;!rd0ve5YV;ab3eUiQor5S6v405y;a,d4VZnQ;!gQ;!sQ;!tKV;!c5IYd,lSn,rRsQth;!ey,to5TP;!po4HYs,y;iQy;e4XRho3N7ne7;a481chf4WXeXhUigSle,mDre0tQurg5E1;!er8leQon;!fo50Sjo513r,st,t6;aQioD;nt0t5S3;e,i5P4ogrRuQ;an5HI;aph0;!rQ;!aQs;cy,lEry,tQ;e,i,uH;a,bSe5DIi,le,pNs3JUtQzt;!eQi52Nle7on,p1Rs;d,n3OHr;e5TPon;a0e;eSidRorQ;!ed,i63Ks;!at59Ri603s;fQur;ac619i5y;id,oRpQs3YMt6;ed,m4y;!pro4M4suc616;!eQh49Eiz5s;l,ss5WX;a,c06d03e00gXiWkVnToSsRt5WFuQz;s,x;!e3OU;!le5OFty545;!eQ;a,t;!a5B4e5EJi1s;meKng0;!am,er2QCo,uQ;a4WUiQ;ni,st1Y7;!aRba1DCd,m5P5n0r0s,uQ;!p0;ge,l,rE;!a,berg649eRl5PKo,sQus,y;!ay,ey,tr5FI;!n,r5XH;!hpPoln2JS;a,bUeTitSoRpQ;!e5PWi1s;!gAs,u2U6;!a60Ded,i1le7s;!h4RBl5P1ri5S8s1GHy;!e5E2ic,o,s;aTe,iRlQo,y;!e,i22Sy;!aQes,th;!n578;!c0h;ab3eQi1;!ab3d,lRnQs,wi601y5FO;!e0S7i1s;iQy;e4W2ho5TC;aYge4XGhtRniQ;n,te;!bVeUfo4Z3hSi1ly,m4nRsQwe5ONye5NU;!ab2;e7i1;eaQou4BI;d5rt5;d,n5ZVr0st;ox,ulb;me62ZtuH;eRtQ;!eLi1o63Bs;!bTg4CSlRr0sQti3J0;!av5OKp4ty5WS;e7iQo1;ke,ne0;lo5SVo4CZ;bScht00d,f,ge,n0r,s3DVuQ;!tQ;!ena62P;eQli1;!r5WE;a,dRia,oQs;!c58B;e5UKy;eThRk1AHoQ;ri61N;en,tQ;ens4KB;!nQ;cCsQt4CH;e2G1i1or,uH;a5Z9by,eWi5ISrQs,ya5OG;aSeQ;!ttQ;i60Go;!rQ;iQy;an0es;lUrQ;aSia,tQ;a523iQy;es,ne;!ce,l39Zt5PB;!oD;b4XPisRm,nQo,r0s6;!a,e,g,ne;e,i1on0;a25b22c1Wd1Ve1Uf1Rg1Dhm5ILi1AjeuBl18m13n0Uo0Np0Lr0Ks0Dt07u04vYwWxRyQ;dOla,t6;a,iQma622us,x,y;!cQe,n55Ks;al,oQ;gQn0;raph2;d,iQt6;c5MEns4QOs;aKeSiQon,yN;!aHFe603n3F8s,tQ;at0BGicDra,t,y;!e,lRrQ;!agCi1s;!ed,i1l5s;kRng,tQ;naK;a029em5XK;do4NOhaUiTme,o,s,tQy5P6;!erRiQu60Iy;e,nI;!b3LOed,he5MPi1m4s;c5XFt5XF;!l4S2rg3X1;bVi5ZJlUsRtQ;!er,ra5SX;!eRi1oQ;n0r0;e0n8r;ey,ie;i513o0;n2oy;er0ic,rQ;echa0HUo4FB;nSpQs,taM;a5OQoQ;ld5RH;!aSe,iQor5FS;!dQe;!as;!rd5RD;a,d45Ae,gWiUka,nSoRs5THtQz;!il0;!r5SDx;a5HYie5YPoQy;n,x;!en177nQ;!gr5LZi5YS;!thQ;!en8i2s,wi5X8y;aTel,mSoQur0;iBnQ;!a5S6d,is,s;a,e,i4YIy;n,y;aQe,ia;!nd;a,ce3L3f,gh4Z7la,pz1XXsQth;!uQ;reE;aZba,eYgXiRle7o0rQs,u5Q4wo60G;a5SIo5BY;b5VSonTslatStQ;!imQ;a5RPizC;e9i1J7or0u5LO;!nQs;ai5LM;ed,i4Y3y;nd265rdemaP;cGlRtQ;e,i6o;!e5WLiQly;st5U2tGz5ED;ebvHfing2S1tQ;!is5SOov5VNs,wQy;aMi1;ch5SHds,k0la,na,r4AFs,t,w5K9;a,be593ge5L3uc;hSlRtQ;er5LSor,ur5T4;a5ZKerc;!eQ;!rQ;!oDy;anRe4DIlaQo3ZWr6;nc;e5W6on;ch09d06f05gue04h,k03l,n01pYrWsUtherTvQ;eQinI;!nQr,s;!ed,i1w3XB;!he5KQs,y;!eQh5S1i1t;!ba5NYd,ho5NMs;!nQy;!eLinIs,t;!ed,frogRinQs,t;g,l5JU;!g5;!dQe4GLi4X7n5YWs,t;er,ro;!a5SCed,i1s,y;!rs,s;!ed,l5CUs,y;!eQi1s;d,rQth;!le7s559;!es,i1;b3Ec39d33e32f2Zg2Uh2Ti2Rj5V5k2Nl2Mm2Bn1So1Rp1Nr1Bs14t0Tu0Bv04wYxVyUzQ;arSiRlo,yQ;!b38S;er,ly,ne7;!e,o,us;aw5J8er8inIla,m5K0ne,o2NVpe3L1s,t6up;a5PWer,i5UEmQ;an,iQ;!naray4;break4RXd,fUle058ma3QLnSrRsQt6yer1IT;!on,u5NE;en5XPie;!da3mQs;ow5UC;oMulE;aVeTiRoQ;isi2n;n5UJshQ;!ed,i1ly;nd2rQ;!ne,y;!ge,l,to5SM;d04er,gZnUrRs3KXtrQ;ec;a,eRiQyn;!e,ta;!a3SXl0n5DTt5SA;chTdQ;erRrQ;e7iAom489y;!e2HYi1;!e5C5i1p5JE;esOhQ;!a5D1ed,inQlPs,t087;!gQ;!ly,sQ;to5MJ;!aReQi1s;!d,r4N5;!b3n5I4;a,ch4E0eYhXiUn4O8ouTrSs,tQv5AI;e5D8iQ;ce2T0m2n;e5POi5MWo4XA;c5UWr;f,m2nQtu5SS;!aQo0s,um;!s,te;am,e5IWr5J5;!come5GAly,nQr5R4st,x;cy,e7t;aVciv47JeTh49Lk3CMsQt488z5DE;!aMeRiQo;e,t2;!n,s,t2;!rQ;!j5LBs;gn5OYl3;a00cZd4FCe5DPgWiVkToc5UIrSsRue,va5X1ynQ;g1OMx;!an,en,on,s6;ab54Yy;!in,sQ;!p4PL;at,s4MY;eQo;!ly,ne7r,sQ;s5WSt;e5FJh;!b54Qm5WA;dSel0iRlanQp5TRs31Kt4QKu5QK;d,te;dDn;!og;s,ti4;a,c05dWe51QgSi3D2k3C1nRsQte3WTyaM;i1ky;i48Dy;!d6e5UQfoMh5ALlSst6t6uQ;a53SiQ;d,sh5V3;ey,o5PPy;!au,eLfXhold0AWiWlUmSoRry,sQ;!cap5Q0li5RQ;!n,wn5SD;aQi5LQ;n,rk0;a5E7e7iBoQ;ck5rd0;ng0s;a5ODi4KS;asReQia;!l4S8r0s,t,y;hiHt2;aZbVeUiSm,oKpQ;!i1l5I0o6po5UFsQt6;!ha5NX;a,naQ;r,tC;!ly,nt1A0r,st;!ast5T5da,eSi4NQoQs;!rgQ;hi4E3;rt,th;!r5U0s,ze;a,i,ly,o;eRh50Go5PKshmQ;an,i;!la5O6r0sQ;!hoHi5NK;d5AQla,nQrFss202t5CW;!e5CVie;ey,i543oH;erTgSi5IGo17YrRs,uQ;ard5RUer5PCna;an5OY;a5JGed,i1;!t5BY;ay4O4fRitQle4O2;e,te;!er5R8;rtAtit5RN;a,dUen,iSle,on5I7s,yQ;!bQli4GQsh5GN;iMug0;es,nQ;g,o;!er0ie;eThl4i,kSon5PIqu2roRs,tQy;a5PFic,o5RZ;ix,s5RY;!adais54Ce4NKi1lu3G0s;!d,r23Ds,y;el0V9ia,oQrad574s,yrinth5MS;rQur0WE;!a1Y8eLiQs;ng,o5L2;a69e4Wh4Pi2Wjel2Vko2Ul2Jm2In1To16r0Ku01wWyQ;eo1lUne,oSrRuQ;l,nIs2LZ;a,ie;ko,sQto;hi59Au4G7;a,e,ie;aRoQun;k,nI;i,k,nQ;!g,zQ;aa;a07b06d05e5Cjo,ku,la,m03n01pf2rTsStRvi5SHwait5FHya,zQ;ey,mi5DX;n2ty;ana2Uh,um;a5O9dVe,iUoRsk,tQu;!a,z;!da,i,kRsaQ;ki,wa;a5GIi;ha5S8ta;isQs;h,t4;al,d4gQi,o,t560;!fu;aQba5OCi4ECqu5IMud;!mo4YHr;o0zu;a,l4KBo,ri5IX;la,nI;a05e04iYoWri5IDuTyQ;c5T8ptonQstJtO;!iQ;an,te;eg2g4C6ll,mi4QWpRsQ;e,ty;a,p;g2ll,mag1RWnQ;e5S0k,o3C3;eUll,ng3pa,sQ;!hSpGs5EOtQ;a,e4E8iQoff4BZy;!an,n4XO;!na5FY;g4BWm3ZI;bs,e,ll,mlP;a1bs,ft,g,kUl4FYmTnSuRvQy,zy;!i4QJ;s53Xt0;g,tz,z;er,pD;at5FFen,ow;a0IVb0Ach5ECd08en1R7ga,h07i06j04ko47Bl03m00nZoYpec41LrWsTtSurtn5FDvRwQz5DF;als5EAlo6t5HM;aEBe;a478o;hRo2K5tQu4ER;a0er,ya;!er,iO;a5FIby,ea5HJm4n,ra,s579u5G4yQ;n,u;k4YAl,n4Q5s,thrappa56J;a,do,g,no,o,r5EPstantP;aRb5HKman52MoQsom468;do,ri;l,tSO;ch572ia,ka5MUya;ak,iQ;!ma,ro;c5LGzu4NQ;a3BEei,l4B6;aQi56X;!i,k;aQe,ol;!ySA;a0Be08i03oSuQy5CP;ckleQd86t;!d,he4VMs;bZckXll,p5SNrr,tWwQx0RF;!ab3e44Ch5GWin3AXleSn0s,thRwhQy5GM;at,eHo;at,e;dgQs;ab3eQ;!a57Ssto40V;!s,t3DE;!do4EXeLinIoQs;ff0ut0;!by,he5DZs;ckRev4XNfe9ghtQt0TKvA;!ed,ho5IMl49Fs;!erQknac40Is;boQs;ck2;adNeRlQw;l,t;!cVWd,l8s;ckRpQve0;p,sa5GZ;!er5s;a59Jet1S9;aZeViRondi4DItt,uQ;ge,m,tz,x;ck0mt,nQ;e,gRkQ;!erhoffO;er,on0;en5JEiRptoQ;!m1N8;n,sQ;s,t;n,ra,us,w,x6;mpa5AHt;d,l;a1Hb1Fck1Cd18e16ga552ji3S9k14l0Xm0Rn0Bo0Ap08r03sYtSwi0yoQz0SF;kQmi,s5K6;a5DTo;aUchenSe0h,sRtQ;!en0iAr0WMy;!ch;!eQs,waH;r,t5LT;!mu5PEno;araThSm5FMsQt;!e4BPinQy;!g49N;!a5DNen,i5LLoHu;gi;a5DLby,iTkSov,ra,sQyu;ch,tQ;en,ie,y;!la5JPp104s,wo5HH;!ko4JQl4KAn;li1pQ;er0ur;sk0wa;a5NYc04d00eZfo4DTgWkVn5D1oUsRtQ;a55Le;eRhQki,m5CH;a4H1ip;l5NOy;!shi5KR;!o,s,y;!d41Kly,maRo,p44PsQ;!br4J9h5C8l5CTt6;k2n;sio2NMt5JZ;!aSeQl0WSne7r5s;rQst;!gartO;!ic5J7;a5FDh;a,bSc5J5i4ATmRoQu5OK;!no0;el,ie,y;aRerQle;!l47L;!ll;ey,goHimanja550lUm2n0oQp0ZDr4OZt48Q;!by3LEgr5OBmSs,wQ;aQog;tt0;et3E0;!eLiQj4OUs;an,n4CP;a,e,i,o,uQ;!c5IR;f2rQv;a5CHkegaaM;dSm4nQo,s;apQey0;!p32Ns;!er,i2P5o,y;!a7bQeLinIo5QMs;aQo4CI;ck0ll;bQo,w3O3;le,u4MX;ii1ra;aRl0A0m2omei484rush0FGuQ;n,ra5CRs5ID;ki0lRnQo,rto5AC;!da5MIg,na;eRiQ;d,fa,l;d,e5HN;a0Yb0Xck,e0Rg0Qh09Ti0Nl0Jm0In07p06r00sZtWu1vVyQ;b451cTe5OBho3i1le7nSp5B8sQwo5DN;!er,tQ;oBro4S3;es,o3KJ;aMhaP;in,l5ADorki4;a1T1chRtQ;e449le0;!up;h466sl2t2;a5M3b,chiT9i4YEmi1SKnUoTrRsQ;ey,h3VEtP;!iQy;!g4;seBu4XF;!el0s;l2n2p1QDt;aZdXic5HPji,l5B5nVoUsRtQy3TSzYZ;!a,on,s,uck1Z6;!hiRiQ;!n4T1;n,ro;!bi;a05CeQi5DDy;dy0l0r,th;al4I2o,rQ;a,i5DS;i,n;al,p475;k4UKlRp,sQt6vP;ey,o5B4;!eQi5ORogg,y;n,r5IPy;ic5H9ko,ra,sRtQ;a,el,h;ha,t2u4A5;g2s;fe5MUg4lTnSpQs;!er0inIsQ;!a4R2;!an,e5MRly;!eQi1;d,r,y;ab0;nSrnRtQ;i1on,s;ey,s;!e,u;a1Qb1Nc5AAd1Me1Lf5BOg1Jh1Hi1Ej1Dk1Bl14m0Xn0Oo0Np0Mr0Es09t02u01v00waYyVzQ;aSe,oRuQ;!hi1OGkY2m502o,ya;n,o;khQma,n;!st4;aRe,lQo48C;a,ee,ie;!k4HO;da,ha5M0i,mu5M0sQ;a58Yhi5AK;an4YRe4WJi5HUya;ai,fm4l,r;aVeUhSi4RYja,lPmTni7o,r69suQy532z;!raQ;!gi;!ar3DFe1CPie,leOmQr3QFy;andu;!ri5AQy;!gi4WBna,r5AO;ey,hTiSpRs,uQwe5FY;ga,mi;ar4P5er;!a,m;!iW6m5NR;aWdashi4eUiTlSm4W4nQo4GQp4P2st3NAth4A0z4DV;!aQ;!k,ta5AX;!a,o5O4ss6y;!m,n4RIsh5A1;em,l,nQv;!i5AD;!c5FYi,maz4C5n,o48Wt5NE;a,il,l4o4ZJpa,ut;lPr08A;aXb468dUeTgRha,in,ji,na,o,p4G0sQt52Hye,za589;a3B6u48S;!arQ;oo0;!da,ko;aRiQ;!ns4CD;!h580;!e,i,ko,n;aUchat5AGeTiRla,pQ;!a5JSf;!ka4WOl529nQya;i,s4C7;da,n;!ku5KWl522n,tQ;a,h;aVd3PYeTiRl13Jm4pa59TyQ;an57T;!nQ;da,ka;!b,idQ;osco4N0;!b3SSha4V9s4BF;aQu;!rr4ISs5F7;a4FRi,ri;ju,la5AZs2tQ;lQo;in,yn;lQn,u59G;an,e7;aQe,o5CK;!mi,n,wa;de,w;am,di5ARe,ir;ad4GGbRir,o4YBuQ;ki,l;al5MR;ba,n;a48e33han5E7i2Mo16p3Y8uQyo4YX;a12b10d0TerODg0Rh0Qi0Oj0Nke0Ml0Gm0Cn03p1LVrZsUtTvRxtaposQzo;eFi5JB;eQie;!ni5G9;la5EMs4EOti1;si,tQ;!a,iQly,o,us;ce0fQn5M0;iQyN;a519ca5IYe5KN;aSe55KgOiQo533y;!es,sQ;dic2S1prud5IUts;!ss5G9;ctXeWgViUkRo,pQta;yo;!eRi3TUo,yQ;!aM;d,r,t0;!c5E8or0p2;!le0u;!au;i5K4u57E;a,bSo1pQ;!eLinIsQy;!ta530u5AJ;a,leFo;eUiQy;!aReQo,us;!n5BVt3PH;!nQ;!a,n5D8o;!p,s;!b35Vs;itKXu;cQlliaM;e4D8i1y;a,i,u;gQhe56Rni,s,ul561;erna4DMl5ES;aVd,e508gTiQo,s6y;!ciQth;aQo5B8;lEry;eQi1m21Y;!d,m21Xs4RI;h,i5IIs;al,ei,ilQ;a5KCee;nQr1PB;!a,iQ;!t55X;a13b12c0Zd0Ye0Xffr56Rg0Wh0Oi0Mjo,k0Kl0In0Do0BplPr06s00tZuSvRwl,x2yQzOO;ce,f4NDle7n2oDr4EAs3N9;an,e,i4K5;be526le0rQstN;!nQ;alReyQ;!ed,m4s;!iQs;ng,sQ;m,t1VI;a4Z2t5;eShRiQs,t45G;ah,e,p;!i4C2ua,y;!fRli4ORon,phQt5EQy;!iBs,us;!a,in5C7;an,dSgeQy;!nQ;!sO;anQi,y;!a,i4KFs;nIsQ;ep,t;aSesRg,i,nQo;o,y;!i1to46Jy;h,s,thQ;an,on;eBiQl28Ks6t8;e5JWn54T;eQin327;!d,r0s3V9;e,nQst;!eLi1s,t5H7;anUnQ;!aSn0LRsQy;!on0tQ;on5JP;th4;!nQs175;!a,esQ;!bu3Z4;g1UXi,s;l4XEs,y;i5JIy;as5DCel3M2hOkQul54D;!ey4D2o,sQ;!tr3JW;be52Ee,leQ8s;ch4X1k4X1nQo,qui4KQ;!a,ie,n4ND;a03be0ej5IVff50Mg01hZlXmWnSrRtterQv4DQya,zz;!bug,s,y;i,ka,o;dJgSkRnQx5ER;!ie,y;iAs;!ch575l4DKo;a,bo,en1NLi3MGm3EAs6;lQt5EM;!i4y;adQu;!is5DY;gQs35M;er,i1l1VDy;nQo;!c5BGgQ;!su;a0Rd0Pe0Mf0Hhov5JBju59Bky5B2l0Dm0Cn09o06p4J4r01sXtTwQzeb4O5;eQi577s;lQss;!er0ler4NXry,s;er,h4XBliner,sStQ;!iQy;es,ng,s23K;!on,tJ3;p2sRt39HuQ;!it0s;!a,e,iQop,up,y;!ca,e;emTic2TGkSmaRo58MrQs4GJusal400v5BTzy;i5BFy;in5IG;!ed,i1o5J1s,y;i5IVy;nIpardQ;iQy;se,zC;a,ga,kRVnQs1Q;!a,er,iQy;!e,f2n1GC;aiBima,ma;e554lQso4SA;!iRo,yQ;!be4IDfi56I;c3es;e,fQ;!erRrQs,y;ey,iA;iAsQy;!on4JP;pRr8t408vQz;a548es;!e50Vs;edi5IBiQ;!ki5IA;lous05InQ;!e4QWi2G4nQs;e4QVi2G3ot;an,b1Cc11d0Zeg2f0Xg0Ui0Rk0Ql0Pm0Hn09p07r02s00tPunZvUwTySzQ;ee5FNzQ;!ed,m4y;a,dOe,mAne,s,wal3MH;boBed,ohl,s;aReQi3ZVy;d,lPrt;!di,sQ;criQ;pt;di2DNt4ML;e,mQna,on,p5DGsi;in4LE;diBeTg6he52Yidi4HLl5HCod,rQs,v5AN;ah,eRiQod;d,ng;d,tt;au,d,k;anQp,s;!e5E3s;aWdi,eVgUhTiSkQZne,o0sRuQvi2;!a5BOs31E;en,sO;!ce,e,n58Ys,t2J5;vi;!l4BFo;!i4VKk,l3s,t3L2w51Py;!ki;aVbUeSiRmQs,u53V;!eLi3HOy;e1TLl4W0s6;sQy;!on,to43B;ala5B0or4OS;iQl;ca553s;ape53Wil,o4K5;ar5AJe4LUob,ub;d3L3lQm0XBn,p49Cs6;!bQe4RDh44Li1or,s;a44AiMre4UO;aRdi54YgQmoh4o,s,u4CD;e00Ki,u;!nna55X;ar,fQ;!a5EPe;eQz5CS;!d,n;eZint51IkUl3IYobSquQs,uz5E3;aMeQi5GC;liBs;!i,o,sQy;!en,on;!aTeShaRi483m4o,p4MGrabb43XsQy;!on0EZ;mm2;d,t0;l0ss592;!k,y;bQs;a5EAeQi1;d,rQ;!i1woc457;aGLbGIcG5dFOeFLfFIgFAhF9iF6ju5EDkF4lEOmCIn1Xo1Up1SqbJr0Zs0DtYvTwRy49HzQ;m5G2umPRz3B3;aQi584;ki,s,ta;aReQor4X5;rs6s;nQr;!a,hZXovQ;!a,i4Z6na;aZchYeVfc,ha4X8iTju5E4sStRunAwQ;as,i57W;le,o,y;e3YCu50Ky;neraQs;nt,rG;mRratQ;ed,i5DE;!izCs;!es,i1y;c57Zku5DElQ;iQy;aQc38M;!nQ;!a59Oo,s;a09bn,cari4BFh07i06ju5DPl03m02nt,oWraelUsStQu4A4;anb472hQv4;e,mD;a,n,o,uQ;an5AZe5BTi1;!iQ;!s,te0;b4KElSme1AKscRtoQ;n59Hpe0;elA;atQde;e9iQ;ng,on2OD;a1VZs;aQe0;!mQnd41R;!ab50Gic;d4TEs;a3GCiQma4K3t4ZO;d4ZWha5CQi,ka50Z;aQbel4Q8do5CPi5F7k,mu,o;c0k;a0Fe0Ef4i0Ck0Bma,o08rRvinQwP;!e,g;a05eSiQ;g4U5taQ;b5AAnt0t59X;conc01fut3TGgYlevXpVsStriev88vQ;erQoCB;eKsi4TS;isC5olRpQ;ec4O9o9S;u5BJv3TB;aCRlaQreBX;ce3T9;an4G8;ardRulQ;ar0ZC;le7;il3T4;di59Mtion2IN;nQquo57G;!cl4ZQed,iQm4s,wo54Fy;c4VKes,ng;ed,s545;di4YLna,sQ;!a,es,h4XS;la56In55V;nRqQte;!i0;!i467;aQhoBod0s3KA;d,q;an,cJdi3GOlaDnRok59Cri,ta,us,veQwa;!d,iy;a,eD1g3W2ic,s;a9Vb9Sc8Hd76e6Tf5Sg5Ih5Bi55j4Yk4Xl4Vma4Un4Mo4Gp4Fqu4Bro4GOs36t0Eu0DvQwa1G1;a08eYiToQulnerab59F;ca5ATic483kClQ;untQv53V;ar23B;d3NWgTncB6ol3SIsiStQ;a2JQeQi1;!d,es,s;b598on;or33V;c4NAntWrTstQte2LI;!ab3ed,iQme5DNor0s;gatQng,tuH;e9i2ATor4IJ;ne7s1SRtQ;!eQs;br436d;!ed,iRorQs;!ie5BXs,y;ng,on0ve48E;d56UlRriaQsi5B2;b59Hnt;idQu3S1;!at50Vi590s;it,nd33Gre,yas4TM;a2Ge08he,i05l,o03rSuQ;b4SKitQ;!ed,i51Y;aXep51PiWoSuQ;d56LsiQ;on0ve483;!ducSsQve3FW;!pectQ;!i4V0;e9i1t57B;ca57Dgu2C2ns1EG;!cRm1BnQveno52X;et,sig4SH;ra3SUt3RL;!leraQna59Nxic0WX;bl58Hn5BU;fa56VmQ;aQid5CB;cy,t4F1;g1Ul1Nmpe2KKn1FrQst5AY;!a1Bba4LUc10d0Uest4CFf0Qg0Oi0Nje2GMl0Jm0Fn09offi5BUp03rXsVtwUvQw3XP;al0enSiewQ;!eQi1s;d,e0r0;e9i1ti2CS;in59M;e515per4IStQ;a37Ae0XT;a4LOeTogatSuptQ;!ed,iQs;b3ng,on0;eFi5C3or51Y;d,gn4WPlatQ;eFionsh4XH;ers3RAlaToRretQ;!a55PeLi58Os;lQse;!at5;neQy;ta56I;!aSeQi1VZmeKs4IH;ciBd,tQ;!wor3GQ;lRtionalQ;!e,i2K0ly,s;!i103ly,s;ediaSiQodJ;nQs2BLt85x58S;a4R0gl58Z;rGt2GR;ac5ea19MiSoQu53L;cQp57O;kNut4TU;nk573;m,or0;aQovernme07;la4LC;aSerQ;eQi1on;!d,n577s;cCi50S;ependUiQ;ct1W4mRsQ;cipli345;enQ;si3QF;en4D4;eZhangeYi573oSuQ;ltQ;urJ;llegia55GmUnQstJur580;nectStQ;ineQ;ntJ;!ed466i5AWs;!pa4TQ;!a4Q8s;de,pt2Js0WD;ctQgen2DK;!ed,iQs;ng,on0v96;dWsTtQ;!iQly,s;onQ;!alEed,s;eEiQ;fQtGveE;ie3UYyN;!aKed,i1s;!lQ;ectTigQ;enQib3;ce,tQ;!ly,s56T;!s,ualQ;!i57Zly,s;er0rQ;aQi569;l,t2I1;ct,ke0ngib54F;a0Tcr0Re0Mha3O9i0Go0Ep0BtWuQ;bUffTlRpport3P5rQ;an59Ke56Ug51i1mount3P4rec57C;aQin,t8;r,t4XX;er3P1ici2B;ordin28Lsta5B;aZe4VOiTruQ;ctRmentQ;!a2Z9ed,s;!ed,i27For0s;gUll570nctTtutQ;e9iQ;ng,onQ;!al2FMs;!i46Is;at46L;bil4LJgr4NWlSnQteF;ce0tQ;!an2AQly;lQme59X;!a56OeLi1me59Ws;ect1AiQ;rQte;a2FRe9i1;f4UGlQmnAQ;en58Rub3v2GC;dUgSnRp4Y9stQ;!e2ERi1s;ceHu54S;ht417niQ;a,fic2NO;e4UYioD;cRi,mQnsiAYpa7Qrt4Y7t0;in54R;tRurQ;e,itG;!ici54Ms;iQut3O4;beFp566;n7Iti3O2;e57JiQ;rRsitQ;i4R9or;e412i49Yy;at4Mut55K;cUffen1IFpSrQue;di1GXgQ;an53C;eraQportuB;b3ti50J;ul2CK;aWerViUke3U8oRs,uQ;en4PGm3H;cRvatQ;eFi49Jor0;en44uoD;ng0t;!mo572;!r4GVteE;n,te0;aQet0iB;id,nd,y;ed,j4WQli46Ts,y;ectVuQ;!d4NnTrRsQ;ti548;e9iQy;es,ng,oD;!c51Zs;!ab3ed,i588or0s;miUqui547tiQ;aQo;l55MtQ;e9iQor0;ng,on,ve0;cJt3N2;aUerSibitRosp1VumanQ;!e,i540;!ed,i57Zor0s;e3KPitQ;!a43Ged,i1or,s;bit48ZlQ;a553e3ZZi1;a,eXlVm4STo52VrQ;aReQid;d2IUss;in5m,tQ;e0iQ;a525tu4ZQ;eQor3I2;s,wo4Y1;!bo3N8lAnQr,st2D3;io4XVui53L;a0Me0Fi09l00oWrSuQ;ri53LsQ;e39Xi57I;aSequRiQoK;ng4XR;en0EB;!c54Hr5structur55Y;!mer4GVrmQte4QW;!aQeLi1s;l2CDnt0tiQ;cs,on4WVve;aUeTiSow0uQ;enQx;cCtiJza;ct2M7g4SZ;ct2CFx11F;mRtQ;ab3e9i1QMor;e9maQ;b3t1RB;del2M6e4VNgh411ltratUnitRrmQ;!a51MitG;eQi4YHum,y;!ly,sQ;imJ;eFi56Ro4PY;as4IctUld,rRstQ;!a53Wed;!en52Oior3XWnRr56As,tQ;il4UD;al,o;!ed,iQs;ng,o27Nve;ct,ll10Xm2ODnQrc53Vtu526;cy,tQ;!a,iQry,s;ci4YLle;bri23Td47ff00lZptYquWrtVsUviTxQz;a55Icus3LIhaust46o4ZpQtri4E;eQli4D;n1Trien22R;tab52C;!cap3LE;!ia3ZL;al4I6itQ;ab3iAy;!i4CHly,ne7;aIZegaKig3X;ab3ectQici121;i0ZXuJ;e0Li02oZra,uQy;!bitXcVlg1CPsQ;!trQ;iQy;alQes,oD;!iQly,s;st0z4YZ;e568i1tQ;!e41Ai4O8;ab52C;cRmQnes4DQor0;it3KV;hi4SVtr1QN;a05c04e0ffer4LOg00o,rZsTviQ;dualQs3G;!iQly,s;s4GEty,zeF;crTpRtinQ;ctEguish3KO;ens3KNos5uQ;ta4L0;eQimi1DN;et,ti546;a,e0O;eRnQo;a551itG;nQs52O;oDt;!at2D7es,ia,t0WU;!nQ;!aQs;!p4YO;b03cZed4MOfXliWmniUntSpend0Rr,sRtermi3LMxQ;!a52He4JPi1;criba4KMtruct2W;!a52Aed,uQ;reF;fQty;i1BNy;bl511ca4ZJ;atig3K2eQini4UA;ns2P;en52BiQ;phRsiQ;on,ve408;er3JX;ted406;a0Ve0Qh0Oi0Il0FoXrTuQ;b4SElc3UTmbRrQ;!ab3r54Bs0ME;en4ZW;eQimiEW;as244dRmentQ;!al0X3s;i4K2ul4FQ;gni494her2F7m01nTrQ;p21YrQ;eQig29upt29;ctE;cVgr26RsStRvenienQ;cCt;in4KCrovert25;equeRiQol3JGpic1D4;de2CKst108;ntiJ;eiv3JDluQ;si413;e0i1munica4L2pQ;aTetRlete3ZKreheQ;ns1I;enQ;ce,t51O;r3J6tib407;!e4BVinRuQ;dCsi42G;a516e9;denTneratSpRsQt2CJ;i520or0;ieK;eFi6or0;ce0tQ;!al51Ely,s;!eQi1;d,on,s;!nSp512sQ;sa3GKtQ;!uoD;dQseFti4VA;ia4YD;!lcul3IPnTpaRrQs;c0O0n27H;b3citQ;at50Zy;!d0ZHta50O;oRreQui44U;d,e3DS;u4W4x;bi4ZGc00dXlien3IHnVppUrTsmu4N0tten4LQuQ;di4IUguraRspQ;ic3DT;l,t539;i,ticu3DA;lic3ICropria42Z;e,iQ;ma4XQ;equa4XYmi0WvQ;erQis3I8;te3FY;cStiQ;on0vQ;at4JIe,i4Z4;ess0XDura4XS;a1Rb1Oel4XFitat1Nm15ogen535pQr39I;a0Ye0LingCl0Eo07rTuQ;d4IVgnNlsRni4Z0rQt4HT;e,i109;e0i3ZP;actica02eWiVoQude3FO;b3HWmp2LXpTvQ;!e534iQ;ng,sQ;a292eFi1;erErietG;mat3VJnt4C1s49L;cis1I8gnaUsQ;ar4BEsQ;!e51GiQ;ng,onQveE;!ab3is4DAs;b3t4IZ;b3l3TO;litXXnderVrtTsQt4IEund252ver3F0;e9i1NGsRtQ;er0or0;ib4YD;!aQeLi1s;n4Z6ti6;ab4WL;aUementTiRoQyN;dCr4ZOsi6;cQe512;at4XPitE;!a50Te1MGi1s;c3H7ntQusi4HL;!a4SYed,s;ach490c01dZll5nYrQtuZ5;a4TMcepWfectViTmiRsonaQtin4HZv3CI;l,t4PO;ssQ;ib3;alQl4BAoD;!is4V5;!i50Kly;ti4HB;di1etr3GW;an51Be9iQ;me525ng;ca4H7;ct8ir522lUrtSssQti2CC;ab3e,iQ;on5ve4Y5;!ed,iQs;al26Qng;a,eF;a04e01iZoUuQ;nQt3GL;e,iRoQ;lo1YIth451;tGz2G1;bilTde4ZZrQv3GH;al3SKtalQ;!iQs;ty,z50W;e,iz4YQ;graQn2BW;nt0t4HP;asuRdia4T6mo4BEnsQrs4HO;eEi4X9;ra4GM;cu3B4nRtQ;e4BAur4OS;eKu46J;e9i514o4K7;al0SGeQi410rogl49SueF;ci4VAdQ;!d5;gQi,m;e35DinQ;aQe9g,i1;b3ry,ti4PZ;a04eBia03jim02ke,lRo4NXs4SVyQ;a,i4KE;egYiWne4TUogVs,uQyr4XA;minatTsQ;ionRo4VFtrQ;at28KioD;!a4VDi4Z8s;e9i2VTor;ic407;c4R5no4U1quid3RRteraQ;cy,te0;al4ZHiQ;b3tima2OZ;ae;c,d;n4FPr4WX;a493eQu10R;a,da,y;fe,ieg3QRkeRttQve;ie,le;!iy;ab,op;arWgy,ht,lVnQor,ua3RX;aTeoDit4O4oQ;b3min4TQrQ;aQe9i1;mDn4ZH;c48Usi,tiDz48U;esi4RSoo;as4SQ;fy,he,it,thQwe,y4O5;at,eQis;!re,y;aRds,ee,ft,g3QCv3IZyaQ;su;rn,st;a2AXeWioUlSoQr4TAyll4J2;lQn;!atr2HKi2TDs;eQi1y;!d,ne7r;cy,m3URsyncraQt4AG;ciAsGt4U8;aWm,ntSologQs;iQue,y;c4W7es;!iQ;c4W5fQtG;iQyN;ab3ca4WMe4DZ;!lQs;!iQly,s;s4A4z5;a00eXhUiTky,onQ;!ic,oQs;claQg2FU;st4II;c4TJng;ab4POelanRiQ;!go,ka4LKro;ge4FH;bRcQd,land4IDm4s;re4DD;e1OFox,re2RS;c,rQ;ly,us;eRiQrah4CTsOuprofO;s,za;n,r4C2x;dc,go,in,n43Gst,te4WI;aCSd2NRe96i73jalm4JXm72o2Zr2Ysi2Wt2Vu16wanIyQ;a14brid3QPd0Te0Qgien0Om0Nnem4o4NRpUsterSuQ;ga,k,nQ;!d3P8g0Q;ectomGiQ;a,c4SQ;e08h06i1no02oQ;!cXderm4T9glycWtQx4V7;enUhQ;al7HeQ;r2ZAsQtic2ID;es,iQ;s,zeF;si4QCu4VL;em4V0;hondrSriQ;sy,tQ;e0icJ;ia4DF;s4RTtQ;h41WiQ;c,sQz4VQ;ed,m,t;enQ;!a3WL;!d,rQ;!acXbWdri4PZiVmark4MJsTteRventilQ;at4G6;nQxt;si4GF;enQpa4XK;si480;nf09Hon;ar4SJolTF;tiv4LM;en,ie,n0;e,iQ;c,st;na0onQ;!gQ;!n4BL;eZrQ;aWi4PToQ;!cTeSfo4WWgOlRpoQth419xi4PS;n4R1w2;og474;lec0T8;arb4W9hlQodoB;or4S4;!nQt4DZul4QW;ge4P8t0;!rab4J8;cin3OEh,ng,tt;a1Db1Ack19d18e17ff16g13l11m0Fn05rZsUtSxRyQzz4Y1;ge4TU;l4JIt3CF;chQs,t4PYu;!ins4PX;aPband3OBeyPh4SYkTsRtQ;in0VIl3T5on;!aQePy;in,rs;!er,iAs,y;dl3RPlUon,rRst,tQy;!f3P2inIli1s;a2ZiQyN;ca4MNeQ;dEs;!eFQi1s;aYchXdredWgUh,kTnicu3RKs,tQ;!eLinRl4J3re7sQ;!m4v3LF;!g3W5;!er4U2s,y;!arQerNov2r48Zy;i3X7y;!s,th0we4IM;!ba4LSe4VL;hpu,n;an07b04d03e02iYmVoTpQs,us,v44U;!ba4LPed,hQi1s,ty;!rQ;ey0iA;n35rQur;!i41Rle7oD;eRingQus;!bi4KO;d,l,r;dRliQ;at4RXty;!iQor;fi4SKty;!rD;i35Yr4H0;e4DXlRolQug;dt;e0BDi1y;!eEiQki4OVly,ne7o46Zs;c3SEs46WtQz4E7;aQiAy;ri4;a,k3PUlQ;!abal41Yed,o,s;eCWgRhQo,s,u3OX;!es,ie;e46Vin3OYy;!ed,i1m4s,y;r1MXs,v4SKy;dlCs6;!leb309sTU;bRcQer4VYie,ot0r4PAs;ap0;aCAe4O5le,ub,y;i,nI;ml,tp;aQen,ng;!ng,o;ef;a3Qb3Lc3Jd3Ge3Ff3Dg3Aist4STjo,k38l2Qm22n1No1Gp1Dr0Ss0Gt08uWveUwRyQ;le,nAt;a4JQdy,eRiQl3IJs3E0to,y4JP;e,tz4RQ;!ll,s,v2;!l0rQ;!c45Oed,i1s;di3DUgh3UOlih4nd8rZsQ;eQi3TUt6;!bUclea1HPd,f3NBgue4U5hold3IEk342maTs,wQ;arRiQo4VX;fe,vA;es,mi1;id,n,tA;oRrQ;okO;at,y;!g06OlQs;o1y;a2DRb5cVd7YelUhTlSma4UAne7p3RDsRtQ;e3O8ie0;!h41Ep3RB;iBy;ead4QNou4S1;!i2s;akAhQ;!ki7n2;an4HYe00hi3M5iZki4RBpiVsUtQ;!a42BeSiQs;lQng;e0itG;d,l0ss4NUtl2;!eP;ce,taQ;b3lQ;!iQs;s5ty,z298;e4PAng;!a,d,s;a08de0i06mon4T5n04o02rWsRtQus,va4K3;en4RKicu4HNon;!eQi3MHt;!ba4JHle7m4G3pSra2JKsQy;!hQ;it,oe0;l4F8ow2;enUiQor0;bl4QBd,fQ;iRyQ;!i4AG;c3WQed;do4KJ;sQwi3RC;co44R;!bl3E4eQi1s2WBy;!d,r,t0;!k,zonQ;!s,t4QN;!cQt42R;e,io;eRiQki4QEp1OEs2SA;!nI;!d,ful4RFle2MNs,we4M9;ch3BQdVey,fUkTligan4RKn,pSraRtQve2CC;!eLi3LUs;h,y;!er,la,s;!ah,e40Lfa1i1s,up0y;!bea4OTs;!ed,ie0l3TBoo,s,wink5;c24Rd03eWgVi1k2BNoQza;lulu,rQur41C;!aReFiQs;a,f4O5ng;bl4PKrQ;i4E8y;!ko1;!d,r,stHCyQ;!bUcTd3IHmoonSsQ;!uQ;ck3;!e1DN;o2JNu3NX;ee0un;a,o,ura1JC;a4MWb4F7eYiVoQunculD;!genTloSphobRsQ;!exual28F;e,i4GL;goD;e1TXiz2NLoD;cRe0lGnQ;g,i41G;id4RN;!b01coX2d,g00lYmaXoVpa4MNrUsSto3FNwQy0;aMorQ;k,ld;!iQp3X6te4EO;ck,te;!o44Zs,un;paQwner20I;th4ND;de,k4OZ;a3WOeQi3EEy;ss3O2;i3RAro3FC;oRuQ;ild3MBye4BS;u4LAy0;a,bro3JFd05e9g2i04lWmVoSstQt2D0y3KX;!eQ;in,r;cau4R2de4HJgraRsQ;ui4MZ;m0ph4N0;!an,es;!aVeUiSowRyQ;!ho4HEwo4IT;!ay,ed,i1s;!d4D6es,ngQs33U;!sw2QL;r8y;!ndQ;!ai4P9er;!d4ANe1MAn24Gst4MQ;!eQin3EQo8Vs,up0;m,n,r0;a4LQe49Jkai48WuQ;m,to;aRgNs,ue,waQ;r4N3sh;n,r4HJ;fQstadt2;!a,m48Z;do3EJi1s;gQja;eQi4OA;!pod4LGs;kQus;!eAHi1n4DW;a49DbSie,nobRoQs6;!kOs;!bi1;es,iQlCs,y4QE;es,t0;g4RArQx4KO;d3EJseEy;mm,ph;a1Rb1Oc1Kd1Cer19g10j0Yk0Xl0Rm0Pn0Fp09r04sXtQve0ya4SC;ac4K6chUherTi2l2m4D4oSs,tQ;er0iQ;nIte0;mi,s4K3;!to;!co4GDeQhik3N8i1;d,ns,s;a0RNpanVsTtQ;!orQri2HB;iQy;an0c48Tes;!eQi1y;d,lf,s;ic0o;aTe9i3PJoQs4AO;!gOhi3VLk11mi,no,sQyu4C5;e,hiQ;!ma;!m,ta,ya4DO;pQs3G6;er,ie0oQy;!cSdRpotQs;amD;ro4H3;ampDr3QC;aYdUes,gTkStQ;!eQi1on,s;d,rla3UN;le,y;!e9;!eSi,l4CSquarOMr0I2sRuQ;!i4OCs4FF;!ig4CG;n2WGr8;ta,u3RV;aQi0QVm0RUse39Dur4BS;!laya3UYns1HTwa3Z6;arUdSlQt4J2;!a4L4billGer,i2XMm4sQt3KFy;!i4LX;a,eQy;!gaM;i02Hy;arBDe4N2i1m4EN;aQin2YMo;b,ck2XY;gXhQuc4IW;!bVe3JCfTja4F7lSne7sRtQway3GS;!a4PCow2;!cho33Fmi4FO;and3D4ight8y;alutPlQ;yi1;a4IDr4EF;i4MFs;!archRoQ;glyph2E5nymD;al,i3MGy;aWdOeQinI;!aUb2L1kToRs,yQ;os4II;!uQ;sEt0;i,o;ki,w4AK;ka,l3UX;cSkQ;!ey,m4oQs;k,ry;up0;be476erQiscD;natQ;e,i4PF;tDwat465;a2Fbr2Ec2Bd26e25f24ge23he,i1Vju4NZl1Fm18n0Zp0Xr05s00tWuVwUxaSyQzbo33K;a,dQes,l4LWwo4FU;ay,ri48Y;fluoQgon3OX;ri4HE;es,i134le3JVs;ng,ri21;eroQm4ty;!genRsQ;exu2I8;e1PYoD;itaTsRtQ;er,on;!eQ;!lb9C;n1RKt4KI;a0Gb0Dc0Bd3NMe03ita3WGmYnWoUpArSsRtQz2PF;fords37Go,z;!ch3UDe37She2AY;!e4N0iQma3CD;ck,ng0;!d,es,iQn;c4E9n3W3sm;anQe,ia;!d37W;!aSeRiQ;a,e,oBt2M6;s,t11Z;nQphrodi4J5;!n,o;!aVby,ditUfoMinSs461tQwi4E5;ic4E7oQ;!foH;!aQ;ft2;a4J5y;bQft2;ou4JH;!ulQ;ane491e3T8;!aRe45YiQs;ci4JTe,vo4A8;c1HRl1NY;!clAld3XK;aQbu3M3haestD;rPtiL2;cWdUg,h3C9k,l4AAnTrRsQ;!h2UCon;iQy;!cks6ett4G3k,q489;a,ess35Ai1y;e2AOriQ;c2WCk,x;eQhm49L;!f2M8;aUiTlo4CXm5oQp;globPrrhQ;agQo3YM;e,i24X;ngw48Nspher2DV;nt,tQ;i4I8o4AF;d,en04g4FQi00lXmVoUpSsinRt2veQ;ti45C;g,ki;!eLf3QEin3A7lQs,y4BR;e2GCiB;!i4KM;!a4G7eQs4HNut;r,t0;!a,b3M6c2Y1eRfiHho3i4C0mQo0s,u3FQ;an,ou4D0;!n4HZr;cSoRpQum,x;ad,o450;s,tro3NR;al,opt4JI;!a,e,o,s;dVf4JGghtUke,l,mli46UnSpie7rRsQzII;!en32Vm4t0u38V;!e7lo2Y2s;!eQi4NBoDri46Rz;!kO;!en8s;eQi;e,gg2l32P;l,mon2J6;fern4n2tMB;d4K6l3WBp,r429;da,gRl493oniQw0KXy;st4HH;eQi1;!d,hQr0s;og0;a4HBht,kRtQ;a48Qic,or;!lEVy;ew0on;d08l06p8rYtUvQ;eSiRyQ;!weV4;e1GQly,n1YW;!d,n4K4s;!eShQi1s,wa4ED;!cli4NAeQr4AY;n0r;dEr0;!d,e16Qin391sWtQy4AL;!ac3IFbTeSfe3NRhRi4IWlBEsQthr3HwarQHy;!tr12;!at;dEn4LW;e2WVrQu3K7;eak2MRokO;!ay,e,t;!e1GGi1s,thQy;!caHf3E5ie3FDy;!ac3I6b01c00dZeLfir4KQge477hunt4IDin38RlWmUp2AIquart3VHro3YAsSwQy;aQi4ET;te459y;!et0h3SGtQ;o4BNro1;aQistU;n,st2;a4ENe7iRoQ;ck,ng;g4A6n3E2;re7;ouK;a3PRoaM;a0DUb4Vc4Sd4Pemo4Ofiz,g4Mh4Ki4Aj48k47l3Om39n27o3p21qqa348r0Ts0Jt0Au08v04w00yTzQ;ard2GOeQi1m4AFy,zaM;!lQ;!n3ED;aVdUeTl47UnAri4DSsSwQ;aMiHoQ;od,r4B7;!ta49X;k,s;en,n,on;!ka47Wma,s4E8to;aii3DYes,i1kQl47Ns,thorn4LN;!eRiQs;n3EFsh;!d,r,s,ye;a1R7eRiQoc,re;nIsh3ZM;!a,l,n2SHrQs,to,y49H;!foMs;gh4HCl8nt3LDpt0GPsQt4LF;a,er;a36VchVeUf3DLhTi1r5sStQ;e3W3ie,oQ;n,ri;!heps3DSu0LI;!aw45Zor4BQ;!d,f3D1r0s;!ba4A3eRi1lQ;in0JA;d,r42Gs,t0;an,eYhWid4FJkVn,sUtQ;!a,eSiQy;ly,nQ;ap3DQgs;!n8;an,elho4LLlC;e4D6i4H9;!e4JMiQt37Q;mo3PAng,sh;ga473;a0Wb0Tc0Sd0Ge0Fgr0Ei0Bk0Al07m04ne2IUo03p00rVsh1XRtTuSvQwo4B5;!aMeQ;!st02Oy;!hi,k45Wmi,n3ZWo;!foMl46Qm41NsQ;!ho3IG;iRls6oQy;ds,ga4F0wN;eRg4m4n3OLsQ;!bu304on;d,r,t;!eLi3LGoRsQy;!ichoM;!on0;ld,un;!an,ed,f3C8i1le46IonQs;!iQy;c43Nes,o4AKum,z3Z3;anFeRoQ;ck,t0w;m,quPy;!e34TinIne7onnOs;!sQ;!hQ;!chand4I5;eavAo4BT;!bra09Dm,s;!bZcWe2NYheViUly,m4ne7sTwQy;aHiRoQ;od0r2OW;ck4K0r5;!h45Cub;e4I7nIs6;ad5;aRoQ;re,v2;st3;aQou4CC;ck,ll;ou419;inRoQ;r8ur3DB;!g4FQ;!da,ki3S7ld,ngu41Jss3QF;hazUle7pQs;!enRiQy;e3CLly,ne7;!d,ed,in35ZsQ;!t4IU;ardE;a0Qb0Pc0Od03e02g00i3SIji,kYl1MWnVoUsRuQzo;kk4JWm4;!aReQon,s6;!l,n;!rd;i,v2;aRe0iQlbJ;bJg4;!h,y;!a,eQie,m5s,y;ri1y;!ar0eLin35Lm4oQs,up0zh475;ut0v4F6;da,y;!a,b08c07e06ful0g05h04i00jZkerchief0lXmaWoVpTra4I4sRwritQy4D1;i1tO;!et0hak3DFomeQta3MSy;!ly,st;iQriK;ck4EG;ff,ut0v2;de,idO;eQi1;!b3EMd,r0s;ob;cQe3BSly,ng,wo4J7;apQraf4DO;!pQs;e12Ti1;e44FoldN;un0;d4GCl,r;raft5uff3RR;aQil2YFo1HPra341;g0ll;e,o47D;u4D0y3A9;!darko,ko,o45T;a03burg299di,e3T5i01l00mVoudi,pTsQza;!tQ;er0rQ;i3GMu1;er8sQt4GT;hiHte43V;!eRoQy;ck,nd;rQtt;!ed,he43Ri1sQ;!l444mi47JteP;e17Lin;d,lQsh;l,t6;!da,n,s;al,be3ZHcy6d07e06f04i02lUoTper32XsRt34TvQ;e9i1orsO;ey,tQ;e43Ion;!gOs;!a3QWeWgr3VIiUma3K2oRs,ucinQw406;at4HPogen4C8;!r4wQ;!eQs;d,en;buQd42Fe,we49X;rt6;!luj4I4r,y;b3A4f32Wl,ma,na,tQ;e,os4AW;!ba46Gh2KKoMti47OwQ;ay,it;!h,n,s,y;em4ol;a3ITe2YYim,oBu44E;iQj42E;!me;d2fa,g,ku,lWm,nArQti2IX;!bUc3M0dSed,l2P6n45KpiRsQy;!pr421ty4BG;e4GNn0;o0rQ;ess435y2;a49Fru45L;!eRi1sQ;!to2PJ;d,y;aQn;!ha3BT;a31Len,gQi1XEm4r45Ss,ue;aMer4CXis,l4EA;rrhag3YVsu;a,dRe0i,ji,l42Yn,o,rQst;i4on,t;ie,o45S;er,hi,ien4B5kQ;!eQi1lAm4ney4CDs23Hy;d,r0tt;eTiQl41X;b,tQ;!aQs,u4D7;b3t0WZ;as,n,r;aCPchq,daCOeAQgAOhAEi8Yl7Zm7Yn7Vo5Jr1Xu03w00yQz422;eo1mXnVpTrRuQ;l,ng;atQo0;e,i1I4;o,sQ;iAum,y;aecol3SVecQ;ol05Y;nasQs;i40Xt49Q;anIenQild3SIyne45R;!dolQ;en,yn;a18bernaXGc3JDd16e0Yff0Xg0Wi0Njarat418l0Jm0Dn03oxio1p02rZsWtTvn3SFySzQ;m4zlQ;e3XDi1;a434s;enRhr4FPierr0KMle7s3XGtQ;eLi1urJ;!be2VM;h2T9s4FMtQ;!aQe3QSi1o,s,y;!f,v13O;gl3AEj33OnRuQ;!ji,s;!ey;py,ta;a,bo2QAde22EfiXg3V0k,m41DnVpTsRtQva44F;er,h2;!hQli2PB;ip0ot0;l40HoQ;iKwd2;!ar,eQi1y;d,r3KU;ghtQre;!er,s;bUi1QJmTpSsQ;!hQ;oe;!ti6;e3Q8i375y;a47Oo,y;aSch,f,lQp8;!et,iQs,u,y;b4B3v2;b,g;dWlSnQse0tar4DP;eQne7;a0veH;dSe,her45ClQt3WJ;au45Ber3S0oQ;ti0TV;!e3Y5ha47D;an4EHeQi1o;!bo1E9d,li44Jpo4DQs;genhe3SQliel3RV;!aw0;rUsQva4CZ;sRtQ;!bo35Nh1S7s;!eQi1tima29Xwo4FD;d,rs,s;iRns40VrQ;a,e2SSil4C;l4Bn;dQe,r3IW;i,u;camo3dalZm,nXpo,rRtemaQva;la411;antTdQ;!edEh32MiQo,ra1PVs3YF;aQng;!n1M4;eeQiAor0y;!d,i1s;!gQiBo,tana3RB;!do1zh42H;aja4CFcanJu3EQ;a1Re0Zi0GoXrr4COuQyffind3QL;bVdgUeSff,mRnQss;dy,g4A8k3tYwa42X;blCio,p3VN;lQso44F;!i1li1;e0i3UB;!by,er,s;an07cer43Zdd,g06hl,in,m31Wo03pCs01t00uUveTwQz3WZ;!eLinIlRnQs,th0;!up0;!i1l1s;!lNr,s;chUndRpQs3VYtN;!e3KQi2MMs,waH;!brea2IVeLh2EBi1le7sRwQ;at2o4EF;!ke2ZDwe466;!o,y;esq2FSto;sQven3Q1;!e35Vi1ly,m4o;mRt,vQ;e0inIy;!e3OIi1s237;!an,gy;!ed,i1l1s;bb3ce,d07e05f02g01ll00mXnVpUsTtRzzlQ;eFiAy;!s,tQ;i1y;!el47Uha3MMly,s3PJt3RFwo424;!e9i1p4CYs;!ch,dQgo0n4CXs;!er0i1sQM;!aRe0lo42Cm2PYoiHsQy;da3;c37Tl37I;!eFi1s;gs,or3WN;fQt246;!iQ;n,th0;f0r,vQ;an490e9i1o43E;!d3ir6lo422s;a0Dc0Cden0DDeZgVml2R0nSsh3R9tRw,yQ;!h36Wi1sQ9;a,chOe368z32B;adRd3IDi2oQ;b3u31E;a,e0ie3W0;!ar2NAg0oQs6;iHrQ;!iQy;an,o;ce,d4Hk0l2TZnQr,t2WI;!bZda3eYf352groc2hWiVlTpSsRv317wQ;ay,i3W9o434;!bo3RDp4toB;ea4C4;a459eQ;af;e,ng,sh;i44VoQ;rn,u2L9;!r3TWst;a40QeQ;lt,rg;i4o;sRtQvA;!e35Hly,ne7s;eQi1y;!ba44Md;b18c14d11e42Hf0Zh3QHi0Xm0Un0Fp0As08t04vUySzQ;eFiQ;a33Ge,ng;!d6er,i1sQ;!on0toB;eViQy;es,tQ;aQon,y;s,tQ;eFiQ;ng,on3TK;!di23RlSr,sQya403;!i43ZtQ;!o41G;!ly,y;!a,eSiRuitQ;!iAo424y;f0IBn2YCs,tu43U;!d,f3EIr,s;!p48WsQ;!e4AIhopp47Vla3FLroo46Ry;eThRpQ;a,lC;!ed,iQs;c45Jng,te;!fru2ZDs,vi414;!a03dRge49Wi460ma,n28So48Epa,tQul0IUv300;!e3IGh3PQi1m4or,s;!ad,cZdaXeWfather48ZiVki3JUly,mTpaSsQvi30H;!iHon0taQ;ndN;!p3EYre4BQs;aQoGP;!ma,s2MU;o48Cs;!r,st,ur;dQug0Y6;!dy;hildQ;!rO;da,ry;!er1DXmQop3LYp034s;aQy0;r,t390;l,nQ;!ed,g2s,y;!fQt2KD;!i3NR;!a481e47OiRs,uaQy;lEt46D;e4B7ng;eRiQ;a0e,ng,o1DW;!d,f3DJlQs;a43Ee7;!b1RVle,s;a1Zb1Sd1Ge1Ef2g1Dh1Cin1Aku,l0Zm0Xn0Ro0Hp0Gr08s06t01uYvTwRyQ;a,im;an,er,n0rQ;i,on;eQind3PUt;!rQ;meKnQ;!an49ZeQi1m0RLor0WRs;d,ss;da,g47UlRrQt;d0m3YR;a3YWd;a,c3R1hTo,s,tQ;!a,en,friRi,liQo;eb;d,ed;!am,en2G4ic,s;h,li1p21GsQ;!am2ip1S5;a3WMbaWdVe3WLgTiRky,m4n,o,s3V8yQ;!eo;lQng;la0;e24XonQ;!zo46W;!i2GHo3WGy;ch2EJ;al3P7h464i;b2ch,dVey,fUglG3k0nTp,sQ;!eQ;!bQy;er44Ium3AK;!iAs;!ba424ed,i1s,y;!a423bye0e,fSie0ly,m4nRs42CwiQy;ll,n;e7ig3VJ;ell3Y2;aUdoTe3QXg,i,na,orrh36XzQ;aQo;ga,lQ;eLSo;la0r;!ds;eQorr4A2;r,z;an,dSem,f2M2iRlQmaJ;um,y;!a30A;!a47Pbe2OZenWfTiSmRsQ;!mi3YUteP;an,iB;e,l0AV;aRiQ;ng2sh;rb;!r3ZK;!gQ;!s,to;an,ei;g43Ah,o32Aury3OQ;bbe2P0m6r32Qs,tQ;he,z;a00dVfUi316lSmo3PYoRpar43Zr43HsQwPz1R4;!e41Kon,pe5;t,wn;e7iQy;ke,ne7;a3PTorsakOr3UX;aQe41T;mRrd,ugQ;ht2;!it,mit,nQ;!ed,it;rd,va3HB;bSi,lRsQ;!hi432;et0in0;er,lQ;eQi1;!dQr;!ygo2Z9;d45LlQn3VHt0SU;!ie,ke2TXpos43Gs;aRoQ;cc410me0;r44RshNt0w45H;bh,os;a0Be08i04oVuSyQ;cQn3UOp34F;erPol;b,co457e9g,i1m,tQ;!e0Y6s,tQ;ed,on3PJ;atNbUck,omTrRssQuce1T7ve3NXw8;!arGe46Vi1y;iQy;a,es,f0EJo3YB;!i44Fy;!alReQs;!s,trot5V;!izQly;a454ed,i1;b,ck,d0ZImSnRstenNtQ;ch40Vt1LJz3P8;da,t;m1LHp0H6;aRb,e2JZnQ;!co45Sda3LOn,s,wo3Y4;m44Un44Us6;b2ci01dZmWnUrCsRuco3UBzQ;e2A2i1;er,g3VZsRtonQ;bu428;!e1PZwaHy;cCdQ;!s,ul3SH;!oQ;rQur;!iz5oD;!dOe0i3PPly,neQs2B6ys;ss,y;alEer0;a11b0Zd0Wes,f0Ug0Rl0Lm0In0Co07p2LYr01sYtXuTvRzQ;a,mo0zaM;eQinI;!aw3PNn0r0s,th,y3VB;liQsep37K;aQo;!nQ;a,i,o;a,mo,tA;ae1bRelQh,t;a,e,le;orBurB;aTdSi,lQo,th;!f2DHiQs,y;e0sh;!er0i1le;fQrd3RX;fe0;ia,n,rRt3BAvannQ;a,i2Y0;dRgQno;io,os;a3TZi3TZ;a,et414gTko,nSoRp2POsQza;be2M9e1;!rmoD;ed,ie,y;!erQh3KR;!b2S8ly;be3O3l3UTmQp3NW;e,ickQ;!ry,s,y;a,bert0U6ch3GGdUes,game3UWlQmoHou,r352t0;!eRiQs,y;a37Te0g4n2KLs;sQt40S;!p45Y;!a,e3H4i1;aRgQi,o3A8s;i1l0X9s;by21Ant40P;foMtQ;!ed,s,waH;dQe6g3UF;ap,yQ;!ap,up;bQe,l3K6ralt3R0s6;eri13Von0s,y;cSnRrdQ;el3M7;!car3M6lu3NJn3HUt0;in3ADo3IS;aXeVoRraQul;ib;sQul3M0;h,tQ;!bQly,s;us3N;e,tQ;to0;nQst422;a37Gi;et,oQ;n3SLt;ar1Mc05Udd42e1Khr03Gi1Ik05Ul1Gm1Fn0Po0Cpp0BrXsUtQu36Zys41O;aSc3M5s,tQup,y3TL;er0inIyQ;!s2BA;!w3NU;ellscha3FLtQundLD;!aQurC;po,ti6;a02b01d3KJe,ha2NJi00mXoni3I7rUsStRvaQ;is,se;!ie,rud45Cy;hQon;on,wP;aMen,i458yQ;!manQ;de2K1;!aQi1B2s;in455nQ;!e,ic,s,y;!a01X;er,il0;ldSFni34Ird3VU;et39E;chemist3ZJdes3ZEff01graphZlYmetrZpWrQthermJ;di44YgQ;!eSiQy;!aQe,na;!n3O5;!s,tQ;o2RBte;hysQolitQ;ic17K;!og2C2;iQy;c3M5es;!r3QN;a2IKd0Ee01gh3XXiZji,nYoWre0s,tSuRzQ;abu3J6;ine42Bs;!a,e39Ui3YOlQry,s;eQy;!mQne7r,st;anEen;!a,ci3WDe41CmQve41C;e,ic;a3IYy;al2VDe0i,talQus3XA;!ia,s;!alog00rSs369ticRvQ;a,ie3VX;!al40Ki42Ns;aRic3TIoQ;si403usE;!lRtQ;e9i11Kor0;!e,iQly,s;sRtGzQ;a411eFi1;si3GTt0;iQy;cJs3YW;arme10Her0;i2M6ma,s11S;at2DVdi1lQs;ar,er;g2r,sQ;ha0s,t;k38Xs43RtQz1UM;!a,ha;!box3WNed,i1s,y;nsk;b2Ncy,d2Le2Kff2Jg2Gi2Bl1Sm1Ln19p18r0Ms0At04uYvXwWyTzQ;a,eRiQpac1EK;l1PSng;!bo,d,l3XPs,t3XX;aRd3OFe42ElQn3FPs;e,oM;!t3C1;aPd,k2EC;e2WKin,ri3JL;ch3MKdy,gUlTntSrRss,tQze;am,hi2i2;av,i;!l3RJ;!le,s,t;e9i1uP;eThSi1li1oQs2GVwi3S4;!rQ;!a3V4s;!er2AQ;!d,kQs,w3LG;eep3Z5;co00eZh3YLiYkeXl3ORo434pVsUtQ;!on,rQ;iRoQ;intestinJno3AA;c,t3W9;e2N9i1y;!arQe3DNi1l1s;!d,e;ll,t0;fi2P1;oDs;igBn;a0Ab09c08d04eXZf03g01i00lZmYnVp,rSs6tRu3X0vQy,za;ey,in;er0h;et42MiRoQy;n,w;ck,do,s414ty;!eRiQ;er,sh3Y2;r8t42H;e42Pin;a368ic;bal2WJsh;!aQl3KAoy3WJ;m37Ontu4;ie3QWunk37N;!a,eQin2n2;!nQ;!er0iQs;a0ng;ia,on;!age3W5er,leFo;ge0k;e,i1pi1s;dYesh3H8gSi,ja,nRtQyme3U1z1DF;!ry,u;icDon;!a,bTe40Pi1lSn3G4ot3AKpla3BDreBsQw3MQ;!tQ;a,er0;a3UGy;ang3XYusQ;te3KV;aRer,hQi2K4;a3ADi2IL;!lf;a2UWbTeRi1mQut;a,on,y;!b309cu31Jke2N4ly,r3KZsQ;!man2EJp2XT;iRl3VBoQ;a,n;a,t0;a05e04i03lUoTs,t,u,vRwQya;ay,ea3IF;anQest6in;!iz3YR;re,shA;!aWbla2ETeTiSoQst1BMup;!n0p3YGwQ;ay,s;c,fr3NCng,po3ERum,van2VA;on,rQy0;iQy;a,es;gh2ntQr3HW;!ly,ry;a,c3XJle3KCna;!n3GAs;!ctRh3MQnQpag3XMxG;!g,t;ic3G7us;a,e3WYl3ICnQt2JCus;!eRfQi1s;ul3XB;d,r0sQy;!v2PA;aRe,gQn6s;ed,i1le;!rP;!e3GJn3MT;l3JVta2RX;dafi,f3X3geQ;!t2RM;a,bRe,i,le0o2L9rielQy;!a,e,l3SK;aQi1y;na,r;aDTeC2f1JKi9Bjo3OMl71o3Or10uQyod3CR;c0Wd01Xe0Ug0Thr2ji0Rk0Ol0Km0In07rYsTtRzzQ;!i2y;il3O1on,urQ;e0is3B2;co,eThi2VAiRsQ;!e3Z4in1CKy;lQng,on0;ie3JDla3SB;!d,la3TUs;iXloWnUor40BrTs,tQy;heQi3RY;rQst;!an3ZLed,i1moHs;i2ow39Ey;a3VZiQ;sh2CItuH;ng,u27R;es,o3QA;ctionYdWeraVfa407gTk3HDnQyu3WD;elRiQy;e0TZly;!ed,l5s;!al,iQus;!b3ci3RV;l0ry;!amentalQeLi1rais3LSs;!is3SXly,s;!aQed,i1s;l14RrG;blCe9iQ;g3FAko,ng,o;cr3K9filSh3DTlQt6;!ba3OKeQmetJne7ti3PSy;r2YRst;!l3R0meK;asaRuQ;da,o3MYs382;ku;!an,i,ko,mo33Wo,tQwa3XH;a,su;i3QVly,u3ZG;go,hr2lQntA;!ed,i1l3YTs;hs2ZCkQ;!eLfa3YPhe3KYiQs,up,w2N1;nIr;a1De0Gi01oTuRyQ;e3GFi1lo3O5;cto3W5g13PitQmp3GJstrat136t3BX;!ca31Qf2R0i6le3LAs,y;bish2ck0do,gWhi2KOlicVmUnRot,stQth2A2wn8y,ze3LI;!bi3TIed,i2QTy;d,tQ;!aQed,i1PVliBpa3SLru246s;ge,l;!a3SJm;!ki1;!gy,s;ar0c03d01eWgUll344n36AsTtRvol39XzQ;zy;s,tQz;a3SQer382;b36Uco,k32It;!a3T6g37KhtQid;!en2YQf31F;dTndQs,za;!lQs35A;e7iQy;e0SNne7;!a,m4ri3I3;aQge0;!y0;k37Btion0II;ak0Kck3SOd0Fe01ight00llNmZnXon,quenWre0sStRuQy3DO;d309nd;!s,t3XW;cShQno;!eQly,m3JXne7w2MA;n1YQr,st;a,o3RB;cGt06H;!chQet3SQz0JA;!ie0m3JSy;en,oK;!eLs;!b02d01f00hZi1lWmUr,sSto2KPwQz0PR;aQh0LK;re,y0;!tQ;!an289oBy3;aQen;n,son2OX;ancRoQy;ad3U1;e3W7i1;a3QGo3MH;a3Q4o26A;!m4om0;ie0o,sd;!a,dTeriRo,riQ;ck,k;cQk;!k0o;ie,o,y;!ed,iQs,y;nIshE;c0Mg0Ji0Hk0Gm0EnXsWtTuRy3UOzQ;er,i2zl5;!dQg3JAleP;!s,ule2A7;!ernQrici3PG;al,iQ;tGz3FC;!er,i2;!cXdsOkRn1SKs,tQz;a,ic2ZQz;!eUfTiRlQne7s,y;in,y3JN;e,ncQ;en3U6;o3EQurt2FJ;l,ns2FA;!a2Z5eWhisUiRk,oQs;!is3X5;e,ne,sQ;!cQ;a3LFo;eQi1;!d,e0r,s;!sQ;!c3I3;eQi1pt6;!d,r0s,wo2Z4;!kinI;d,lQs2;!tG;!il3KBmentQran03B;!aQed,i1s;ry,ti6;as,kNtQ;al,ioQurC;n3QHus;a31c2Zdd2e2Yg2Wi2Vl2Pme37On2Jo26r06s02t01uSwl2EXxRyQzz3W6;er,le;es,fiHho3QPtr2SPx3DVy;ad,cXg3I9l8nUqu3KRrQst;!fo3L2ni2sStQ;eenQh3TV;!s,th;!o3MJquaH;dRtQ;!a2A8;!a12Ie1H9i1li1rGs;au2XI;hergi3OIo0;c3HEsQt28D;!e,ilQ;!iQs;s5z5;a1Ob1Kc1Hd1Ge0Yfeit0Xg0Mi3WDju3UKk0Llo2TWm0Cn09rest2EGs04tRum0wQy3UD;ard2UMh3KM;!e01hZiVnightErUs,uQwo,y;itoDnQ;aReQ;!s,te129;!t29L;an,e3OV;eSfQs,tu3NV;iQyN;ca3SVed;r,s,th;!at,coQe34Vis,right3TKwi3L8;mi1;!sc3FT;akTeeSt8DwRytQ;e,h111;e3GKo2TF;!ab3;e3HYi1;e3NTicQ;atQ;e,i3VCor;!aTeSiRs,ulaQ;!e,ic,ry,s,t3QU;ca,d2ADng;!d,rE;!lRn,tQ;!i3T9s,t3US;!dehy3NAiQly;sQtGz1L4;ed,m;!ed,i1li3H4s;a3MWeWiSoQ;!es,i1ne,tQ;!tO;ng,vQ;ab3eQi1;!nQs;!e7;!d,rWSs,tQ;!fRs,tQ;ab3i1;ul2Q5;!ed,i1u3GQ;!aSSb06c05f03g01h00ign1LRknowlZmYns3K6pl3FMrunn3QYsTtSver2JWwQx;aQoM;rn5;ellNhoWAo3JD;aw,eeThadSiRkPtQ;!a2LCe35Iry,s;ght3Q9;ow8;!ab3i1n,s;an,en,o3T2;ed3O4;a3N4e2XJ;oQr1PM;!i1ne;aQi240roK;th3QJ;a1XOlos04F;e2Q8o24L;!h38Is,y3TR;eRiQ;bl3Q7ng;!d,f2PCps,s;a3M8eSidQ;!dQs;en,i1;ar3TJs;!g3C2y0;dZk,lXn,r,s1VEtQ;!a3NMball2H0eLhVi2SFloUm4noTpSsRwQy;e3EZo3UJ;ie,tXR;a3JGri3U9;te9;ck2o3QW;i2ILo3II;!ed,har3BWiQp1UCs;nIsh3RN;!sQ;!tuQ;ff0;dTg,se3BBtQz2BI;!aQs;ineQna;!ble27W;!a,e2MPlQne7ue;eFi1y;d2S4ey,iUkTlQs35L;iRowQy;!eLi2RVs,up;c3NOes;!e,loHs3AT;a3MZes,o;b3NLe,l8st3OZ;ar3PCgQho2R6s;!ed,ie3RTy;s,tD;al,usQ;!e3S0i1s3SQ;l,m1B4;a16e0Xi0No03rl1uTyQ;b2RSer0inInn,ov2pRwQ;ay,he2YI;ap2;ctu3OHeXffWid188ke,mmox5nVorUrrGsTtQx;e0i3RJterQ;!ed,i1sQ;!hy;h3RPt2DA;!es3KHi3KY;g,k1RB;!ed,i2y;!nQ;cy,tE;at2RDck8e,g0EIki,o04p03rYssXtWuTwQyd;!cha3EBeQi1n,s;d,rQ;!ed,i1p2OXs,y;nd24VrQt3PT;!iQs;sh3RD;a3PTil3PFs36S;!i2KI;!a2LReSiQri3HIy;an,dQn0s0PO;!a,i2ST;nQs;ce,tiB;!h2GGp23Fs;dRrQzy;!b27Ued,i1s;!ed,ga1NEi1liRpQs,w2G9;laP;gh3NA;ckYeXghtWk,mVnTpRrtQt2A6;!at0TFed,i1s,y;!pQs;aKeLinI;ch3P9e,g2LTtQ;!lo3H2s0Q2;!sy;!le7s,y;r0s;!a,e1CZi1r,s;aXck0dVeTisch4OmSshSVtch2ACur39Cw,xQ;!ed,iQ;b1LWng;i2ELmi1;!c3P7i1s,tQ;!i37Ys,wo3I7;!gQ;eFi1li1;!b2EMs;b0Gc0Fg0DhWPi0Ck0Bm09n07p06rCs01tVuUvRwQx,y3NB;!ed,le3DUs;iRoQ;r22Cur30W;a,n,o,us;be395nt3OP;!bUfo2NRhe3D8lTma3LZne7s,tQul37EwaH;eQi3FZ;n8rQ;!e32Ai1s,y;a2VAin39Ey;ed,re3D3u3FV;hQk0;!ba3FLe35SiSlRpQy;oiK;ig3FH;e2KDng;!ja3FHp0LMs;!ag4de3AAge0k8nQ;eLMig4;!b15HeQing206m265;!d,n3NDs,thr2B2;!e9i1y;lNr;!el2Gg3O6po3ra23SsQ;!h3CIta3RP;c3FTk,o;!bQ;ergaICy;a2Eb29c28d24e1Yf1Wg1Qi1Oji,kr3F7l1Cn0So0Qr0CsZtVveUxRzzQ;!i1lCy;aRe2B9iQtu3CQ;n2DCt;b3t3QN;!fo3FEr0s;ch,f2TGne7s,tSzQ;!gera3FCpQr2PCwilli34Wy;at1TU;e142ing3O4;cZhUk3QPsStQ;!ed,fQicuf27Is;ig3CDul;iQu3CF;le,on;!boTeRi1RCleOOmQn34My;an,o201;d,rQs;!iAm3BZs,y;wl;!alEhQ;er,oQ;ed2;eTi2ONmSsQth;!tQ;!bo2O1ha3ITly,s;!a2P0e310i1ly,ne7s,waH;!aO4bYcraXd,fVh2E7m3BQpUsSwQ;a2EUiHoQ;od,rk0;!i3I3toQ;ne,rm;la3LWow2ro28J;ightQlGox;!er0i1;ck3M2;a2EMi3E0ra3II;na,rQ;e,ic3E5;a03ch02d00eYgerWiVk,lTnRo,sQ;!bu3KFt2;!eQi3E8s;g4y;aQey;nd,y;!c2EYng,sh0H9t38W;!ed,i1na10XprQs,t3B2;int8;!d,ly,r36YsQ;!s3MWt;!articlAer0i2NWlaQs;w,y;!e17Vl3BJ;!g3lSncQ;e2HIiQ;al3MUer0ng;!e,iQly,s;sQty,z344;eFt0;a00eZiXlUmSoRtQ;er8h36Mra3MG;!me3C8;!eFi1mQs;ak3B5;!eRiQmoHs,y;ng0p;!d,r0t2YC;al,bust12Qi,ng0pQ;!e,i1IOpo;!d,na3F6r0s,t0;!me3P9;nd,rQ;e,st;a33JgUht21EmeKs,uQ;er3AYrQ;ati054eRinQ;e0g;!d,he3AGs;i3L4y;e,i,tQ;eJZh3M5ieJYy;fUldTndSrQs3ILv2U1;ceQro,y;!ly,r,st;!i02Os;!e2ZDi1s,wo3P2;!do3GV;dlReQget1ZGo,uci2ZV;!l2FK;eQi1;!d,r0s1TL;kle2JNti4Mus;b2HYerSonac2RJrQs,u3L6;e0ilQos3HP;la3LI;!gQs;la7;ncQsco0t;!e3O9;a19brua3ISc17d11e0Yi0Wl0Nm0Ln0Iof,rXsUtSudRverQwe2H9ynm4;!ed,i028s;!al2KWed,i1s;a2HAch3MTeFi4ZtQus3H3;!er3JNucciB;s3JMtQ;!a,er3L4ivQo3M5;al0e,itG;al,di08en07g06h3CIi0XCm05n02o00rUtilRvQ;e20No2SU;e,iQ;s2ty,zQ;a3L1e2UL;aTeSiRo37LyQ;!i1m4;e3MIs;r,t8;n3I4rQ;a,i0o,s;ciQz;o3DVty;!andQs;!a,eQo;s,z;at,eVOi39W;!ie,us3G0;c,gi;e,naQ;nd3E9;cCd1ZYg,neNBtRwQ;ay,i3CA;an26Uon;a0EGiniQme,orJur;n3AUs3GE;dXiUlSonRsh31EtQ;!on,s;!i2Ps,y;!aQeLin270ow09Cs;!s,t2VS;!cQne,pe,x,z;e,iQ;a,ty;er,m4;gn3K3nQst34C;be22Js253t;b3dRlQn243s,t;!er0in29Es,y;!ba3B3er0i2L8l2T5s0SX;eQor321s,ya;!rQx;aQi3J0;lQt311;!es,iQly,s;s3K4z5;al,es,kQ;!inIle7;l3ILrVsUtQ;!herRs,urQ;e1ZMi1;!b5ed,sQwe38A;!toB;ib3IDt29D;!ed,f2P5i1le38Ls3CL;b2Vc2Id2He2Gg2Ehren2Di23k22l1Qm1Kn14qs,r0Ns0Ht05u00vUwTxSyeRzQ;eFio;!d,ed,t3GS;e3L3i1;ce2GTkAl3IAnN;e31LoQ;rRurQ;!ab3ed,i1HAs;!ab3I3eFiQs;ng,tQ;e0i3JS;c308lTnSstQx;!a,iQo,us;an,no;!a,tler2KN;kn2t1KE;aYeXhTiSma,s3CUtQuoDwa;eQiAy;n3J1r,st;gue9h,ma;eQom0;ad,rQ;!ed,ho3C6lQs;a3EDe7y;!d,f2DMh,s;h,lQss;!e,iQly;st3G5tG;ciUhionTo,tQ;!ba3DWeRiQne7s;d1VYng;d,n1Y5r,st;!a30Wed,i1s;n39Bs3EN;a05b2c04e03fet02go,ha2DXi01k00l37JmYnXoWquh36FrUsiStQuk;!ed,hQi1s;e2EIi1;!gQ;ht5;!aQel2EJis,ow;g2DVh;!oq,uk;e3I8sw1JHum;!eLhQi1K9la2P2s,yaM;a3DSou1TW;as,le;d,k,n22H;ch5;!d,s,we29S;e,icJ;d08Kge,h,w35T;a03c00dZe,faYgXnWs,tQ;aRiBoQ;m3CLz3IQ;!il,sQ;iRtQy;ic32E;a,es,z3I6;ed,i2CQy;!l5s;n,re;an2PWor;iQy;eQf2CJ;!d,r,s3KO;ticQ;!al,i3I8s;eFiQo3AT;lQne,sh5;iQle,y;aQes;!l,rQ;!i3DC;af2PRcoZkYlTsQt1WKwe3CO;eRiQoBta3L1;fQTty;!ho12Uly,t2OR;!acSba398en,iRoQs,uj3KT;n,pi4ut,w0;b3nI;iQy;es,oD;!lPP;!nQ;!e3IEs;e2C5i28M;i2DPlXnVrSsJtQzJ;!hQ;!f2F2le7s;!ban1S8c1PXe3IVfRgr2DSiAly,moKne7pl34Qs,vi28Ww32CyQ;!la3CIta3E4;ax,ie38I;!tQ;!e21Li1ly,s;!ed,i2I6sQu35O;!a383;he27I;gQin,ot,s;ot0y;cAr3JA;di383e9i1o,s;a3F2eYiVsimi3DTtRultQ;a2THiAy;!iSoQs,u3G3;!rQ;!ed,i2KHs,y;on391t1TU;al0e,lQng0;e,itQ;at3FKiAy;!bo2A4dSlRs,tQ;!ed,ioDs;e7i2TH;!o25U;er,iUle9riRuQ;lo39H;!cQz2RV;!atQe,s;e9i3J0o327;an,en39No2YFus;aGIbGDcFRdF6eF2fEQgEGhhh,iE6jE4k5lCMmAWn82on81p79qu6Wr67s5Ct4Xu4Iv3Nw3Lx01ySzQ;eQra;ki2OEqui2OE;al,eRrQ;e,ie;bVd,f2ATgla3BXi1lSsRwQ;e33Vitne3BW;!ig34OoH;aRet,iQ;d0n2;sh3BT;all2CGr24N;a31c2Ee26f3HVh1Zi1Vl34To1Op0Hquisi37Ysangui0OPtSuQx6;ber0X2de9ltQ;!aKs;aKe09in06o03rQ;aTemSiRove1LQuQ;de2TFsi6;ca3D0ns3D2;e3G0i3BO;!cVdit2YWlegJmarUn0BYordinaTpol3IGs,terrRvaganQ;ce,tEza0;estri1BGiQ;to2SJ;iHr086;itJ;tRurrQ;ic1B8;!ed,i3IAor,s;l0VrtQ;!ed,iQ;ng,on1EG;ctRguishQ;!eLi1meK;!i3GQ;nRrQ;i30Emin35Mn11R;dRsiQt0ua2C2;b3on0veE;!ab3eLi0S1s;a0Re08ir07lZoUrRuQ;l3Hn3FU;essQopri2XJ;!e3GNiQly,w32O;ng,on3FHv35G;!nentTrtSsQu22X;!e9iQu33O;ng,ti3GD;!ab3eLi1s;!i3E9s;aWe396icVoQ;dCitSrRsiQ;on0ve3F3;at3C7e3EBi1;!aQed,i3E9s;b3ti2ZT;at3D2itE;in2P4nat3C3;a3EJe9i1y;ct06di02l01nXrQ;iRtQ;!i3EDly,s;enTmentQ;!aQe01Ji1s;lQti6;!i3FRly;cCtiJ;dSsQ;e0iQ;ng,veE;!ab3ed,iNF;!l3GL;a,en0JKtQ;eFiQ;ng,oQ;nNGusE;!aQed,i1s;n3E8ti3FJ;nQtria1BZ;d2OIsQ;e0iQys;onQve;!a3BFis3E8s;dDge2THnTrRskelQt3A2;et6;b0M5cisQ;e,m,t;!erQ;atQ;e9i6;g0H8le9stQt8;!eQi1s;d,nQ;ce,t4K;aTiQort0LNum39F;bitQlar0S;!ed,iQor0s;ng,on3EU;l2AUustQ;!ed,iQs;ng,on,veE;cUmpRrQs,t2;cis026t0V9;lQt355;ar2LFifQ;ie3EXyN;!r1V4s,utQ;ab3e9iQor0;ng,on231ve0;a0Be04h03i00lUoTrRuQ;lpaW5r0FYsWW;e2NPuciaQ;ti2W3;mmunic3BGri0D7;aTuQ;dCsiQ;onMBvQ;e3DAi3BT;im29HlmQma3D0;l1s;s3FLtQ;ab3eQi1;!dEmeKs;ang10Zequ2;ed2FNlSptRrpt2OWssQ;!es,i2CC;!ed,iBSs;!lRsQ;!i2RR;eQi1;d,n0MK;lib287vat2L3;cVggeratUlt3EWmTspQ;erQ;atQ;ed,i3F7;!in0M8p39Is;e2XXi3F9;erb3BAtQ;!ed,i1ly,s;an,eQi2DK;ll,rs,s;a0DeWiSoQra;ca2XCkClQs;utiOQvC;an,ctQZdenRe,lQn0BCscera2DCta;!d0UZly,ne7s;cCtQ;!ia9Ely;l05m04n00rRyQ;!bo2WYoBt03;!eXgVlUmoHs,tTwo359yQ;!bo2WWd2ZNm4oBpo2XPtQw1TF;hQi350;!i2D6;!hi1on;as28Ry;lQreXE;adA;st,tt;!hand1Z3in215ly,s,tQ;!f26Hs,uaQ;lQte;!itGly;hi1;!yn3EK;cVdUlSnQp0BSris2IXsi2WQ;!d2e0EAgeliQs2DM;cJn36Ds2P2z2WD;!uQ;at0M5;e22Ei1;!u3E8;c02gZlYnXphWrRstQthan2RP;a3DOon;as2R9e31Ogh,oQydi3DN;!doSpRs,viQ;si6;a,e26I;ll2Z2;em2RXori31Fr241;i3DHuch0;er,o0AZ;enQh;!e,iQ;a,cs,e,o;alyptDha2NXlidQ;!e4;c03ern02hTiSna,oRrusc4suE5tQudAy2D;a,oHy;mida388n;enBo0APqu26L;anXeViUnRos,ylQ;!eB;icRoQ;c96g14Y;!al3A1i39M;c37Iop2QN;l,rQ;!eJn31Us;!e,ol;alEi39H;ete3BIh1PW;au,c0Eha,kimo0me0Do0Bp03quiHs00tQzt2;aXeVh2imaUoTrRuarQ;da,iAy;aQel3A6ogW1;da,ng5;!n2QCpp2IOy;b3t19U;!b4em38UlQr0s,vHS;a,l356;!bQs,te0;lish38Froo1LG;ay3BLeQie;nQs,x;!ce0ti0WR;aWeUhe1VEiSlana352n,oRrQy;es18Pit;!si2HGusC;noQona36J;sa,za;ci39Gns6ranQ;to,za;da,n1Q3r1M0;pQt2UB;hagD;!ral374;aSheRoQr313ud39B;b2XOrt8;r,w39T;laRpQrg28V;a383eQLi1;de,n371t38S;a0Ce09go07i03k2XLl02miBn00oYrTsRuQwP;dit37Ept31H;a29MkiBtwQ;hi3;aRed,i1oQr,s;l,n0DIr0;nRtQ;a,ic2ET;d0t;dCge2P1l,sX7ticQ;!a,i39Y;a,estQie,st;!iBo;i2VQynB;cSe,kQn2YLs;!a,o,sQ;en,s6;!a,h,kOWss6;!nQ;om35C;ctQn,s,z;!ed,iQor,s,us;le,ng,on0;dic3BRsQ;!ab3e38Mi1mD;aWestr2OXiQ;lib05GnUpTt0X3vQ;alenRocaQ;l,ti6;c37Pt398;!me3C1p3B8s;e,ox;lSnimi37OtQ;e9i3BNorQ;!iJ;!iQly,s;ty,zQ;a38Re1DYi1;c27Qh0DiToSpRsQ;il6o2CXteP;es,s;ch310xy;c07d01l00nZpYsVtQ;aTheSomQ;e,iQ;ze9;lia1R9t0;ph;copal2D2od119tQ;eQle;mol082;en,ha2U0;eph02io37I;ep7Uog2V8;eQurJ;miQrm34F;c0olQ;ogQ;iQy;cJst;!eQs,ure4;nt2;eRraQ;im,m;dQm1R5;riB;ni,s;a2Gc1Xd1Ne1Jf1Fg18ha2M1i17jo15l13m11n10o0Zquir0Yr0Rs0Ot00uZvRzQ;o,y0R3;elopWiQoy0y;ab3e39Eo30WronSsQ;agCiQ;on8;mentQs;!alQs;!is33Nly;!e9i1s;mer2Y9nKX;a0Aer08h04i01oYrRwQ;in5;aTeRiAo2DVu1NOyQ;!w2V4;!atC4e0nchQpreneurMYz;!e391meK;i1Q7nRpQ;!meKp5;ce9t0;mQura33Q;b5olQ;og1Q0;cKCreRtQ;iAl30Cy;!ly,ty;raSusQ;eFiasQ;m0tL0;ll5;!ed,i1pris24Ds,tainQ;!eLi1me3A5s;il8nglQ;eQi1;d,me3A2;coRemb33YhriOIi0W3lave2HBnaHuQ;e9i1rC;nc5;aViToQ;lQn;!lQ;!e24Wi1meKs;cQg2VCq2TO;hL4o;geFptIO;e1BVi2AGy;ch,rm2KHs,u3A9;is,ob2KVui;eQi35D;sh5;arg2CLiQ;ghten2G5st30RvO;in36EyQ;!ab3ed,i1meKs;d,g0UH;ag2ZHeUineTlSrQulf36B;avQo2J;eFi27I;a31Pish2SY;!er8s;lQnd2IA;!ma1WFs;eeSorcQ;eQi1;!ab34Qd,meKr0s;bl5;mSrgQ;etAMiQon,y;es,z20W;a0iAy;ang0SeVga2YYiUle2UXoRp1DTs,urQ;an386e9i1;!crinRrQw05;a,ph1MMs2YP;e,ol2L5;co235f,ng0;aQd,m333r1AQ;rRvoQ;r8ur0;!i1meK;a07ephal06h04i03l01oYrVumbTyclopQ;aRediQ;a0c;ed34U;er33ZrQ;an348;oachRuQypt0NC;st5;!ed,i1me38K;d20Bmpa16Bre0uQ;nt1KEragQ;e2OCi2OB;a2ZOosQ;eFi1u2U0;no,rcl35G;antQila0NU;!eFi1meKre7;it31E;mp2FPpsul341seF;blRct388mQ;el33Jor5;e2XSi1;a1Ab0Qc2FYer0Mi0Dm0Ao07pRr15Kts,ulQ;at311si6;a03er2Q5hYirXloyVoTresStQ;iQyN;e36Jne7ve;a,s;ri2MSwQ;er2Z5;!ab3eQi1meKs;d,e0r0s;e0ic345;aQyse2U7;sQt9B;es,iQ;sQzC;!eF;nad2Z3thQ;et31Wi2H5y;ry,tionQ;!alQle7s;!i34Zly;aReQi37Dy0;liBri2QSt37B;!lPnu0Q;grWlUneTrSssRtQ;!s,tIM;arGi35R;!a127i;m,n33V;!e,iQy;a1Y9e,o;aQe;nt0t36U;a2STgQitDs6y;eQi1;!d,nQs;c0E0t;a05e00iZlYoVrQ;acCoiSyQ;!oQ;!n319s;dQl32C;er7M;d31ZlQss32A;dQi34B;en328;az34Rem21L;tt1QW;dTlliSr0zzlQ;eQi1;d,meKr;sh2DB;!d35Xs;lm35Wnk2E4rQssGttl5;aRcade2L1go1MXk23RrassQ;!e354i2MHme36N;ss35T;cTil8nRsQ;cul03J;at2U3cip31RuQ;el2K5;i03Gs;a16b15d11e0Ify,g0Hi08k07l01m00oZrYsWt6uUvSwo2WJysQ;e,iQ;an,um;es,iQ;n,ra,s36T;cid0WHdCsiQ;ve219;a,be2VGeQie,pe2VG;!w1KI;ic,oy;cu333d35Ii32Vng035p2DFqu0GF;er,o1Vs;a,eUiRm4o,sQy2S8;!be1LEw141;!e,ngRot35TpQs2YB;se,t2F5;!h2JWt6;!n,r2N2;a,e,i321s;aXcFBf,gWj366min311nVo35OsStRx35UyaWWzaQ;!beth178;e0is330;aQe2WFha,sa;!betQ;h,ta;!a,or;ib318;!ne,s;ar,in;a07ctTg323kt33EmentRn2H9ono33Epha35NvQ;at11Wen0N;!aQs;l,ry;!ab3ed,iKAor01rQs;a,iXoQ;!cVde0lyUmTnSphorRsQ;ho2U4t24M;es2YI;!ic2UHs;agneti2P1echan2EH;s2YFtA;hem2EFut2LE;cQfBH;!alEiQs;an0ty;aQs;l,te;n2H3z2PT;eRoQr1XC;n,ra2LJ;rQst;!ly,m4s;a,e,ow2DZ;bor303iBm,n,p2B8stic1VSt308;acul038ectQ;!ed,i6or;chYff29ZghtUji,ko,leOnSr238sQth2;enQu1Q5;!h1OHs1MP;ar,e,sQ;!teP;!eRfo2T3h0ieQs,y;s,th;enQ;!th;ma1RR;aYbe2LWgXil,lWoSreRyptQ;!i24Mo018;g07Dss;cRi32QmQn,s,ti1G;ani2CH;enQ;tr2YN;an1VTee;eOBhe274i1m4n14Hpla34Es1DBy;d,litar20Un;en1Y8fQ;aZeViRlue34BortQro2KusiKBy;!le2Q5s;!cQe,gy,ng;ac2XFiQ;enQ;cGtE;ctRmi1K6n1Y1rvQ;es2VD;!ed,iQs,ua2Y8;ng,ve31L;ci1;j1RHls,n0YYrRva,yoQ;!re;iQo;e,ly;am,d08e06g04iXmVna,oUs6uRvaMwQ;a2ROin2IS;ard2UFcatQ;e9iQor0;ng,on2XE;ar2K7uaM;onQu27A;d0t6;b2XLct0e,fVnTs6tQ;!ab3ed,h,i33CorQs;!ialQs1ZX;!iz32Sly,s;a,bQ;ur342;ic0XMyi1;ar18OeQi1waHy;!d,hi2VGs,wi305;lQma,n;s1L9wei7;a,iQy;e0n273;c06h03k02l01oSstaRtopla30OuQze2PN;ad2F8men2CE;sy,t2XG;lVmmer32DnRsyQ;stem0;!omQ;eRiQy;c2WQes,st0z2KS;tr2W3;e,ogQ;iQy;c2Z9st;a32We2CMipsC;ha2K8l32A;el318id2PNoQ;!e31Di1lQs;ls,s;entricSlesQ;!iaQ;st2BW;!iQs;tiA;ay,bTeRoQru,ulli2ZG;la,ny,ok0;nQrt;!ez2;a,ed,i1s;ch0Pd0XIg0Ol0Nm0Mr05sVtTveQ;!sQ;!dropQ;!pi1;eQinIon,s;n,r2RZ;eYiXon,tSyQ;!gQ;oi1;!b0X5eRm4on,si2U1wQ;aMo2SD;nRrQ;!ly,n1AV;de2KZ;e1UZly,ng;!d,l,meKs;dr21Ded,f1TPha2JEl05ma04n01pZri207s1HLthRwQ;ig;!b0WWenWfVlUmSqua24DsRwoQy;rm0;!ha16N;en,oQ;vi1;i200y;or311;waH;!ho2R2ie30ZluQ;gs;!eRi1ZVsQ;!h17M;d,r0st2Z9;rk8;!e,ie1UHoECs,y;es,on;i1ly;er2Z4leOP;!o2I8;aNRddd,eEYhETi72j6Zmitr2KMo3Fr1Pu07v06wXyQ;ad,eVinIke0l17NnaSsQ;eQfunc07Fle2C6on,trop30S;nte2VS;mQstG;iQo;c2QGsm,te;d,i1r,s;aUeRiQy2;g2MSndlC;eb,lQ;lQt;!er0i1ZAs;rQyB;fQvA;!ed,iQs;ng,sm;ds,or2EX;a14b10c0Ud0Se0Qf0Ng0Mk0Ll0Im0En05opo2X5p02que01rXsUtRvQ;al1TXet;ch164iRtQy;!a,on;es,f23C;hRk2HZseld1J7tQ;!bPe2BEinIs,y;as4yaK;aRb4e7ga,h2EPiQkPni1st,um,yodh4;an,ng;!b07RnQs,ti2Z2;!d,go,t;!sB;e1SHi1lQoKre30G;ex,icQ;at2V1it0I1;bXcWdeVe0gUh2EHkSlRnQp2ZWs1ZHya;!e,i1o;ap,op;!ed,iQs;nIrk;!e2YR;e,r;!an,e;ar,ro1QU;a0bRmGoKpQ;!e2AUi1li1YEs1P6ty,y;!a7be1OPe1T3fou2XPi1ledoHo,waQ;it2;cRlQu2PFy;!e12i1ne7;e,in1X4y;at,e0;an,ga05To24K;fQresB;!eQle,y;l,r;lQs,t0;!i1li1s;a,dy,eQge6l2LQs,u;!k,s;atUe,hSkRobu,tQ;!i3s;!ed,i1RHli1XXs,u2WDy;a1LXeQy;mPss;i,s;aSbRc2YSenQioDlPo2STrovn1LX;ko;ed,i1RB;i,ku;lQn2ZEr2TR;!iQ;sm,ty;a0Ue0Gi07o00uRyQ;dOer0i1ne7wa2RI;bbi1dge1E8gUid0mSnkQry,s0HBt0QP;!a2N9eQs;n2WYr;!be2NOmQro2REs0TP;eLi1o2RO;!gRsQ;!to2KW;ed,iQ;e,ng,st;id0ll,meda2TKnVoTpRss,ug2N4ve2EQwQ;n8s0CA;!le2TWo23MpQs2G9;e29Oin1LD;lNpQ;!ed,i1y;a,e9i1;bXeWftVll1XBnTpSsco2R1vQzzl2GP;eQinI;!l,n,r0s,w2H3;!p2Y5s;a,kQ;!ab3er0inIs,w1MJ;!eLi1s,wo2OY;d,r,s2YL;blCs;aYdXg1REiWnVsSw,xRyQ;er,fD;el,l2;dOsQ;!a2RYe2CTiQm10Ly;er,ng0;!ch2VG;!d23O;d,gC;dRmQry;!bo2MSeLinIla2QTs,t,y,z;!ed,f20Wi1lRnoQs;ug2JY;oc16F;b0c07d2RHft06g03in02ke0mYnk,peWstVt,uUwRx,yt6zQ;en,i;!bRd134er0i1WFl,n,sQ;!t1CX;a2M8r1QI;ght237pa1S5;ic20D;!d,rQs;!iAy;!aQ;!fRmiBs,tiQ;c2N6st,z2QR;ev2;!a2RBed,i1pi1Y3s;!a2K4g2X7n2M0oQs;!nQon0;!flGs,zoM;!eDCi1sSCy;h9FoRulaQ;!u2VM;!ni4;a38b35c2Td2Qe2Off,g2Jh2Ii2Hjo,k2Gl2Am1Wn1Jo17p14r0Rs0Lt0Ju07ve06wTySzQ;eQi1y;!d,n0r;le,ou;ag2d2ESel0li1nQry,si1;!be2LYca2VVeRJfa2POg00hZi1load250pYriXsUtSwQy;aQi2PY;rd2US;i2NHo0IHrQu0XM;e2PVo1J1;!iRtQwi1;ai2GAre2BE;de0z2UJ;g2IYv2;lay8o1PW;ea107i2PE;radC;!r,s,tail8;bVcTd2L3gQla,r,s2UD;!al,hRie,lQ;as0;!b1VKerty,n21Oty;e2WYheQ;!b7Py;lStQ;!eH1fQi1le7s;iHul;eQi1oo2T5y;!d,sQtr24T;!pe2AV;e0h,i1s,tQ;ed,i1OLoHy;aUe9h,i1sTtQ;!oQ;eQyeQ;vs1LU;!i2SN;!ge;a01c00eZfm4iYk21PmUn,otSriRsQtmu2P2y;al,eM0;e,t;a,hQ;ea,y;!aRer,iQou2TBs;torG;mQn2TK;mu;!an,n2QKs,t2SS;!au,en,n,y;as,he0H8;!do,em6n;aRe0SZi1pQ;elga15Nl2;miB;b0R9d00f2FTg2VNh4kZlXmVn,rQzy;!be1KPkn17DmSna2V4sQw2EE;!tQ;ep0;aQen;n,t0;!ed,i1sQ;!d2GM;ey,iQ;tt3;ie,u;i2S4l1Q7y;aXca0GRde,eWgUi,kTnRoQs,t,ut0;!h2FSr0v4;!a,eQi1NKy;!d,l2S0r;!ey0;!j1ZQsQ;!hi;!r,y;!g2V2h2FLlTtQ;eRiQo;!ng,on0;!d,ll2GLs;!d85;a199eZiQo;ci3nQ;aVeUgSiQo0WCus;!cQk,on,q2FD;!a2JNk;o,uQ;ez;!e1A1;!n2UEtQ;e9i2UYrDZ;!i2ni2RAsQ;!ticQ;!aQi2QZs;l2RDt5;an,by,ce,dru2NAe9iUlTm4oRphQt;!in0;mQrA;itA;!ar0ed,h1IViAop,s,y;ng,tt3;ey,go,t270;ly,n1H9;er2QP;e,f2GGgSh1IQmaQs;!tiQ;c1X2sm;!eQi12RoBy;dEtt;r0sQ;!n2UKrt;d0gQo,s6;eQi1y;!ba2MQd,r0s;i3kXs,tTuQ;dra2H0mentQ;!aQed,i1s;rGti6;orRrinQ;aZXe0;!aQed,i1s;l,te0;!eSi1lRs,worQyaM;ke2D8;an22G;d,r0t0;bReQie,l2s6;rm4y;in,s,y;b3kA;aRiQ;bou26Pnn;n1Z3q;a6Sb6Rc6Ed6Be69ff61g5Sj6ke0l5Lm5An53o4Zp4Vr4Ns0Lt0Jureti1TPvUwaTxRya,zzQ;i2GZyN;iQon;e22t;li,n;a0DeYiRorcQulg2R3vESx,ya;e9Di1;!dUnSsQ;iQor;b3on2J7ve1OW;a2QTeQg,iU7;!d,ly;eQi1;!d,nd0r0s;!d,rTsQ;!tQ;!ed,iQmeKs;ng,tu2FA;!gXsStQ;!ed,iQs;men1XSng;!e,iQ;fRonQty;!a2NVs;iQyN;ca2QEed;eQi1;!d,nQs;ce0t;!n,s,t0DQ;a,ch2RSh05Ko,tQ;e,iAo,y;a3Db38c2Eda0FRe27f25g20h1Si1Kj1Ik1Hl1Dm1Aney19o14p0Mqu0Kr0Es04tRuQ;ni6seF;!aZeYiUort2HVrQurb248;aSe0QZiQust1KR;butQct0;ab3e9iQDor0;ct2HRug2EM;llSnQ;ctQguish1ZA;!i1R2ly;!atXVe0XAi1s;mp2nd5;l,nRsteQ;!f1KI;cCtE;!atisfYeViToQuad2PX;ciatRlQn06W;ut2NDvC;e,i2K8;de2SRmilQng,p2GA;ar1JJ;ct07Fd,min2S8nRrQ;ta2PLvi2RT;si6t86;ac2PJi5;ae25SeRo1S7uptQ;!ed,i2N0or,s;ga2GpRspectQ;!ed,f1UXi1;a2SEutQ;ab3e;alif039iQ;etN;a01eXirAMlUosRroQutC;port02ve2EF;aRe1K4iQseL1;ng,ti2PY;b3l0;aReasQ;eFuH;c2I6y8;lZ2nsRrsQ;al,eFi2RT;aQe2OIi1;b3ry,ti6;rTssRtQ;chJB;ioQ;na2GV;aQitG;g1Z5te;beTrQwn2N6;derRganiz1QGieQ;nt2ME;!ed,ly,s;di27By8;!la2K1;aRember1Y9issQouK;!al0e2Q5i2O2;lEn1BFy20M;ikCoQ;cRdg2ONyalQ;!ty;atWI;!et0MAle7s;oiQuRG;nt5;llusionWnQ;cUfSgenRherit2MPteQvest1YT;gr2EWrest2MO;uoD;ectQorma2O8;!a2RAed;en2IGlin1PV;!ed,meK;!a,eVi1onRwaQ;sh2CVt2;est288oQ;rRurQ;!ab3ed;!a265ed;arten2Q8d,r,s,vQ;el5;orge1Y9rRuQ;isCst1QO;acQuntle19D;eQi1;!d,f1IG;av22SigQ;ur5;aVmbSnQ;chant1QYfranchise1Y1gQtang1BJ;ag1XZ;aRoQ;di5w1VR;rk2LY;se9;!a0Iern0Hh0Gipl0Dl0Bo00rUs,uQ;rSsQ;!sQ;!an2L8e2OZi2Q7;si2HX;eRiminatQ;e9i2Q0o2KR;dSetEpancGtQ;eEiQ;on9L;it8;!g06GlorZmfo27KnUrdTs,theq2A4uRverQ;!ab3e20Si1QYs,y;nt1OIrQ;agYDse0tJC;!aK;cer1JVneTtQ;e20YinuQ;aQe9i1ZCoD;n2P7ti6;ct04R;!a2MX;aim1O9osQ;e9i1u2BJ;e0inQ;arQe9i1;ia2LYy;argC;!ab3ed,iZKmeK;rd8;aTelieSursQ;eQi1;!d,me2PP;f,v27C;nd2MHrr5;!b02dvantage01ff00gZllowYppWrUsQvow1YL;sRtQ;er0ro2FJ;embl2MLoQ;cia1NI;mQr29Z;!a1WVed,i1;ear1WQointQrov1SJ;!ed,i258me2PEs;!an2OIed,i1s;gregMBree2C7;ect2KK;!d,oDs;il20SlCu1VI;ac,eSge,k0tQ;!bQie16OyN;ag0;!ctQ;!ed,iRly,ne7orQs;!a2J8i2HOs1LEy;ng,onQve0;!al1FUle7s;es1T6hth0LQlomaRp05TsQ;!h1CGti2DN;!cy,s,tQ;!ic1R2s;ces0V1de0go,nSrRs23TxiQ;de,n;!a2B6;!ne,ysD;aVeUgTi1k25VnRoQt;!saRTz05F;erQi1;!s,ti2EL;!b2CYe1Z7hy,i1le,o,s,us,y;!d,r085s2P4;!h,na2DTr0;aZeXiRly,mQple9s,w2DE;eLi1;nStrQ;iQy;!os,s;iQu26E;shQ;!e2MVi1meK;!nsionQs;!al1F5s;!gg1WPs;aUbe25Kdo0eSiRlQut2BU;!aMer,i0XJon,y;gYHp,thi28K;mQttWY;ma0;pQt248urent2H8w28T;idL3;by,estWgUitTniRoxPressQs;!ed,i2NR;f8StQ;arGy;!alEiz22Hs;er0iQle,s,y;nIty;!ed,iQs;b3ng,on,ve;!erSicultRrac2KRs,usQ;e23Bi2NE;!iAly,y;!eQi1s;d,nQ;ce0tQ;!iaQly;l0t2GJ;d,go,ha2BFm,n,p1NOsBCtQu;!a2HXer0i1rich03s,z;a1X7dQem,i15Nn2NBo,rt,st,y2BC;lQy;e,i1y;apr1VVe01h00kVtQ;aRe,ionQum;!arG;!p1XWtQ;e9i2MYorQ;!iJs1JN;!eShe1Q1iQs2FKw28Py;e,nQ;g,s6;!ns1ORrQy;!s6;!o1U8;!d,y;b3s;b0Bcr0Ag06l02mZnXpVrTsStriRzQ;!ep20Y;be0;!po2KR;iArhQy;ea,oea;er0hraQ;gm;!a,eQne;!ti1MD;etQo1QD;er0rQ;ical2IV;!eRi1l2LXogQs,up,ys2FT;!ue0;ctQd,r;!ic1LVs;nosSon060ramQ;!mQs;at2GRi1;e9i1ZXt2FJ;it1VM;etQlo,ol1VL;es,ic0;aRill6o1YWritirasQ;ht2K5;bi,ka,nRrQ;am,ma;a,i,rU;a7Yb7Mc6Id6Ee6Af57g53h51i50j4Yk4Xl47m3Jn33o32p2Fr21s16t0Ku0FvSwQxter1D3;ar,b0QAey,iQy;ng,tt;a08d2DKe02iYlPoRrQ;aj;!id,lVnUre,tRuQ;r8tE;eRiQ;ng,on1LA;!d,e0s;!i4s145;u2IWv2J1;!aSce0lQn2LQoDsC;!ed,iQle,s;shE;nt0t2H0;lRrQ;a14Qea14Q;!opQ;!ab3eRi1mQs;ent2FC;!d,meKr0;!ki,lSstatQ;eFiQ;ngEon;os,u1HY;ce0n4s,tQx;erRschQ;!e,la2DT;i25ToQ;no1SJ;a07eXhVoUrQ;actSiQo18V;mQtD;ent1KK;!ed,i1o243s;nNDur0x;kl1BQroQ;neF;ctXnt2FRrQstJG;!ge2L6iI7minSrQs;eQi1;d,n2CN;aRe23GiQ;ng,s058;b3nt0tQ;e,i2IO;!ab3ed,iQor0s;ng,on0ve0;chSiQ;l8nQ;!e1RHi1meK;!ab3e2JBmeK;a0Jc0Ddemo27Je09i04k03mo2D4o02pVsUtQul0N;abil1Z9iRrQ;oy1J1uctOD;nQtut2FA;a2HHed,iAy;e25Xie,l1B5;aVerSiRoQ;ndR7t23H;c0ZAse9te;aQea13H;do,tQ;eEi6;ir2HBt23P;lIQto;!s,t1E2;!ccHDgnSrQst;ab2FVeQi1oD;!d,e,s;!at2FGeQi1s;d,es,r0;cr2JSgreg1ZLnsiti1TPrQ;et,tRvQ;e22Ki1;!eLi2JRs;artAenSriQ;b0PptQ;i28Uor0;dQt;!a2K1eQi1s;d,nt0;i,liPN;a02by01eZiVmTn,ogaSrQs,vi284;iQy;ck,eH;to2E7;aQot;l,t1OX;d2GUsiSvQ;atiQe9i1;on0ve0;on,veE;!gulNNk,lictQ;!i6s;!s11R;il2ARng5;art0Aend06i286l03o00p,rSt035utQ;ed,iQy;es,zeF;avWeQiv092;cTdSssQ;!a2JFe2HWiQ;ngEon0ve;at1KF;at2IWiaQ;b3t26V;ed,i2EZ;rt2DUsQt0;eFitQ;!a2DJed,i2IWor28Rs;et26QoQ;rQy1YF;ab3e9i1;!aSeQi1s;d,nQ;cPVt0;b2EMn2I0;!ed,i1mQs,u24K;ent288;doraKk,n,xyribonucle2D4;a,by,g04h1WSi01ma2J4nZoWsUtSunRv2yNzQ;el,il;cia2FR;!al,eFiQon,s,u24E;ng,st19G;!eQha,itGu141;!ly,r;minatRtCuQ;e1Q3ncC;eFi2GYor;a,iQy;ng,s2AU;aRce,e2H1gr08Qm,s2ICzQ;!e2EM;bi2E6l0;!ue;a09e05i03oTpsSurRystiQ;fy;!e,r5;ey,t2;!bili19UcraWgraphVliUnQraliz2FEs,t2HW;!iSsQ;!traQ;bl2DWtPR;c,z1WQ;sh2F1ti2GI;er0ic0y;cGtQ;!iQs;c1K8zSE;!lQse;itarP6le;anSntRrQtri21I;it0ol;ed,ia;!ed,i1o1MKs;gogSnd8rQ;cQe2G2;a2ERo;ue18Hy;a0Cbe1Z2e09f08ga1Y8hi,iUko,l1LLm22GoSphRta0uQvC;ca,d2ETgeFsiO2xe;!i27Z;n,reQs;an,s;!a,berat02cYghtXl2HWmWnUriTsSverQ;!aQeLi1IBs,y;b2BIn2GQ;h,t2EE;oDum;da,eQquenJ3;!at251;it5;!ed,f1JUi1s;aQio27D;cGteQ;!ly,ssQ;en0;e1Y7i2BQ;i248t;ct0VXg2CCnn,tQu1QO;eQi2GW;!d,r0R9s;croRnQwaHy8;c0Y0ey,o;ix;e,k2;a,eQ;ct5;anei2EQdHgn2CAm2D9on,rdHtG;umanQydr2C6;izi1;as,eneSrQ;aQee0;!dKY;rat1N8;a0Nc6e0Ai02lXorUrRtEuQyN;n2FGs2DT;aRoQ;stN;ud2DIy;esRmQ;!a2DJed,itG;ta2DI;atRectQow10L;!ed,i2G4or0s;eFiQor;ng,onQ;!a2AS;an2CWbWciVe2EWleFnQ;aTe9iQ;ng,tQ;eEiQ;on25LveE;b3te2CE;enGNt0;!rillat1S6;at00cYnTrQ;!enRmeKrQs;al,ed,i1;ce,tiJ;ceTdSsQ;eSiQ;b3ve2DK;!a2G0eLi1s;!le7s;a2A3tQ;!ed,i2ADor0s;!ed,iQs;ng,st;c2CWmSultQ;!eQi1s;d,rs;atQeFi1;i6o2A2;dSj207ks,m8n1UMpRrQs,ts;!e,i1;!a1Z2e0JAly,u,w13A;!ee,s;e,ic234ucQ;eFtQ;!ed,iQs;bMIng,on0ve;a0Oe0Ii0Bk0Al06oUrQ;eSie2DXyQ;!i1ptQ;!ed,i6;asCe9meKp12U;!d28SmVnSrQupl2CEy0;!atQoDum;eFi29Qor0;structUtQ;amQr0S6;in1UJ;missiUpQ;!osRressQ;!i6;e9iQ;ng,ti6;on2BV;aQinC;n,rRssifQ;i5y;at298e9i1;!aMe1PFi1s;b05RdUmaTpherSsiQ;onQve2CD;!ma0JGs;!ab3ed,i1;l0t2EB;eQi1;!dEr,s;a1KXdeKiUler2E7mb2nRptiQ;c2CYon0veE;cy,tQ;!ly,rQ;al1T1;t163v16B;deTfRl0mp29Tnt0WLpit1TUtQy8;hl6ur;!feQ;inBE;!n2DEs;aYb09Ben06LiXoWrUs,tTuQ;gRnk2B6s0SOtQ;!an28Ged,i1s;!g2DH;!or0s;a,iQ;ef2B1s;na2E3ra2EN;an,lita17Vt29G;c281s5tRucheQ;d,ry;ab3e15Vi1;c08d01fZki2A4lVnUq,rTs,thQuv126;!b5ly,sQtr0E9;!tQ;ro0Z8;!bo1BGe16Qi15Kly,s,th,y;!dr25Ke,na,o,s;!erSiRs,tQ;!i23Q;n101o;!s1K4;!eQne7;ni1;!be0NWeVhe1Z3lRwQ;e1Z5o23R;iRoQy;ck1ML;e16EneQ;!s0;nNr;!on0tiv2D1;an,b1Yc1Wd1Ue1Tf1Rg1Ph1Oi1Lk1Kl1Gm16n0Tow,p0Sr09s06t03u00vWwUyRzQ;eFzl2AI;a16Cbre1RAcaHdream16TlRna,s,tQ;i23Aon1SB;ig219o1;dl1V0es,g0ki29FnQs6;!ed,i14Ys;eRiQos,ros,y;dQVe0na,s25I;!nQy;po1UH;b2gRntQphP;ed,i1le7;ht28Y;aReQi1o,s1GZum;!d,liBs;!ba0LGk;hQs,tard294;!a,b0S6e0X3iQra226wo232;e24Yng;a,by,cy,e05f15Ei04j03k02lZnXpa,rVtTwQyl,z1KW;inQyn;!iQ;an,sm;!ed,h,i1moQs;or,u21Z;ah,eQin,ow,yl;l15Nn;!de2AWeQl1YH;d0Jll;!a,eBinQ;!gQ;!s,t6;!e0G7ie0ly,ne7o,ro1OBse213;ee1NP;!a1YMen,nIo,us;!dRn,sQ;!ay;!ev2B9;h22Np2;a,b1ULc00dYe0f0ABgWiUkTnSo,s24MtRu1BZvQy,zig0UG;e1V4il3;e0on;er,i,o,y;!e,o;!ca,elQkOl1X5sh;!a,e,l23Vs;!aioh,erQlC;!o224s;eQi,ru2CIy;li2AEr;eQinI;!d,ny,r0s;aYe0iXmWnUoTpRsQ;!el0;!eQi1ne7;d,n28Rr;clAd1WKn;!a22CedQi0U1;!e2A1;!eFi0TZ;an22Den,ni;gCn,r,scD;ai,eSi1QNlQmati4rymp3t6y;as,iQy;an2ATed;!k0s,y;a29Ne,in,o259;go1PYlGmRn27Aquiri0rGsQ;!iAu0WUy;l2on,yo;ak,l1B9m2;geQm1W5ny,o1XLur;r0tt;fQt,u;odMEy;dalDm6ng,s1UB;a,dQe,o,s;a,iAy;hQia,o0YR;a13Mshu23K;bQn1X0o;i1lC;aZPcZOd1XWeXThQPiP9lMTmMSnMRo5TpDr26s249t24u07ySzQ;arAHechQ;!oslovak1AVs;an22Sb01clYgnDi1lWmb03SnUpSrQst1TY;a1Y1ilQus;!l258;er,her,rQ;e7i1GZus;di,icQth273;!alEi28As;indQon0;er0r1JZ;e9iRoQ;ne0ps;c1S1ng,st0;erRi22RoQ;rg0;!mOn1ENspa29Utr6;a1Lb1Ic1Fdd1De1Aff19i18jo,l0Zm0Vn0Up0Tr09sZtQz26M;ba1YLeWh05TiVlToSs,tQ;er0hro0KTin0WUleQy;fi1YR;ff0ut0v2;a7eQ;r1RLt0;c3e0;!ne7r,sQ;t,y;a1Z2e,hYp,s278tQ;aMer,oQ;dUmQ;!arSer0iQs;se,zQ;a20QeFi1;i26Cy;iaQy;l,n0;i17Fy;a06b05d,e9f0YSi02l00mudge6rWsVtSvQz6;a22IeQi1y;!ba222d,s;!aiRiQs0QX;n,s;l29Yn1IY;e9i26Cor1R1;!an,enSiQo,yN;culQe1KF;a27Wum0;cGt270;!eQi1s,y;d,rs,y;a,e,ng,oQ;s1L9usQ;!er,ly;!ed,i1s21D;b3cRre,tQ;e,i212or0;ao;b0ORca1BVid0pa,s;eifo0HPni0AQt0y;berSin,minRulatQ;e,i15X;g0s;la21Qso1ZB;eb275i021lXmWpTtQver295;!iRs,urQ;alEe9;s241v1WU;aReQr1Y3;pp2;!b24Q;in1WQ;!e11Ci1y;si1YD;!ed,lin0H4s;d,i1rRsQ;!ta;vo;lQy;e9i1y;arac1PAkoRuQ;mb24R;ld247o;a1X0by,e9iQs;cQsm,ts;!le0;n1P8t1N5;hulQrl;hu;a2De1Ri13o0IuWyQ;ba0M3inIogen21OptTstalQ;!lQs;iQogOS;ne,zC;!ic,oQ;!gOP;c06d04el03i00mXnVsRtJKx,zQ;!eir24R;adSe,hRoe,tQ;!ace18Ged,s,y;!e1MJi1;e1TQi1;chQ;!e1MGi1y;bRmy,pQ;!et0leF;!lCs;cksRsQ;e24LinI;ha1HA;!e26BlNDtG;!dy,eQ;!ly,ne7s27T;es,iQ;alEb3fQ;iQy;ed,xQ;!es,i6;a08c05ft,i04m03n02o01p00quetZre0sUtchTuRwQyd6zi2;!b1SJd0UHeFi1l1TNn8s;ch0KTpQto23X;!i2;!e23H;by,sQ;!boScut11Ge9fiHhai1QIi15Tov2ro1AGtRwQ;a0U9o1VI;a0U8o0TY;nAw;!tA;!la1ZWp07As;k1GJn07O;e,iAki21Ous,y141;we1ZI;s1GZx;!het22RkQodi21Ds,us;!eQ;r1OHtt;k8tQ;!ia1TGs;b0Cc09e0RFk1T3l23Fm05n04p03sWtQxD;!eriUiQt234;cQquC;!alBZiQs;sQzC;e9i1m0;a,on,um;!es,is,pVsTtQ;al,e23MiRoQ;!bJ;an1XMna;!croQ;ss22A;!er,in,ly,s,y;es,plCs;g23Yk1I2;!eSinQp23Ps6;alQo3H;!i22Ily,s;!a1SWs;ht6kQ;!etQ;!er,s,t;!b5s;a05d01eZgg,ight6mWnsh0CIo20KpVsTtRvi228wQ;!e,m1RWs1YV;acQe,in0;eoD;cenQs,t8;do,t;e0t;atQe;eFi6oQ;ri1QQ;!d,k0l,pQ;!eLi0FCs,y;!enSiQo,u21Z;b21WtQ;!ab3ed,i1or0s;ce,tial1F7;kNTmTs0APtQ;e9iQor0u1RR;ng,on0vQ;e23Ni21T;!eQs,y;d,r1N5;b0Nc0Jd0Ift0Fg0Ei0Bm0An05p03s01tZvYwUyTzQ;eFiQy;eQly,ne7;r,s25P;!fi1U3on0;!fSlQ;!eQi1s,y;d,r0y;i1TZoM;at,e1RVi13V;ch0T8eQi1;!r1EPs;hQs1P7;!do0RYe0PSi1;!pQs;e1G5i1y;bTda1XLe0foMiSkQnGst6;!ed,i1sQy;!ha1FF;al,o1CKum;errG;!er,m24Np8;gQs;!sQ;li23K;!en,gy;!ed,i1sQy;!mQ;an0JFen;do1TWlC;kQow;!d09YeQhe17WinIl0ZDp1B6s;d,rQ;!ja1TSs;!b1M6me1TDs,tr1CV;aGFbGAcFZdFUeFPfFLgFEhF8iF2jF1k1KJlDUmASn41o3Mp38qu0XLr1Rs1Ft1Au05v00wTxswaPyRzQ;i2y;l20NoQ;pa,te0;aUbTeSgi136lRork20SsQ;!h5;!ey,i1;d,ll,rN;el0KIoy0;bun0O5n,rdQ;!i23Xly,s;eQin18I;!nSrQs,t1DPy;!aQed,i12Ss,tEup;ge0ll0;!a24Nt0JE;ch0KVg0Tid1QQl0Rn04p01rRsQtuH;coDin0te0IK;!aXiWsUtQ;!eRhHKiV3n1QBro0F1sQyaM;!h1PPi1W8;d,oDsQ;an0iAy;eQi1;!s,wo24M;c,er0;geQnt;!o1UA;!e,lQon0s;a,eQi12C;!d,r,s,t;cil0Bsel09tQ;!ab3do0QGeSi04Qle7rQs,y;iAyQ;!m1PEsi1VUwi1VU;d,n237rQss;!a03ba01cZed,feit08LinWmeasu1PNoVpSsRteQvai1F8we1PJ;n1FZrrori21E;!u0RH;art18XoiKroQ;dQposJ;uc1DJ;ff2;g,tQ;elQui1DG;lig20K;lQul1W7;aim0ockwi20G;lanQ;ceF;ct20Irgu1B3tta1SC;!ed,i1lQor0s;i1or0;!l1LMm1OVor0s,w149;dQee,s6t2;!a,n23A;ar0h8;eTilPGo,s,tQ;aRer,onQ;!woLO;!ge0;!r22Ps;a,by,e1C9gro1USim1O9mUsa1RAtQy;!aSco,eRi1lQn2s,umC;e7ie0W3y;d,l1J7;!n0C3r,s;etTic,oQ;!lRna17MpQs;olit4;og1LF;ic1S6oQ;loQ;gy;a13b11cor4d0Ye0Xfu,i0Uk0Sl0Rm4n0Io0Ep0ArXsUtRvQwPy;ax,etXRo;!eRiQla1V9o;cJna,soB;s,x,z;aReQica1OZo;!t0;ge,ir;!a01eViUoSuQ;gQpt1RE;at5;bQdeFsi1KO;or1Q7;d1KOe,g4ne;ctTl1XQspondQ;!eQi1IFs;d,nQ;ce0t0;!ab3ed,iQly,ne7s;ng,on1RRve;do,l9D;!orRsQus;!e0m4;aQeJ;!l,tPC;llaSnQ;aQe05L;!do,l,ry,ti6;!rG;!b0NLeTfSiRmeJsQucop1YCwa1U7y;!tal0A6;ng,sh;ie1QGlakA;a16Ad,lSrQt;!ba1QQed,i1sQ;!to1R9;!iQl;a,us;eoBi7;!e1CGsQy;!cr0QK;!a0ABnQ;n1TIthQ;!ia1XW;!en,l1EZs,y;!ay,eRi1Y0le7oQs,ur103y;ba,n1X1va;lELro;eQin,y;n,tt;!lQz6;!iQs;e,ne;a00eYiXpUs,t2ulTyQ;!c0BPi1rightRwQ;rit1N6;!ab3ed,s;at1VZ;a,eQi1o1XXs;d,ns,rQ;!f0TChe1MQs;e1FGl0X8ng,oD;!d,la1TLnhQrnicDs;agO;!cQ;aQet1VE;ba1NW;ch0INg4i1k00lXmbWnVpRrdinat1X1s,tQv2ze;!er,iA;!eQ;d,rQ;!atQs;e9i1HW;!ey,s;e0s;!aKeRiQly,ne7s;d1U6e0ng,o;d,r0st,y;!boSeRiQo15As,waH;e0nI;!d,r15Q;ok0;a6Fc5Nd57e15Of4Eg44i43j40k3Zl3Ym4n3Po3Oqu3Lr3Ks1Pt0Cu0BvQw1L8;ale09eTiRoQulsi20E;ca1XLlut1GRy0;ct1PAncQviJ;e9i1GG;n00rRx,yQ;!an1W5e1B3i1or,s;gWsStQ;!eLiQs;b7Hng;aQe1XMi205;nt,tionQ;!alQs;!i1YK;eQi1;!d,n1ZBs;e0S3iStQ;!ionQs;!alEee1J0s;enQng;ce0tE;sc1FP;ndr0ZDs;a0We0Ki0Bo08rRuQ;si1YD;aWer1REiToQ;lQvers1SK;!lQs;ab3eLi1;butRt1UHvQ;an1VHeF;e9i1ZKor14T;!ba1S5cVdiSiHp1WMrRst8venQ;e0i1ti6;i4y;ctRstiQ;nc1WN;!ed,i1ZEo1U1s;epRtQ;!ed,i1ZCor0s,u1VW;tiQ;on,ve0;rtQur18J;ed,iQ;on1XO;!guXnQ;entVgTuQ;aRe9iQo1PEum;ng,ty;lEn1YIti6;enQ;cGt;!al0s;i1UYoD;!mpXnUsRxtQ;!s,uJ;sa,tQ;!aQed,i1s;b3nt0;d0XDtQ;!edEioQmeKs;n0us;l1MJoraRtQ;!ib3uo1OY;nQrG;eo1OW;ct8gTinRminaQ;nt0t1MF;!eQi1meKs;d,rRU;ioQ;n,us;!c1Ee11i0Uo0Opi0ItXuQ;el1JMlSmQ;ab3eQi1m1E0p1VL;!d,r1VZs;!aStQ;!aQed,i1s;n1TDti1W8;r,te0;!a05e04iYrQ;aVictTuQ;ctQeFi1;!ed,iQor0s;ng,on1WKveE;!ed,iQor;ng,o1UF;inQ;!ed,i1s,t0;p1THtuQ;enTtQ;e9iQ;ng,onQ;!al2Ws;cGt0;lla1UVr3R;bTnQ;c1TOtQ;!inQly,s;!e,op3;le0u1AS;cUrQ;aQeFi1;cGtQ;orQ;!iJs;uo1NR;lSna1XRrtQ;!iQ;a,ng,um0;!a1ULe9iQ;dQng;atTW;derUgnTstQ;!eQi1s;d,nQ;c1T5tE;!ed,me1XH;!aQed,i1s;bl1T2t14M;c00nYquenWrvQ;aQe9i1;nTtQ;iRorQ;!sh1IHy;on1VNsm,ve1UF;cy;ce0tQ;!iJly;suQt8;al,s;r1CFuQ;ti0TI;iRriptQ;ed,i6s;enRoQ;us1UH;ce0tQ;io1MV;ad,oy;eQist1CK;rQst0;!ed,i1or0s;r,v2;!al1SUeViToQy;isseRl1STr0tQ;a1TGe0;ur0;!e,ng,vQ;an1VQi1;ctQd,ll1DNr11I;!ed,iQor0s;c0OSng,on0v1JT;ey,on;!ed,lP;ecture9o1T8uQ;gaQnc1T6r0O6;l,t1CG;cJf2;!a,eWlomerat16oVrQ;atTeQu1BU;gRssQ;!es,i0B7m1HIw0WW;at1A7;s,ul15U;!le1SU;al,e,niRr,stQ;!ed,i1E2;al0MVt1SB;!e0BiZlXoTrontSuQ;ciDsQ;e9i1QU;!a1Wed,i1s;rmQu0GQ;!aRed,iQs;ng,st0ty;b3n1UZti6;ate1UAiQu1SK;ct8;dWgUn3XrmSscQ;atQ;eFi1VAo1Q1;!aQed,i1s;b3t1PY;!urQ;a1TVe9i1;ant15SeQi1;!d,nQs;ce0tQ;!iQly;al07;ctionVderaUrSssQt17W;!e1TViQor;ng,on1KN;!eQr1UJs;es,nc0PI;cy,t05;a1PLe1PLs;e00iXoUuQ;cQit0;i1MMtQ;!ed,iQor0s;ng,v1IF;!l09EmRnQr0s;!e9i1;!ini0UAs;me1V0tionQ;!alQeLi1s;!i1QNly;!mnTnsRscenQ;dNsi6;atQe0MOi1;e0i6;!a1RLed,i1s;ate0Ge03hMQi01lZoVre1JPuQ;bi1JZrRssQ;ed,i1T1;!rQs;eQi1;d,n1R4;ctSmRrdQur031;!e,ia;ita070;!ed,i1U4;a1LYuQ;dCsi1J8;er1NQliatQseE;i6or1BI;al01dCiZntrYpVrSssionQt1O1;!aQs;iHl;n8tQ;!ed,iQo,s;!na;ci6tQ;!i1SIs,ualQ;!iz18Oly;at1PAic;t1PFvQ;a196eFi1;!e14Li1meKs;na1QY;l,n;a2Ob2Je2Ef2Ci2Ali134m1Co,pSra1P5sRteQ;!s1QN;!to1IL;!a0Ue0Ki0Il08o03rYtWuQ;lsUnc1QStQ;aSeQi1;!d,rQs;!iz18As;ti02;i1IHo1O2;on,roQ;ll2;eQisComisC;henRn1LCssQ;!e1S2i1O1or0;d1QEsiQ;b1P1on,ve1R2;ne1TIrt,sQte,u0EB;e1PWiQtNuH;ng,tQ;e0iQ;on1IO;aWeSiQyN;an1SCcQe1RTmU;at1OGit1AE;mSt0ZGxQ;!es,iQ;on,tG;entU5;cRinQ;!a1T5eLi1s,t0;en1Q4;e1QAlQ;a1PUe1PHi1;d,lYnWtQ;eSiQ;ng,tQ;i0QZor0;!d,nQs;cQtE;e,iAy;di1D6saQ;b3t12I;!l1RZs;ct03d1ECgn1S3n00q,rUssStQ;ibQri0YQ;i1ODle0;!es,ionQ;!a1HK;aTe9iStmentQ;!alQs;iz5;ng,s1QU;b1O4tQ;i0OXor;iQy;es,onQ;!s0OP;!ed,ne7or,s;!a0Ke08i00oVs,uQ;nQt1LR;al,e,iQ;caQon,q1C3s1L4tG;b3tQ;e9i1MNor0;dTnQti6;!al13OeRly,p10PsQweal1HC;!en1OT;r0st;e,i0QIoH;e0ngWsStQ;!ed,me1S0s,tQ;al,e0YLi1;eSsQ;ar1HHiQ;on0Q6;ra1M0;!l1OW;!morat00nTrcQ;e,ialQ;!iQly,s;sm,z168;cVdSsura1GMtQ;!aQed,i1s;rGt19O;!aQed,i1s;b3tQ;i1PVoH;e17Ei1;e0i1JN;!ndQs;!aKeQi1me1RGo0s;d,er1MQr0;c1L0nQ;!g0o;ortQr1D4y;!a16EeLi1s;!ba1F8dRly,on,r0s,tQupp1QE;!h,o,s;iQo0DIy;an0c,eQ;nBs;!atTed,inSo0s,ustQ;!iQ;b3on;a1PCe9g,i1;!a1R1i1NFs,ti1;!nQs,to1NP;c0MMdQ;an1L3;a0Vb0Ud0Te0Ri0Ql07m,oVs1J6tUumQvP;!bRnQ;!ar,ed,i1PAs;iQo,us;a1CXne;!er,on,raBs;!gBmb00nUrSsQur016;sQto0XT;alEe1B1us;!aQbli1IZed0f0I9i1le7s;do,ti6;!el0iRnaQosco0TUy;!de;alRc,es,s1LAzQ;a1NGeSN;!isQ;m,ts;ia1ELo;!a00eViToRuQ;d1NGsi18D;idJquQ;i17Zy;d0I3e1BOnQsi1OM;!gwo1GDs;ag0EActSen,gQt1KEy;e0iaQ;l,ns,te;!ab1K3ed,iQor0s;b1K2ng,on0ve1NB;boratWge0U8psUrTtQ;eQi1;!d,ralQs;!iz5;!boBd,ed,s;e9iQ;b3ng;eFi1GVor0;!c,n,se1A8;!en,m4sQt1K0y;!lVP;!e0IMly,ne7pl1ABs;e172y;!da0nd2s;onA;ff5l0YOmbatoHnQon08EtD;!a1IYcidQed,i1s;eQi1;!d,nQs;ce0tQ;!alEly;aTeRn,oQ;!rt0;n,rQsi1CY;en1LX;bitQn;a1MBi1;enUita1JInSsQ;!weQ;ii;ac,iQoscen11R;s1ODti178z3B;cy,eQt;ra1M4;fQouXM;eQin0;!eQr0y;!h0CUmR0s;d,fficTlSrcRur,xistQ;!en1O6i1s;eFi1H5;ho;ie1OY;a,dl1LZeTfi1D3g2iQy;fQng0s;iQyN;ca1LRe1NB;!c0d,iBna1EPr0s,x;a1GEcyx,hYkRoQte02R;!a,n0T7on0I5;!aVeTf1A7in0NlAn1AIp1DJroaSsRtaQy;il0;!u001;ch1HD;d,rQy5;!el;mam1NWt0U3;iQle197ran1OB;n,se;aTbQol,ra0u0M0web0y;!lQ;eQi1;!d,r0sRV;in,lt;chWlVrse1MDstUtSuth16DxQ;!ed,iQ;al,ng;!e1MQi0MCs,tQ;ai03W;!al,eLg019i1liBs;!esc1L8i1KYs;!e1MMi1m4;et,st;dr,on;a17e0Pi0CoVuQy1FS;bTck0HFe00TmSnRstZXtQ;ch1MGt08;g,k5Ly;p5Ks0TC;!b1N4h0BOs;ak05bb04ck02d,g01ist00nCon19Op,sYtUuRvQwn0HA;e198is;dQgh,se01Tt;!ed,inQle7s,y;e7g;!hQil1FHs,t1MY;!eQiEAs;!d,sQ;!liB;!eQi0LQu198;!d,ly,ne7r,s1NDt0WLup0;er1IW;!g1MRs;!ed,i1s,wQ;i1K7o1NQ;er1KB;!ed,i1ro0Z7s;c01ent00fYmVnTo,pRq0BGtQve;!or1GH;!b1LApQs;eLi0LF;ch07Ee,g4XicQk0GPt1FK;!alEi0NBs;aQb0LJes;ct1HFtQx1FY;e0ic,ol0ZE;fQt6;!haWFie,oMs;!e3s;he9k09P;aZdDf1MTgg,lYmVn03ToUrTtSveQ;!la1FCrQ;!e0FTly,ne7;e,us;gy16Iic1C8k0moK;!pat1KO;!enQ;c1IIs,tQza;!e,iBs;ia,l;!nUrRt0vQ;a1G1e129;!an1IBe047ingQly,s,w0ADy;!hQ;ouV3;!eRi1lQsONup0;i19Gy;d,r0st;ck0FYd,es,i0Jm0Fn0Ep0Cr05sZttYuUvSw8yQ;!boQmoHpoZHs,t6;urB;iQo;c3n;dRsQ;!e0trop19F;!e0VAiQ;a,ne,o,us;er0FP;h1KQp1HLsQ;!e1KQiQle7maH1roWRy;c1FUer,fQng;iQyN;ca1IYeQ;d0s;a,eUiRkQo,y;!e,s6;ce,d1FCfQn1A2on,ss1DQt1B;iQyN;ca1ISe1KH;!moKnQt;ce,d6;!b1JUpLMs,tQ;on,rM5;!cy,destineEg0F9k0F9s,t6;!bSm6KoRpQs;!do083ed,i1s;rNurN;a071er;borBm0MIrQ;!e,vQ;oyQ;an1KN;a14c11d2e10g0Yl0Xn0Mp0Kr05s04tWud170vQ;iQviA;c0lQ;!iQly;an0sRty,zQ;a1I9eF;a1I8ed;aWe9iUrRyQ;!sear14Mwi1D4;iRoQus;en,n;c,ne;es,ng,zenQ;!ry,s0HK;d0QBti1JJ;co,sy,teL8;cTiSo,q150rQ;hQus;os1E7;e,n17T;aZe,lCuQ;itXlaVmQs1DR;cis1G9fer1HRsRventQ;!ed,i1KKs;cRpe1JNtanQ;ce0tiJ;ribeF;rQt0UK;!i1GJs;!ed,i1oDry,s;!di4;h1GLriQ;!a17P;cZdWeSgDBnaQq14Jz1GU;bQm6;ar,on;!maQ;!s,tQ;ic,ographQ;er,y;erQi,y;!ellQs;a,y;h,inna0WWo;ant0YRla;arQs;!etF4s;ar1HJlo;aRc0SOeQi;ly,ro;da0;l1DAo;a47e2Yff2Xh2Vi1Il1Co0Or02uQ;an,b00cYen,ff1FGgXi,ji,l,mWnUpac1HVrRtQy;e0ki,n15Wzp1KD;chQli189n8ro0;!es,gQi1C2yaM;oe12T;!g,hQk1My;ua,ya1;!h14Al15Qmy,p0s;!gJM;ho,kQ;!ed,i0BIlCs,y;!b10X;is00oSysQ;aQl2;l1CUnthem0J0;mTnQ;icRoQ;log0WQm10Fs;!al1FRl1D3;atRe,i13YosoQ;me0;ogQ;rap1IU;!sZtQ;!aXeViTmasSoQy;!phQs;!e1HG;!es,ti19A;!anQe,n1B1;!e,i1F1s;nQr;!d0V1ed,i1sO;!b0OC;a0LJie,y;a1DCc0Bde,e,i08k0AZl06m05n03o01pZrTsStu,uRwQy;!d2k;!d3C;e158hu,un;!al,d0eSiRtlQus;es,i1;zo;!ographQs;!e0TIiQy;c,ng;!in,pQra,sD8;eLi1y;!k,nIsQ;e147i1y;!gQ;!qi1;pNs07R;!eQla,o;ra,sterVN;!ceRrQ;!b0GZs;!s1ID;k,oQ;!lat0PH;amyd1EOoQ;!e,rQ;iRoQ;foQMphy1AG;de,nQ;at5e;a10b0Zc0Sd0Re0Pff6gGFh0Nk0XAl0Cm09n05p02qui1C0rYsWtTu,vQyo02D;aQes;lrQs;oDy;!a,ch16Jra,s,tQ;erQi,y;i1s;!el0R5hoQ;lm;aSopractRpQ;!i1s,y;ic,or0;c,g;!munk0ot3pQs;eQi1y;d,r,wa;!aSchRe1EMg,k0na,oQs,tu;!ok0;il1EE;!m134to044;!eRi1n0FMpQ;!anz07Ws;!d,ra,s;!dWeVi1AGlRtQ;e0F8on;!ax,eLiQs,y;!eRnQ;!gE;r,s;!an0s;!bir16QcaHe10BhoSish0CIlRreQs;n0ss;e7i02R;od0;aQi0VSuahua;ru;!fQko,n;!ly,s,taUZ;eFi1o0PN;!aUhi,kQoW1;!aSenQie,pe18Ms,y;!ed,i1p1LsQ;!h04O;!d0OY;!goIHnQs;e1BGo;a,i,s;!ki,nQra;a,g,ti;a1B0oQ;tu;ff1HC;a0Uc0Odd11Le0Gf0Fgwi02Ek0El0Cm08n06o05q04Yr00sVt1GOuUvSwRyQz;enBne0XZ;!bac0Y6ed,i08Is,y;a0FUel12MroQy;l14Tn;k,ng;!apea021hiHn12JsTtQ;!eQn0L6s;d,rQ;!f08Ot6;!b1EK;!bTiRleBnoQok0OErGub0yl;bZUv;!e12OsQ;e,hWS;ouVT;l,nI;!ey,gQi2n06I;!du;!a,iRoQ;!th0JK;cQst070;al1DH;le,s0D8tQ;enh0U5;!hov,ov;!o,s;!ch,kWp,rUsStQv2;aQos;!h0;eQy;!burg1BWca01Cs;!ed,f0IGiQlead11Qs,y;ng,o0;!bo157s,y;hUkQ;!bo06EeRinIli1ECmaQo0KDpKOs,up0;rk,te;d,rQ;!b1DRed,s;en0n19T;pRtQ;!eLinIs;!eQly,o,ska19V;nNr,st;bl18Rc2Ad28e,f27g24i1Xk1Wl1Tm1Ln14o13p0Xr0As05tWuSvRya,zQ;!z;a,ez;!c2dSffeur1AWh4nc11DvinQ;isQ;m,t0YE;ha19U;!eauXh0TDo,sVtQur;anooYSeQi1y;d,rQ;!bRi1j0N6lQs;ey,ng;ox;!wQ;in,or14H;!x;!e1BNinIm,sTtQ;eRiQ;seFty;!n5;e,is;!a08co07d06g04i00lWmUo117rTtQu,y;!eRi0JWreQs;s,u1BQ;d,r8;ed,y;!aiBcaQe0PHi0USs;st2;at0EXeQie,ot191t6y;magBne,sQy;!toQ;n,wn;ng,otSsRtQ;a0TUiAy;ma0TC;!e2s;eQi1;!ab3d,r0s;!onn0Z4;al,t;cterQde0;!iQs;sQz0AV;eFt13J;!arrJeTin,lSm4pQsGRt1AA;eQie,y;d,ll1E6;aPin;au,l0ronQ;!e0i1;!s,t18H;!c03dYeXgUnTo,tQuk1EI;!al,eRiQry,s;l1ABng;d,l3;el8i1;!eQinI;!ab3d,lQov19Xr0s;i1og;l,y;!a104eTiSl2ni,rQu;aQu;!muk16A;!garh;li19Qr;eQy;!d,llQry,s;e185or0;!berWele1C3oVpQ;!aSionRolQs;li6;!ed,i1s0K1;!g12WiQ;gn;is,mi3;!laPma124s;et0i1CPkRlQme0WC;eng16Zis;!b1BFed,i1y;a,ot0XZra0;!m,nUrQse;!ed,i1mRpeQs,w0E3;rs6;anQen;!sh0YH;!ed,i1sQ;!aw;aRrQ;in18J;ll,s;e9f,i1;!dQwi11T;a,ha;ha,o;a1Hc1Ed1Des,ili0B5l0Wm0Un08os,p07rVsStRvic1AByl6zQ;anB;ace4e1AR;arRi0XBsQ;a19Vna,poPW;!eE9;a00berDeYn,tSule4vQ;antAiQ;cJx;!aUiQ;fQtu14I;iQyN;ab3catQe1B7;e0i1B0;in2O;al0bQmon157n,s;ell0WYrJ;!m15L;hal6t;k,s08tQ;!a05e01iXrSs,urQ;iQy;es,on0;aRe9iQo;c,fug0Z7st0;!lQ;!e,iQly;ty,z1W;gSmeQpe140;s,tQ;er0re0;ra13X;nSrQ;!ed,fo10Hi1liBpQs;ie17P;a16FniJ;urQv18C;!i,s;orRuQ;reFs;!ed,i1s089;al,eQil;nt18QterG;al,e00iYlRsiDtQ;ic0s;!ar0bVed,i1A0ma6LoTpSs,ulQ;ar,i15XoQ;id,se;ho10Y;!pQ;haB;lo10B;a,baQn13A;cy,te;bSry,stQ;a,e,iQ;a04Fne;!i,rQs;aQitG;n165t0L4;ar0e9i1r15L;e,iQ;!lQ;!e,i12Zy;sQusescu;eQi1;!d,fiHle0X3s;tv;b86c84d7Yesar7Xf7Sg7Qh7Pi7Mj7Lke7Kl6Im5Vn4Wp48r1Xs15t0Bu01vTwSyQ;ce,eQl0IXm0B6;nBta0XU;d0N1i1s;aUeRiQortN;ar,l,ng,tG;!at0d,m0WAnRrQs;!n5I;di0Z4;!lQn0LH;ca12MierQry;!e,ly,s;cXd3g0WClWsStQ;eri0K9ioQ;nBQus18B;aSeRi1tQ;ic,on;!d,s,w0V7y;l01Hti6;dr6f02NiflUAki1;asQus13C;i0AMus;a08biMch06e01fi00hUi0XAn0VRo,rio0XAsTtRwQ;aX3om4;iAleQy;!mO;!kilQ4up;!aTca0RPeRleOoQy;de0lic17Qu173;dr32rQt167;in120;l,rQ;iBs13Dt14H;g0VRsh;!chi17LgorRna,rQs;!eLinR9pill05Ss;iQy;c16Ees,s5zQ;a171e9i1;!aQe0O8i1phra16Sup,woMy;b3ll;cYlUm04HnTpult0J0rSstrophRtQ;on147;e0ic;a111el16Hi0WO;a,ia;an10Hi0WMoRyQ;st0t142zeF;gQn15Z;!ed,i1s,uC;lysm0SNoQ;mb0;a0Gb19Zc0Ee0Ch09i07k06p05s00tRualQwe11Q;!ly,tG;!aw0RSeViSle0oRrQs;at0PQo;ff0r;el,gRlQng0;e,l0UH;at16L;!lQr0s;!lQ;an101o;!aTeSiQo0Y3;dy,e,ni,oQs,us;!pe15I;ro139t44;d0H3nd172;ar,er192i4;!et0s;m195nQo;g0o0;!eRiQle7meH;er0ng;d,s,w0;!d,lo0BTs,workQy;!er0;aQo;!dC;!blan0QAno00V;a1Wb1Rc1Qd1He19g18i14jack185l0Ym0Rn0Mo0Ip0Br04s02tSu4CvQy;eQi070;!d,l,r0s;!aYeXha125iWm4oTrSs,wQ;heQr0UB;el0;id0FW;gRn0onQuc160;!i0DKs;ra0MF;er,la11Yng;!d,l0r;!ge0VC;!i0X9on,tQ;ai0RCen;!aVeUiToSutRyQ;!i1ov2;he0R9;l01Dt0;a0FJck,e14Ul0ODn0C6on;l,ra,y;diBs14B;!aVeRi1oQ;ol,rt;!ntSr,tQ;!baQed,i1s;gg2;er0i2ry;cc0GKl,th14B;!lRn,t0WOusQ;e011i1;!a,e,inQs,yn;a0e,g;aTeSivQy;al0orQ;e0oD;!g17Ay;by,ge,h4l,ti168;!aVeSiRoQ;dy,na;cha0CXl14Dne;lRnQ;!ci11F;!a,i11Eo;k13Kn;!a,eUiSoQs6t6y0LC;!a0FPs,tQ;a,ta;!nQs3to0;!a,g,h13V;ne,t3A;!bScaRll6nOLos,sQ;i,sa;tu0T2;!be4e,ou;i0ZFo87;!d,eWfUgTleSr,sRtQy;ak137;!s15S;ss14U;iv134;r0F1ulQ;!l0OB;n141r0;!aXb153eWhFZiQs;ac,ff,g076nUoQ;!lSmyop16EpulmoRthorac11BvascQ;ul0RR;na11E;og0QQ;al0;d,w;m0IPss0EH;a0ZMino0T9;!i9JoRs,uretQ;or,tor;hydra1MnQ;!aQife0MIs;ra,teF;!binie0F3c0Y4fe,jo,mRt0vaQw0R9;gg0F4n0;ba,elQ;!iz5s;a0Ac0IEe09i03l4o02pZrWsUtRuQ;a,l0UMto;!aK8iQor0urC;on8vQ;at13Le0i128;!hCDiQtoBu10F;zeF;a,iQ;!cQ;a,e,io0WDo03X;!eRiY0ucciQy;no0;d,l12Ur;!ei141ne,te;!llaUs15EtQ;aQol0ul0LK;!iBlQn;!iQs;s0GIz02I;riA;!d,l0L4r0s0XS;!bRcitQdA;iAor0y;il0HJl11N;a0Lber13Qc0Gd07e0i06k2nYoXs15QtRvasQy14A;!es,s14E;!aUeSi0SNoQre0XXwe0XX;!nQr0;!al,e12K;en0rQ;!bu105;lou05Unke0LHta;eZ5n0py;!aWeViRoQy;li,nTTt;balQng;!iQs;sm,zQ;a12Ie;d,ry,s;b0YMe;ne0sUD;a14MelaXiUleRor,yQ;!la0XRm4;!foMliRr,sQ;!ti0TC;g0QVt;!ce,dQe9s;!aQly;!cGte0;!b130r11E;an,eQun;lRrQ;!oDs;!ed,i1lQs;a11Wed,i1;an,dRl0rQs0YQvL5;d,iAy;a,i052;ar0Ab08cord10UdOe02iZmYoXpQry,s,us;!aUbeTEeLfi0QKgrTh0GXiSo0sQtoR9us0XPy;!iQ;te0;!ng,on;ou0X6;ign034nQri;el11C;!mi3r12Jufla12E;ie,y;!lQno;a,lQo;a,e,o;!lUmTo,rQ;aRoQ;n,on;!m0PUs;be0LT;!l10Not,s;od0H8riQ;an,d0XQ;adQo;er13Q;a0Pc0Kd0Ie0Gf,ga0YPho089i08lZmYoWpurn10Ite0NLum,vSyQzoB;pQx;so;aSeRinQ;!g,i12G;rt,s;d10Hry;ge0IJriQ;c,e0;!e0ENi1ly,ne7s;!aXba0SReWiSoRs,uQy;m,s0WS;n,us11Kw0OJ;e,gRnIo042sQ;on,to;raphQ;ic,y;!d,i14Fn,r0s;!b3gh4h4n,s,w0OD;!bVco,en0XZfTgu10DpRstQ;a,heZ5;er,hQ;!a0XW;!orniQ;a0RUca10M;er,rQ;at0JQe;!b,dQndZ7;on0GC;erQwe0VK;!a,on13B;iTuQ;lQt0X4;atQon,us;e9i134or0;fi5um;!br0ZIis,mQ;a0BOit0E5;!d,s,waPV;ol10Cun0;aph0UMm4n131rRtlQus;in,yn0PC;n0o;i0V6oo0XW;eQliost0HIn0OX;!d,s,y;eSfQ;eQr0OU;e,iBr0YQ;!s,tQ;er0Z4;!e4s;av0YRdUeSiRmQre0y;i0N8us;ll0KDz;!nQt0;!ce0;ie0y;a0TCheQklWYopho0LBt0JA;!d,s,t;aYbXdriv2eWinVlCoSrQs;al,e10FiQon;ol0QN;!oRtQ;!a0VV;d3se;!etT7s;!rn0QIza;a09Lie0y;lQna0r0QG;!le0GS;aP7eJ1fJ0hIRiFQjFPlCYo8Hr3VuYwa0P4yQ;e0L5go0RLlWpVrUstand0Y7tTuSwaRzantiQ;ne,um;ys;k,l,nI;e0he;d,ne0on;aZrodu0TA;aw0i0RE;b3Ic38d30e2Yf2Tg2Nhl,i2Kj2Jko2Il1Xm1Sn1Ko1Hr0Ms0AtUxTyRzzQ;!a0PXe0G9i1ki0U4wo0PXy;ba0QReQinIo06Js;o,r0;om,t6;aBch03ju107l0XUs,tRyQ;l,ou;!eUhTi1oRreQs;ss10D;ck0nQ;!ed,ho3s;e0N8o3;!d,rQ;!ba0TScNVed,fSi1miOCsRwQy;or0QY;!cot0KY;iQlG;e0Q0nQ;ge0KF;!erQie;!ed,i1s,y;an,b00ch,e101hYiUk2lo0MYsTtRyQ;!bo0JA;!eLiQl0J6s,y;er,nI;!es,i0OA;eIWly,nQ;essQg;!es,liMNm0MNpeQwom0MN;op3rs6;!eQi0HRm4y;d,l0s;oy0y;ak,b0Ich,d0Ge0Dg06i05k01lYmAEnVp8rSsRt0THunV4yNzyQ;ns0LX;ar,tUK;!e0T5iRoQ;!ugWZwUI;s,to0;!eRh0EYiQoTCs0SRt;nN9sh0WC;d,r0t10R;!ap,eRiQy;ngZU;sq0KRy;!a,eShaQ;lt2rQ;dt,t;!s,tt;!al0e0Z9;!eVh2lSos,undQ;iQy;an,es;arQed;!iQs,y;es,z5;on0ZSr0ss;auQn;!craQs;cGt0AW;eQon;n7Jtt;a09Ker0URs,uQ;ja;nRyQ;!an0XCed,s;!a,gior0NA;chWdVgUi0YLkTnSsRtQu05Dy4;!er,i1y;!en;i00Wu,y;!eLhNXi1s;!alLQee,l0ZC;!lCs,t,y;!e0YKi1y;blSmRpQs;!eLi1kDOs,y;e0AJi1;eQi1;!b07Q;b0g09i08k07lQwa105;!aMcr05do04e01fYhWiVo0NUpOsSwQyN;h0L2iQ;nk3;!eRhitQ;!tT3;ye;e0Y7on,sh,t0ZH;e0L3oQ;rn0;ightRrQ;og;!er,i1;r,tQ;!ed,in0pQs;roHQ;g0zV0;ap;!he025i1s,y;mi0MG;ar06We0EVi1;ws0K2;ji;ck,lQ;dQt;!ab3er0iXBs,up;aUgQle0EPs0GA;eRiQy;es,nI;d,rQ;!ed,s,y;b04Lt0BJ;fQi1oM;!aloSeQo0XBs,y;r8tQ;!ed,s,t;!es,s;ll2nQ;a0o0;aWdTgQs,weis2;eQiQG;!d,tQ;!a0T3ed,i1s;!erRhQiZFy;a0is0RK;ba0QO;!pe0WU;cane0UGhWkQol0ST;!ar044eUiSlQm4n2o,sE2whe0MVy;a0QVeQi1;!d,r,s,y;ngQ;!h0CD;d,t0ye;aQenwa0MR;nQre0WL;!an;bQon0SJs;a,er,ie,lQs,y;eQi1y;!d,g0ILs;a36e2Fi19no,o06rr,uRyQ;an0XYce,n0KBon0FAs6;b03c02gAhn,i01l05Ym00nWsTtQv;alQe0i0MBus;!iQly;ty,z5;hRqQseDQ;ueE;!e0WHfiHi1y;!ch0QPeRg,neIBo,sQt;on,wi0MM;i,l,r,tQ;!te0;!by;n0sPM;e,kn2;ak2;a0Oc0Nd0Lg4ilAQk0Fm0Dn05o00s,thXuWwQylA;!nRsQ;!e0U4i1;!eSiRo024sQ;!toBvLS;e0ng,sh;!d,r;gh0XBha0DWssaM;!eQs;l0rQ;!ho0NKly,s;ch,d84kSmQts;!e,sQ;!ti0M2;!e,i1lQs0P2;yn;a0XUcVeUsTtQx,ze9;e,oQ;saQ;urD;ki,on,teP;k,r;!hiQo0;al,t0Q7;!an0W8iQl0IV;de,ne;eQi1;!ba0LOnRrQ;!a043ed,i1s;!hQne7;eaQ;rt5;eQie,sLVy;ri0LI;a0OJco0A0hu0IEk0QK;ch0TMdQ;!ba0P2caRe0Ehe0I5ly,ne7sQw0H9;!he0KQi0OG;stUZ;a0Sb0Qc0Md0Ge0Eg07ll06m04n01o00sVtQxVK;!aSchAe,i0KTn0IFon0s,tQ;!aQen,le;!ny;!in,nniQ;a,ca;!baBco0WAkStQ;lCoQ;l,w;!eQly;r,t;!c0TMny;!d3e,gRi1kQy;!l0I3mAGs;!er,inIs;!mi1sQ;toB;!i0SN;!aUgs,hRiQ;d,t0QA;am,tQ;!eQly,ne7on;n8r,st;dQnd0;e0i2;!fQ;!ca4DeDFiU1ly,s;al,eTgQie,le;eQi1;!d,he0H9po0D5r,s,tQ;!te;!gro07KsQ;!ma067;e,kQ;!ba0QGed,lQs;ay0RJebQ;er0Q0;eQi1;!d,ry,s;nRrQ;!e0RU;!a,na;a03c02d,eZmYnVr,sUtTu2vi0R7wRzhnQ;ev;!eQi1s6M;d,r0KZ;!hrOon,t;c0RIt;!dRnQt4K;a0HFer;a0HEon;eFLn2;!ch0NYdRla0NJn,zQ;e9y;!er0i1s;ht,k;!ch0TKdYkUm,stTthQ;!aReMWi1le0GYs,taQ;ki1;b3lyz2;!ed,feedNp4Ms;!aSdRer0fa0TEinIne0JNoZFpQs,throu2Eup0wIM;oi0UY;own0;b3ge,w0FE;!crumSed,i1sRth,wiQ;nn2;!tic2T;bs;baKc0Od0Lg0Jh0Hi0CkOYm,n05s02t00uZvUwTxt6ySzQ;enEiQ;e0DHlOQ;!dOi1s;lO1nCQ;aTeQi1o,u0SD;!d,hRly,rQs0UC;!m4y;ea0BT;!do;er,n;!isMAs,tQwur0SN;le,on,y;!hRilU5sQ;!er0TPieHy;!er,ne7;!cVdRko,nQs6tGS;an,ig4;!eRiQo0GDs,t,y;!es,ng,sh0TF;d,nQ;bu9H;a,h0SLo;d033l3nQs5thwai0O9;!cSe04Mi022le7pDQsRwaQy;sh0QWve0;!tormNF;hi0IC;!mQ;a,in0s;!a,gQs;!a0B6ed,i1;!bu0O7do0IJen,fRl0FNshQy;aw;ie0I5oM;a,eUh,i1kQ;!eQi0HXne0LR;nRtQ;!ed,i1s,t;!re0I7;!d,l07Hs;a3Xb3Rc3Qd3Ge3Fff3Eg3Bh39i32ja0IAku,l2Nmb2In25o1Ar0Xs0St0Hu01v00wXxWyQzo0;a0CDcUd,er,fTho0JOi0HRkRlQnt6o,s,z;an,e;a,eQ;wi0CQ;rieX1;e,ie,ott8;cP0e07Ki1y;dOeRiL1lQm4sBHt0SQy2;!e07Ii1s;!d,l0n,rYA;a0NNiB;ch04d03gh02ill01lZnUqu074rRtQvi2;!iqHAon,s;b0RJgeoisAQnQse0;!eQ;!m8P;cTdStQ;iQy;es,fKO;!arGed,i1le7s;e0PGi1y;d0OUeQogB;t,va0GS;abais0PNon;!s,t;o0STre6V;aMer;anYch0O5hWox,sVtRuQwP;li0Q6;icel05ZlRomQu;!ed,i1le7s;eQi1;!d,ne0GNrs,s;!wa0FE;!erQwe0KN;!ed,i1s0IH;iQy;cRSst0;cTe,h,l0EBn05AoSsRtonU2un,wQ;e0KIor0HP;!a,e9i1y;m0n;h,o;a01deYeWgVi05Sk,m093nUoSrowRsQ;c0DVtJ;!eLiQFs;n,uQ;gh0;!e0IU;!es,ia0;!al0LAdQs;!om;aB2l083n,rQ;!ed,i1lQs;e7iB;!t,x;bOYd3ed,f,g0Ii1k06l05m02nZp,rYsXtRy0SAzQ;e0Q1i1y;!ed,h0iUlegTsQy;!ie,trQ;apQ;!pi1s;!g0DK;e0ng;!h,tQ3;!i0FYm4;!doQe,iA;cQgg3;ks;!eQi1s;d,rQ;!a1s;!a,e4;!bi00caZeYiXkWl05EmaVsRwoQ;rm;!eShQto0D3;elQop0;f,vA;ll0N9;kKPn,rk0;eep0D2;e0ng0;d,nZCr;se0;nd2;!eQie;r0ym4;a00b0PHdYeXfi0CRgWh052iUjoJNkTnRo,sQus0JWy,zo;ai,o0R2;!eQie,y;!r,s,t,y;!e09U;fQng,t0BY;acZE;!o0;!d,he0CCle7r0s,y;!a0K7ed,hQi1s0KO;old0MQ;!fi0ILnQpar0L0se0OMven0JA;za;!aReLiOWsQ;!heF7;rdQst09My;!ed,iQmeK;er,ng;a0CSd02e01iZlVoTsRtQus;!ed,i1on,s;hQt2I;evik0oi;!gnQ;a,e0N8;!iSoRyQ;!wo0GK;!ck0;ng2;n,vQ;ar,ia0CH;ro,yn;!eQfa0PGi1ly,ne7;n,r,st;lSnRsQ;!e,te05X;g,k;!eQi1s;d,rQ;!pQs;la0K8;aQem02Tm,r;nn6;arRd4eyG9gQie,o0JNs,us;ed,i1lCs;dDt;in,o;i1l,r0uf;aXeWhiViUn0AJyQ;!buRgQwo0Q2;ua0DM;ilQ;di1;ce,e9l06Tne;!sattHL;!ga0n,s;cQw0A5;ioD;a,he,k;a,bScRo,sQ;!l5;at0;iRleQy;!he0AU;!e,nI;rUsStQz;!e085hD4i1loS3m4sQ;!waP;!tQ;!ed,fGVi1s;!dQs;!eLingRroQs,waBS;om0;!hCX;a1He19i0Uo06uRvd,yQ;e,t0MD;bb1Id02eWff8i0D9m0OVnUrSsQth;h0NIterQ;!i1y;!b0rQs,t0KB;ed,i1y;d0UtQ;!eZGi1ly,s;!bTgSpri0OWr,sRtQy;oo0E2;!toBy;ra7;eQi0CLonne0JI;aMll,rrG;!geQ;on0K0;at0LIb0c09g08ke0mkvi0MVnd07oWre,ssVtUuTwQ;!ba0DBeLfi0CThRinIjQn,oT3s,tor07Vup;ob0;aMo3;nt,se0;!t2;om8;dSmQpe079;!be3ReLfGGinQs;!gDR;!ba0DLed,hHYieWlUsQthirs0K3y;!hStRuQ;ck0A1;ainXAre027;ed,ot;eQi0DHu0MG;ss,tHY;d,st;!e03Oie,s;!g09Us;!h,kQs;!aRbuQeLheQTi1s;st0JW;dCge0;gh02m01nYp0sVtQzza0BT;heTzQ;!eRkriQ;eg;d,n,s;!ly,ri1;sRtQ;er8;!fQ7;dQg,k6X;!eLfoldWPi1ly,ne7sQ;!ideF;ey,p;!tQ;!eY5;aUch,d,eSh,mRndLVssQtchl09Du,w;!e0M1iLN;ish3S;ck2dQpGW;!er0inIs;chRkQry,tGU;!eG8;!eLi1;b0Kck08d07h,i06keEm04nXrWsUtRzQ;e0JRi1on5;aRhQt2;erN;ntE;!e,phemQtLI;e0L8oDy;e9i1n08Y;cUdTe,kQ;!eQiERly,s;d,nQt8;sh089;!er,ly,ne7;!a,hQo;!aMe;!eQi1;!d,le7s;n0MOr0MOse;d0IPe9;!a00bYeXfoIRgWiEHja0BIlUmailTne7oRApoSsRwQy;at2e0ETo0CW;!miDDtoB;ol;!eX9i1;iQo0BD;st8;uaM;d,n8r,st;all0HWeQi0AEoa0AEuK4;aMrrG;dd2;!bQ;eQi1;d,rQ;!i1m1Y;arBoJX;a2Lb2Gc27d24e22f20g1Thar074j0A5k1Rl1Em1Dn15o0Kp0Hr08s02tTval0DTweek0IHxSzQ;arrQra0GHzy;eEo;by;cVe01Ri1s03CtRumQ;en,iYN;eQoo,u,y;!n,rQ;!ly,m4ne7roI2sQ;!we0A4;hRoQ;in0;!e0KIinIy;bTScUeNKhTl07SmRon,q05UtQ;!ro;ar0AMiQu0B5;ll0M6;!op0;ayBotYCu0AO;ch,dWgUiya3Wju,kSminRo,thQya3W;!d03Xed,i1ma0M1pUDr07As;ghZO;!enQho0M5o0M5;au;er,itQ;!t0DC;!braPca0EXee,h9Eie0m4sQwe0DNy;!e5o1;artisQheny19ol069;anQ;!sh06Q;chemi08d05e02feedba0A6graph00hazaMlXmVn0FPpUsRtechQ;!nolVL;!ciRpQ;heH;en0GZ;sy;a7eQ;!dUFtr0EB;!ogQ;iQy;c02Hst0;er,iQy;cKEes;ngQthiKO;ineeQ;ri1;egradRiverQ;si0GQ;ab3;cJstQ;!ry;aVdTe,gSk020oQs;cuQmiJ;la03N;!e0hYQl06Mo,um;!erPRiQs,u;ng0ya;rGtiQ;onJ;bZOonth0GT;a01b00derYe,fr4ge,inXk0HIlRoxi,tQ;moH;!aUbTe06ViRoQs,u,y;n,wN;a08De,ng0onQ;!ai064s,th;oa08B;!b3;guJ;beQ;rg;ao,o;l,ter0GL;e0GQinQ;g,i0;amVel08BfoG6gThoHSmSne7otRsQti0A5wig0;!hG5;!ed,ry,s;ou09D;eCYiQlAs;e0ns;i0IAy;f,ocaQurcZE;ls;b2nQr;!niJ;dReQiBEs,we0BY;!n,t;er0i1le,y;aUeSkRyclQ;e0iOO;!erD7m4;ntenQp0;niJ;mSrbQ;!oQ;na0DT;erJ;a,bX9erkopf,i,lQs;e0iQ;cJographQ;iQy;c,es;nRo,rriGAsQt02P;!e0HX;cQnuJ;a,hQo;e,i;aTiSoRuQ;sh4t4v4;la,pJ;m,sh05L;b0BKg07IiRl0FRnQr07Isk03Wu,va1Ay0D8;g0GYu;!ja4rRyyaQ;!ji;av;fs;a4Wb4Uc4Qd4Ee40f3Tg3Lh3Bi3AjesDk39l2Dm2Cn1Lowu1Kque1Jr0Rs0FtZul0JBvVwRyonQ;ce,d;aHiQ;lderRtQ;ch0FS;ed,i1meKs;an,eQin,y;l,rQ;aPYlQ;ey,y;a04cZ4el,h01i00o,rYsXtSwQ;eOiQ;xt;a,eSiQs,y;e,nQ;a,g;!rQ;!ed,i1meKs,th4;!ey,y;ayQoth0BX;!al0eT1i1s;de,na;!a010eRlehQ;em;l,s0CG;!diBs;eYiXoWpVsUtQ;!eSiRow8sQ;ell03Z;al92e0;d,r,st;!ie;ectacl5o3G;tt5;de0eg0HB;eRtQ;!ti1;ch0DC;atCb2chtesgadOe0Cg07i06k04l01m00nUrGserk03tRwi06OylQ;!li02B;!a,hRi00Uo,raQ;m,nd;!a,e,i2s;!aTd,e,haSiRsQ;teP;ce,e,ni;rd0HJ;dAArdQys;!es,i04Po;!an,u0BR;inRuscoQ;ni;!er;!el03Dl03DoEDsQ;hiH;ng,t;!dTeRhQin,m4;of;n,rQ;!ac;orf;!aveTft,nSsRtQ;!s,ta;foM;i0GFs6;d,meK;ath0CJst;lf;a0Ech0Dd0Ce01foMg00iXjWkVnToSry,s09FtRzQ;!eBi;!e,l02Wo038;!it;!et0GTiQy;!e,g4ngFX;ei;amPi0GRy;!gRn,tQ;ez,o;ht5nE;!al01Mha0EDt;!a061dXfSlRs,vQ;olWD;ux;aTiQ;ciaRtQ;!ed,i1s,t0FW;lErG;ctYO;etKSictQ;!iQ;ne,on;!eLi1s,y;!e0EZl02Amark9W;!drQ;yl;oan0D9us5;a0Jch0Hd0Ge0Df0Cg0Ai05kPlUmoKoStRuQvedeHyi1;ga;!ed,hU8i1r4s,w00U;ngQv0BMw;!ed,iEDs;!aZbELeXflWh01ViTm4oSs,weWXyQ;!achXWbuQf7T;tt6;!w9K;!cRes,gereKnQ;g,i;k,o0CS;ow2;!fle8Ir,s,vQ;il3ue;!don02PgODmy,s;eRn0A0tQve,ze;tl0CZ;!d,f0s,vQ;ab0BDeQinI;!d,r0s,th;iQra07J;an0um;a0DYry;aguRi076nQ;!ko;er5;en,on;!eQi1;d,r,s;!bRIrDtQy;edE;a,ir;ge,ji1n1Pr7R;aUeTiJ0oQrooz;ldQo06NvA;!eQ;n,r;ad0C6ld,mo5Xst;lf,vQ;e9iQ;ng,oQ;rQur04I;!al,i0DEs;aWet0gVinToSrudgRs,uQ;ilWTm,n;e,ing0B8;ne,ttO;!i1nQs;er0iD4;ar0ed,inI;n,t;allVe06YitUorSrieRuddQ;leF;nd8;!eQ;!ha075;s,ti1;!en,s;be,ch02fZhi067j,kXlWmVnIKpUr0sStQ;!hQle0roANs;ovO;!wQ;ax;!eP5i1l1s;an,er;iBzebub;eQm4;ep2;!caRed,i1sQy;!teSB;ke;!am,er,wo04H;bug0cha00d0DKeZfWlS9ouPpVrSsQti049;!hee092i062pQ;reZP;iRoQ;ck,om0;ddO;an0o0CE;eQoM;llQ;ow0;!vil09E;mb2;aSca,kQom88ua0AQ;!eQhRWm4on8s,wi037y;r,t0DQ;!lm5me,u0AN;a,e,oQ;!p;c0Ld0Kg07Sk0Jl0Im0Hn0Dr09s07t00uRvQ;!er0is;!cVfoV3jola06WlUmoKregaMtQx;!eoDiQy;ci4es,fQ;iQulEy;ca0AM;ieu;haRoQ;up;mp;!boVdoUeTinSle0nRriQs,ty;ce,x,z;ik;!g0;!n,r;wn;xi1;lZ5tQ;!a090ie,ly,s;!ab3dRer0iQs;ng0sh;!ed,sQ;!lZ0;!bSie,o,po3sQ;!taQ;lk;ag;!eNMi1s;e,s;!er0s;!ed,le,s,y;hQon0;!e0BFfQheYC;roK;al,b6Tc5Rd5Ke5JfflCg5Eh5Ai51j4Xk4Rl3Um3Qn2Xp2Ur1Ds0Rt02uYvarPNwXxt2yRzQ;aXJe,oo001;aMi1lToRrQQs04Ju,wQ;atW1;nQu0;!et0ne;iQor;n,ss;dy,k,l09I;b06KdSer,ji,mQxi06S;!aQer;nn;!elaiH;a,c0De0CgiARh05i04m02o01sZtQ;!aXeUi1lQs,y;eQi1;!d,fRgr60m075sQ;!hXKtX3;ieXY;d,n,rQ;!ed,iD1sQy;!ea;gl08Fli0AL;!hQm4;it;n0u;an,oQ;bi3;atDk,st03S;!eVhUi1roTsStRwQ;at2;ub0;!heQK;be0om0;ou08N;!d,rs,s;!d,m4s;a03Bh04L;a0Ae05h03i00kWqVra,sTtQ;!aRe09UiQogB;an,en,l3on0;!rd0;!am,et0BHiQo03Z;nZPst;ue0;!eQi1;d,rvRtQ;!ba00s;il3;a,c00MlQnCEs;!iQ;ca,o;!a,eLf31iQ;ng,r;!bSd,lRmQna01As;an,e0BD;!e7i00K;aQoaZ4;ll0;l0B0nNQ;a15b0Tc0Sd0Re0Pf082g0Ni0Mk0Jl0Im0Gn0Co07rZsYtSuUGysQ;hnikQ;ov;!eUhSleRoQs;k,n,wsVU;by,t0AU;!olomQ;ew;ndWPrN;!tZ1;!aVeUiSoRyQ;!moH;n,om,w0;cade9eRTng9Ro0sQ;!t06O;!d,l47n0t0AK;!cQgeFtt;k0u04T;metTnRqUKsQ;ky;!eQs;!ss,t;er0r04T;!aReQs,um,yaM;s,t0ABy0;bQc04Grd;as,y;aQy;id,n;ey,ow;!eRi1lW6sQ;!da3;d,ep,r;!ng,s03YtoBum;aQe9i1;in8;!bQd,fo65il,ly,s09Z;aYVonA;!en,ot;a,eloWVlUNo01V;!aWeTiRosQra,s;a,sa;e0turQ;atA;cuCd,qTUrQ;!a,sQ;!hVK;!d067rQ;a,iSoQy;sQus;sa;an0c,sm,ty;!bb015ck,k,n;tiQu;sQzeF;eFm8XtJX;a0Gc0Fd07e06f1Og03is02jo,kYnUquTsRt2u,y4zQ;ai;!hQi;ee0;et0o;eRiQon,s;ng,st2;d,rQ;!m4s;!ab3caMeLi1notArQsQI;oRuptQ;!cGed,i1;ll066;hFVt2;!aloHeLinIkRlQor,s;adeshU0e0;ok;!rjGZs;!aVeJPiTo,ra,sSwQy;ag6idQ;th0;!ta01E;!ed,ng,tQ;!ry,s;!ge9nQ;a,na;!a,o,roIU;!lQna0;!i04L;a,bQ;a,iRooQ;!s,zl5;!no;a0HbUKconGd0De0Bfo18i0Ak06lVmUoTraSsamRMtQu,waKzGQ;ar,hazar,iQo;c,moH;j,m;nUFo;!orJy;!aYeVgaYHiUoTpRroKCsPOu,yQ;!hoo5;a08RlQoiK;ay04C;n,on8t1V;!nIst01G;!d,rQt0;!iQ;na0;d0nQrd,st0;tiB;!anRed,iQs,y;!ng;!iQs;za054;!ne04V;!fQs;ul;!eRiQly,ne7riWRur,wPy;e,ng;rQv;!daW6;!cTg4ji,nQs;!cQ;eQi1;!d,r,s;laR;eRi1ka,laQs006u;va;!d,rQs,waH;!iAsQy;!fQ;ieW1;aSorRrangQ;baKUi;!an0;!j;iXlTnRrQt8;d,n;!brQes;id00R;!eSiRl06SoQs;ut;ff0ng,wiW2;d,y0;!u;aQia,raPt;dRmQr;as,i4;ur;cZJdSLel0gRhdSLi,lSZm4piHGrL3s,uQweZ7;et01B;a00FeHOiQy;e0nQ;g,s;g,k,r,z;aVdTe052geSlRmQne7ri,sh07A;int6ouW7;anF0y;!d,r8s;eQiA;r,st;!ss;a0Pc0Nh0LillDkSon,teriQ;aQum;!l;!ac2Eb0Fd0DeLfi0Cg0Ah08i1l06p04roIIsWtUuTwQyaUK;aQooER;rdQsh,t02J;!ne7s;p0s;o,raQ;ck03F;!eUUi01QlWtQ;aToSrQ;eUIoQ;ke,m;p,ry;bbQge;er,i1;idO1;ackQedalN;!i1s;aUGe7i04HogQ;!g5s;aQoe;nd01I;amm6rQ;ou9P;ll,rC;a43oI1rQ;op0;iRoQ;aMne0;ti1;!araP6ch4elorQm4;!et002s;aQhD;laurea000rU5;ll,rQ;di;a,bYcoUGeXiWlVo043s,uUyQ;!fa04WiTXlonSsQ;at,itQ;!tRE;!i5P;!ji,shST;i,oo,u;!es,n;!l,r,s,tZP;an,iRlQ;e0i1;tt;a05Mb01McXTdUVeUGfT6gRXhRMiQCjQ8kPWlLMmJ4nDToDOpBAquB4r7Bs4It31u18v0Jw07x03yTzQ;aRerbaij4iz,orAraAItec0uQ;l,mH0re,sa;d,lea0;aWeUh4lTngSodhZCrRse,uQ;kaRBmi;es,t6;ar4;a,in;ar,rs,sQ;!ha;huasMGko,la,naRtollQ;ah0;mi;eSiQle;omQs;!atZ7s;d,l,s;aVeSfRhi3kward02Hni1oQry;keR1l,m4;ul02F;d,i05EsQ;omeQtruTI;!ly,ne7st;it8keUrQsh,y0;dReQ;!ne7;!eQi1s;d,es;!n8s;a06e01iXnWoSrQ;aQil;hIGm;caSidQn,w5;!aQed,i1s;b3n03M;do0ti6;er,i;aRdEgn6naSKoQs,vJB;ni3W;n,tQ;i6or0;c,nSrQ;!agCsQt8y;!e,i6;gQue0;eANi1;iTlRntOWri03Ast,tQ;ar0;ancQon;he0;iSlQ;!abQed;ilFIle;ab03A;b1Fc1Bd12erbaN5g0Wld,m0Vnt0Ur0Rs0ItQxiliF0;h05isKIoQumn34;!b00craZgraphCUimmuBlycDmUnomTpRs,tropQ;hs;ilQsG;ot;ic,oTQy;aRoQ;biXMtiV5;k2tQ;a,e9iQon;cSPng,on;cy,tXS;aSiographQot0;iQy;cJes;hn;!enticZorQ;!ed,iRsQ;!hOL;ng,sW1tRzQ;a004e9i1;aQiAy;rRtiQ;veE;ianQ;!i00K;!atQiYV;eFi02Qor;chWpicVsUtQ;eSin,rQ;alQiaR7;!asZ6iaR6;n,rQB;ie0;es,ioD;wiQ;tz;a72eliRoQum;!rUI;a,e,o,us;!ie0s,y;ea;eUgie,h02Hie,meSuQ;r0stQ;!a,e,in02Go,us;ntQ;!aZJed,i1s;lIJr0;aWiRrQ;a,ey;!blY5enY3oTtQ;!ed,iRorQs;!iMSs,y;ng,on8;!philAtaCNvisuJ;!ciQ;oDty;h,kStionQ;!eQi1s;d,er0;laUJ;erRrNZuQ;rn;giB;a15e14h0Xiv4kin0Wl0Tm0Ro0Mr0HsusUGtSwRypQ;icYC;at2oS5;a07eZhe,iVornUrQun5;actSiQ;butQti6;ab3e9i01N;!aKed,i2Is;ey0;cSlRre,tudQ;e0inJ;a,io;!a,s,us;mpt8nQst8;bUdStiRuaQ;teF;on0veZ7;!anT6e89iQs;ng0;orQ;ou023;!bVcSgiRinQ;!ab3d2ed,i1meKs;rl;hRkQ;!eLi1s;!e9i1me01E;oy;eidAiToQ;ciRn,pQ;hy,iB;oDtG;aPDum;ll,mRneQp;!meK;!iQs;c,zQ;aY0ed;ospherQs;e0ic0;aQeaZ7;ntQsTP;a,i3C;!sT6;eRletQos;e0icY7;isTPlTnRrQ;!t6;aQi0Ts;!eL3;st4;li2;caN0ri,vDxWT;a2Fb2Dc28e27gard26h1Xi1Vk1Tl1RmodeDp1Gs0MtYuXweSNyQ;lVmQnchroD1sto3;metrSptoQ;mQtUR;atUQ;icQy;!al;um0;ka,nd2s;a0Cer0Ahma09igma08o03rRuQ;teXW;a00iZoQ;!lVnRphysicQ;iYHs;autRomQ;er0icWHy;!iQs;cs;aRogQ;er0icJy;be;dZUngeK;!kh4l,y;nSrRundQ;!ed,iFTs;!ia;!ishQ;!ed,iFQmeK;tiX8;!tSU;!iQn,oA8;sk0x;!iH;a0Ge07hoTNiYoWuTwiSyQ;riQ;an0;pe;agWOmRnT9rQ;anV6eHYi1;e9i1pWC;ciUNrtQ;ed,meK;duXgnWmilZ0sQ;i,tQ;!anQed,i1s;ce0tQ;!sQ;!hiQ;ps;!ab3e5Wi1meZAs;ousVD;mblUntUJrtSsQt0;!sQ;!eXNi1meZ6or0;!ed,iQs;ng,on0veWN;aSDeVIiSyQ;!mKCwQ;om4;es,ng;d,ilRm,nS9ssinQult8y0;!atYMs;!aYXed,i1s;arZeWhTirQ;aRe9inQ;!g,s;nt,tiX4;aRyxiaQ;!tU0;lt;ct0n0rQ;g2sQ;ioUQ;agDtaOI;aQeDUi;m,n;anXOeQinIs,yMB;d,r,w;aMMde0f,mQnQ3o1;!ov;aXby,cWeVfoMiMLlToSrCBtRuW6wQ;inJ5orNL;on,rGH;kD9re;aQMeQ;e,iYTy;!n,r,s;ro84;!m5;!i4;xuJ;eQii,ot,ribe9;nQrtaUWtSA;dQsi6t;!anQed,i1s;cTNt;estosQo;!is;dCUhiKNkQmi,no,p;o,uQ;ra,sa;a3Ab31c2Jd2Ge2Eg24i1Rj1Qk1Ol1Jm17n13o0Wr0Hs0CtTuSvQyaLZ;iQo;d,nF;ba,guUAn;e06f05h02iSoRsETurOBwoQy;rk0;is,o;cWe,fUlTsQ;!an0tQ;!e0icQry,s;!alTO;leRV;aOLicQ;e,iTQ;!hoRle0ulatQ;eECiX0;ke0;rQur;itiQopNF;c,s;ulE;!faOCmQCrQ;!iPTy;eRonQ;!iVLs;!d,hoR2nQs;al0e,iQ;c,de,o;a00eZgh,hythmT7iUoQ;gaSwQyo;!heQs;ad0;nVYte;ba,s,vQ;al0eQi1;!dQs;!erQ;ci;!aFKst8;ignSkPUngQs,y5Q;eQi1;!d,meWPr,s;ed,meWO;maSn,ra,se,uQ;nd,sQ;al,e9i1;!s,tQ;hQic;eraQ;py;aSeRie,oQ;!ld;!tt;ud;aXbaWchaW9eViToRpL5reUJsQy;!tro1;iHrQurQ;!ed,y;es,nIsQtaPI;tiVC;d,n3P;nd0;an,dRgedd6meW4nQ;!dMOi;a,ilQ;lo0;eSiQo;nQss;gt6;nQtQ2;!a,e;aQh9Rin,wrHC;dy,nsN7;un;a00d,eZf,gXra1sRthmQzoII;etPY;!eUi1tQ;iNFoQ;craRtQ;eli4le;cy,t60;!n,s;aQht;to;!l,s;!dBnQs;!a,e,na;entWgh,hVWit,oTuRyQ;lEArOH;aAGe9i1mentQs;!aDAs;!nQsCEt;!aQ;ut0;!inQ;a,eQi4;!an,s;a0nQrUWs,tBHyIX;!a0t;enRoQuoD;r,ur;!nAtE;a05ee,hRo,s,tQ;ic,urD;!aZbishGKdXeViQwFG;baJ9e,medAng,pelaTtectSvQ;al,e9iQ;ng,st0;!s,ur74;go;d,ne1Vol4SrQs,typT1;!s,y;eac6ioceRFuQ;che7ke;eSic,nQ;a,gQ;el;ol4L;dQnM8;e0iaGN;itToQy;gaSOrQ;!eQ;al,tER;er0raQ;ge,rRtQ;eFiU1or0;iQy;ly,ne7;bVchnISfIJgoUi,ki,mTnIsRvQ;!iMJ;!h,tQ;oo;!aOCis;n,rn;!elQMiQs;aG6c8Z;aTeSiQ;!fPUla,nLDtQ;aiB;duL1oD;!culMClFBm4riuQtO4;m0s;a1Ze1Xh1SieT0l1Qn1Po1FpWrStQ;iQly;tuLJ;iRoQ;n0pQ1;cQl;ot0;a11e0Jl0Bo06rQs,u,y;ais03eXiWoQ;achUbaQJpriatSvO4xQ;!imatQ;eAHiT9;eQiT8;!d,ly,ne7s;!ab3eRYi1;seF;ciaThenSnticeQ;!d,sQ;!hEI;dQ6siR0;blOYtQ;e9iLF;al0eQi1;!d,r0;intSrtiQ;onQ;!ed,i1meK;!eQi1meT4s;d,e0;auWeTiQyN;anOMcaQeRI;bOInt0tQ;iRAor;!bRgaN3jaHMsQt6;!auS2;ee,y;d8se;a02lZndStiQ;tQzEI;!e0;!aVeSiQ;cQxLG;es,itLS;cQd;toQ;my;ge0;!lQ;atQ;e,iQT;lTrSsQ;eQi1;!d,meK;!anNZed,i1s;!ab3ed,i1s;!lTrQ;atDeRiP3tQ;meK;l,ntE;achRlQ;ed,i81;iaGB;calypYgXlTpRstQthecaMH;aM9le0olMBropPD;hL6leQ;ctM9xy;it15lo,ogQ;etM7iQy;es,sQzC;eFi1t0;ee;se,tM3;ea,ic;enNJoQ;mb;asNXiTorSrodiQ;siQte;ac;ism0;ds;rQs,x;itif,tuH;cSrtRthQ;etLRy;!heG2meRJ;e,he0;ki,moTrtSsRyaQ;gi,ma;hiDR;a,ic;ri;a4Bbu,c44d3Ne3Gg2Zi2Sj2Qk2Nn27o1Zs1St01uZvQ6wC0xiYyRzQ;io;a,bo91hoVmoHoBpUtSwQ;ay0hQ;eHo;hQiH3;!inI;laQA;o,w;etGoH2;bK5j,nnaBSsQ;!hE7;a1Ae16h0Xi00lYoSs83ti,wQ;eQon;rp;!ineUnQ;!e,iRyQ;!m;a,etKHn,oQus;!ni;!tKX;erQ;!ed,s;!a0Jb0Hc08d06f04g03his4ZllAma02o00paZquXsVtRvirQwBD;al,us;aSheQruOU;sJPtQ;icJ;nk;eptKQoQ;ciJ;at5e0iQ;ng,tG;s,tPQ;ch,xiQ;daK;tt2;en,oBua;reeQungJ;ze;epresQoKD;saQ7;!aXhWipUlimaTomQs;muniOCpeQ;tiQ;tiHJ;ctK9;atQ;e9iPPoKC;riO6;nc2;acteQiotIXodG;riJ;borMSircQ;raQ;ft;eXiHSoVrQ;ax,opoQ;lQmor3G;ogQ;iQy;cJst0;lQny;ogG;a,m0r;!atLDcedePJd,loSnnaRrQs;i1Go;!e,s;pe0;cUgoniRrQ;a,ctic4Bes;sQz71;m,tQ;!ic,s;id0;aVchlu7elUg9Xon,pTwerQ;!ab3eRi1pQs;hoB;d,r;auPO;!mFP;!ri;de,iWkHEmUnSrQth2uk;ak,eQ;xiC2;!ymQ;iKNoEX;alQie;iAoDy;ntK6;a01eYiWoTuQ;alRitGlQm;!ar,l5meK;!iz5ly,s;!tODuRyQ;!anKAed,i4Js;ncEE;!e,hil3Zka,versQ;arG;!aRli,tIQxQ;!aLHeN1i1;li1;!beRlQpHKs;iL6s;lQth;!lG3;aRer,leQ;!s,t0;!ra;aQou,u;!li;a,bJkVl,mRsQta;e,t6;aRe,osQus;itG;!l0tQ;e9iMFor0;a,i;ad,e03i01k00lXoWrUstSuQy;iQl8Ps;shJB;!rQ;om;iQy;er,ly;la9Zra;aGXeK9iQo;a,cQng;an,iz5;or;e,na,oQ;!gr1LplasJE;!lQr8;!a,es,iQo,s,us;c2Jka,nFAq7G;cdotVmTncephaJPstheQuryKYw;siQtHR;a,olQ;ogiLP;iAJoQ;m47ne;alEe0;a03e00hL5iYoWrRs,tKNyQ;!ou;aF2eSoQzej;gyQid0meHDs;noD;!a0i,j,otQs,w0y;ti;!rQv2;i4ra;!aQe;mo;an,rQs;!sQt6;!en,on,s6;!lQ;e,usQ;ia92;estUhoSiQo9N;eMWlQ;laH7;rQvG;!aG3ed,i1m4s;or0rQ;al,y;b0Cc09e07gr0Mhe06is,kPl01mi9Wnd,phyla00rWsUtQ;a,he91oQ;lRmQ;icIWy;e,i1Jy;aK3tQ;asIP;chRkaQ;li;iQy;c,sFB;ctGMxFI;!gesFEly,ogTyQ;sQtFYzFT;e9iQt0;ng,s;!iAoC9ue,y;im;robGFstheQ;sICtGE;hronQonG8;isQ;m0tGB;elQolGA;!le;a1Sb1Fe15herK8i0Uj7Fm0Qn0Mo0FpZritYsterdXtrWuSyQ;gdaIJotroQ;phG6;ck,lSnRsQ;eLVi1R;!dsO;et0;ak;am;!a,s6G;a04e02hXlSs,utQ;atQee;eFiK0;aDZe,iQy;fQtuDD;iQyN;caIDeQ;d,r0s;eTiQoJA;biRtheatQ;er0re;an0oD;tamiAN;d,rQ;saDO;ro;eVk,nUrRs,uQ;nt8r;!al,e,oDphoDtQ;izQ;aI4eFi1;!g8V;ba;esRioQ;!tFA;iaQty;!c;a74i,oRuQ;!niHW;!niQ;a,um;abGIcYdWe,gVnUrTsStQ;!aQy;!bhR;!h,s;!a;!a,o;a,o0;!aQst;!la;aQus;blG9;dYliWnTricaQs,thyISx;!nQs;!a,iQo,s;sm,z5;!ab3dRhotQitG;ep;!ab3ed,i1meKFs;a,e,orQ;at0G;eo;ass01er,iUlSo,ros2YuQ;!laQshIQ;nFUtoEL;eQi1;!r,s;anJBdextVenUguTtRvalQ;enJ5;!ioQ;n0usE;itGoD;!ce,t;roD;ad20;ar,d02lZmiya,nYrVssGSteurUya,zQ;eSiRonQ;!i4s;ngE;!d,meKs;!i7Zs;!aRilQo,u;lo;!n8X;!da,e,o,t01;!fi,gamQia;!atQ;eFi6;eQor;o,us;a3Mb3Bc34d2Ze2Jf2Gg28hambHAi21ka1Zl12m0Yo0Vp0Nr0Ks0It04u00vWw1NySzQ;aDNhQ;eim2;oRsQ;!on,sa;na,sQ;ha;aQey,in,o;!rQ;aQez,o;do;caMmQ;!inRnQs;i,us;a,ium,um;a02erYhWiUmToRruisQus;m,tDA;!geQn,s;th2;an54;mQpla5YtuE5;et2;ea,oQ;!uJF;!aCAcaFSed,i1natQs;eRiQor;ng,on,veFZ;!d,ly,s;!r0;aQo;ce,ti4;ea0FigQ;htQ;!y;aWeVhQiBs;aQonF9;!betRhIXnumQs;erCP;!icQs;!alE;rt;ca;e,ft,ha,is,k,nQof,rs,t,ud,ysiD;!e,gQso,zo;!siA1;aReiCCighDZoQs,ude50;nd0st;!nQ;ac0;a0Ke08i03oYrWsVuSwoRyQ;!i1s6;rtHF;dCrRsiGEviQ;al,um;e,i1;!piH5;eaQig3H;dy;!catTtSwQy0;!aQed,i1s;b3nDG;!ed,meHUs,tH1;e9iHIor;!anDDe9gSs6teraQ;tiQ;on,ve;atQ;or0;!gXlWnUrgSs,vi56yQz;!s,wQ;ay0;en0iQy;c,es,st;!bQde;uBTy;e,uDL;aE7eSheZiRorQr2C;icJy;anCYng;!dEs;!hQn,yE5;!ab2Ou;!liQ;!n4J;aVbi0cUenTgSke,moRn8VsQtt3ve,x;a,e,ha,on,sa,taH3;ny;ht,nH3;!at4Ns;e,ia;!s9R;aWeTieSoQy;!nQrithm0;quP;rs;braRrQ;ia50n6;!ic;e,l;aRie,onsQred7D;e,o;!lfa;c04i03j02k00na,pZrt8sYxQyk11;!aSeRiQx;!a,s;i,y;!ndQ;er,rQ;a,e,ia,oQ;viQ;ch;!sT;h,po;!sQ;andr,ei,i;andr19;k0Nst2;!k;a,eSoRriQ;ch,d9In;!us;n,rQ;!m1F;aUhemTi7UmeBoQ;holQtt,ve;!iQ;c0sm;iEFy;trQz0N;az;aXeViUrTuQy;mRquerqQ;ue;!in,s;ec1Big1B;e,n6Don;it,rtQ;!a,i5Zo;!nRtQ;ro7;!ia3Sy;ba01c00dZiXk,mVnUrRsQykY;!ka3QtaFI;c6ic,mQ;!ed,iQs;ngEst;!a,is;eQo0;da,in;!kQn;um;dPin;k,riB0;ma,st2;aYbXeWhViTl11rSsQ;el,hQ;ay;am,on;ba,ko,mQn,o,ra,ta,ya1H;bo;enatOil;c7Emi,rs;ar;gi,ne,ri,shRtsuQ;ki;!i;aSit,ju,oRuQ;m18s6N;b,ke;r,x,y;coh0Yd0Vg0UhaCKk0Sl0Qm0Nn0KrTsRtu,yQzu;a,o;hQle0;!a,war8Q;b0Dcra0Cdr0Be9f04he03i1l00mZpXsTtiSwQy;aQorthi1I;vAy0;g04me;!hSpRtrQ;ip0;aDOe5;ip;la3PoQ;rt0;an,en;e7iQo32;ft9OneQ;!r0s;ad;aVieUl2CoTrQ;a45eQ;igQ;ht;il,rDB;ld0;re0;op;ft0;aRendQorBus;er0i1;g0se;hRo,slQt,u;ey;oa;eRi1leQs;ssE;d,e;eQi1meDSs;en,ro9U;aQen,o;wa;ht,oo;aReQi1s;!d,n,s;!n;oi;aZeYhhWjuTmRoQso0P;ld,ra,y;ad,eQ;d,t;mRssQ;hi,i;ma;!hQ;!hDR;ad,m;b,na;a0Ve0Tg0Lh0Ki0Gl1An0Do05rUuQ;a,iRstP;in;lQrH;ar,eAV;aZeeYiRoQ;!u5D;busiVcSppQ;a,iQ;na;o3uQ;lturQ;al,e;ne7;!ab3d,i1meCUs;!ri4;g,nVraSsQ;!tiQ;no;!pQ;hobiQ;a,c;iQy;es,z9N;eRieszQost5K;ka;sCAta,w;lSnItQ;atQ;eFiC0or0;e,i83;a02h;ie,rQ;avUeQiev5o;gSssQ;iQor0;on,ve9R;at7Cor;atQ;e9iBQ;d,i1le7nQr0s;cGda0t0;inRmemn6pe,rwJs3TtQ;a,e,h3P;!st;ar,e0Yf0Gghan0Di0Al08o06r02terQ;!a3Yburn2effe31gl00liZmaXnoA9shVtSwaRyQ;ou;rd0;as60hQ;at,e,ougQ;ht0;a38oQ;ck0;rkQth;et;fe;ow;a05eSiQo;caQkaa7O;!n0;sh;ot,reQul;!m9Bsa00;a1CoQ;at;cionaReQre,s;ld;do0;!iQs;!sQ;!t4;a06ect02iXlTordSrQ;aQoK;id;!ab6Ned,i1s;eSiQueK;ctQ;!ed,iARs;ck;davTliatSni6PrmQx9G;!atiQed,i1s;on0veE;e9i98;it0;!a7Sed,iQs;ng,onQve;!aQs;teE;b3ir0;r,w;g01rTsQth2;op,thetQ;icQ;!al6Qs;iJoQyn;!b3KdVnauTplaSsQ;miQol,pa9O;th;ne0;ticQ;!al,s;ro0Aynam3E;eRisQ;!s2O;an,us;a2Dd22e1Uh1Oi1Kj1Al2m0Wn4o0Or0Gsl,ul0BvQwaH;an06eViRocaQ;cy,tC;ce0l,sQ;ab5OeRi1orQ;!iAs,y;!d,meKr0s;ntVrQ;b0sTtQ;!iQs;sQz97;e3Yi1;ar2IeEi5N;!i84urQ;eQi79oD;!r0sQ;!oQ;me;cStageQ;!d,oQs;usE;e9Ni1;a6LtQ;!erRhoQs;od;at5eQoDy;r0ss;eViRoQ;itE;!aRc,enQft;!ne;!nQt3M;!a,na,o;nalQss;!in94;be,lVnUptTrQ;aRe9i1nQ;!ed,meKs;b3ti6;!eLi3Ns;ai,is;escen0OfQph8X;!o;an,iRoniQ;sh7Iti7D;nWrTssiStQ;!s,tQ;an84edEi1;b4Gon0;aQe5Ci1;bl4JlQti6;!s,ty;!istQ;er8ratQ;e,iQor0;ng,on0veE;er;aYecWoUuQ;dSnRstQtaK;!ab3eLi1me8Ns;ct0;g5ic84;inNurnQ;!ed,i1meKs;tiQ;ve0;ceK;dSeu,l,na,os,pRtQ;i,ya;ex;as;am,d,eQ;rRsiQ;ve;eQi1;!d,nQs;ce,t0;biWlSm,nRpt,quaQ;cy,teE;!iB;!aRe,inQle;a,e;!iQ;de;si;aZeViSl5o40ressQs,y;!ab3eQi1;d,e0s;ctRe,ng,s03tiQ;on1Fve0;!ed,i28s;d,ndSrQ;!aQ;ll;a,um0;ms;cYge,ir,liXmUptQ;!aSeLiQor,s;ng,on,ve;d,r0;b30ti5T;!aRsQ;!on;!ntE;nd;hi;a39c1Kdbenti31e1Dh17id15k10lu,me,ne,o0Wqu0Nr0BtTuQ;i30mOpuncQteE;tuH;re;ed,i00oZreXs,uaQ;lTrRtQ;e,or0;iQy;al,es;!iQly;ty,zQ;a3YeF;ssQ;!es;n,r0;nIonUvQ;atSe42iQ;sQtG;m,t0;e9i6Eor;!ab3s;!g;eZimWoRylQ;ic0;batTnSpQss;olQ;is;ym0;!ic0s;onQ;ioDy;us;!aQs;ge;aintXiQ;escUrTsiStQ;!tQ;al,ed;ti3Y;e2Oi1;eQi1;!d,n5C;!an1Red;lytArn0sSustQ;icQ;!alEs;ta;erSnowledgRroQ;yd;e5Xi1me5Z;!m4;an;!iQs;c,ty;arUe9iQm5oo,tu1u,y;evRlQm,ngE;le0;ab3eQi1;!d,me5Qr0s;ya;d,rUs,tRveQ;da;aRic,oByQ;leB;te;!bQ;ic;e0Uident0Tl0Oo03rYuQ;mulatVrTsQ;atQe1Ui1tom0Q;i3PoQ;ry;aQs5;cGteE;e9iQ;ng,on0ve;a,eRuQ;al0e9i1;ditRtQ;e,i6;!a21ed,i1;la09mZrdXst5uQ;ntTteQ;rmQ;enQ;ts;!aQed,i1s;b0FnQ;cy,t0;!an40ed,iQs;ngEon0;modXpQ;anSliQ;!ce0shQ;!e37i1me4Q;iRyN;!i1;e34meK;nt;atQ;e9i49;de0;aSimQ;atQ;ed,i6;imQma1C;!ed;!alEly,s;dCler04nt02ptVssQ;!e2SiSorQ;iQy;es,ze;bQng,on;iVle;!aQed,i1s;bRnQ;ce0;iRlQ;e,y;liQ;ty;!ed,s,uQ;atC;aSomQ;etQ;er0;nt,tQ;e9i3Eor0;cXdRpulQ;co;emQia;e,iQy;a,cQes;!alRiaQs;ns;ly;ia;a3Eb35d2We2Mh2Gi29je28l25n22o1Br0Zs03uUyQ;dSsQ;mQs;alE;os;eXndUsRtQzz;!s,ti1;eRiQ;ng,ve;!d,r0s;anQ;ce,tE;!ly;la;c0Jen0Fint0Eo00tSurdQ;!iQly;st,tG;aVenUinTrQ;actRuQ;se;!ed,i1As;en23;ti18;inQ;!ed,i1;iu01lVrQ;bRpQ;ti6;!eQi1s;d,nQr0;cy,t;utRvQ;eFi1;!eSiQ;on,sQ;m,t;!ly,s;teQ;iy;he;ce0tQ;!eeQia;!iQs;sm;e7oQ;nd5;aWea0GidVoUuQ;ptRzQ;zi;!ly,ne7;ss;ad,g1N;geF;!cadShRm0siQ;on0ve;am0;abQ;ra;aMde,li0Amina07r00uVveQ;!bTmQ;entiQ;on5;ed;oaM;!nd8tQ;!s,yQ;ouQ;!r;!ed,i1s;igUtQ;!ed,iQ;ng,onQve;!iQs;st;inQ;al,e0;b3tiQ;on0;le;shStionQ;!iQ;st0;!eQi1;d,s;rd;er,ormQ;alQ;!itGly,s;aReQy;!r,st;!ze;ct;dCgaTlQ;eBitG;iAy;es;il;e9i1;!d,s;ay,iTorQ;!reQs;d,nQ;ce,t;!manyu,shQ;ek;d,l,nd,rUtSyQ;anQ;ce;!tQ;ed,i1;!crombTdeOnRraQ;nt,ti6;atQ;hy;ie;el,icVomTuQ;ctRlQ;!l0J;!ed,iYor0;en,inJ;al;atQ;eFiQ;ng,on;a0eWiVotUreviQs,y;atQ;eFiQ;ng,on0;!d;!t;!e;!rQss,y;liB;cZdd6loBndonTtQ;eRi1toQ;ir;!d,meRs;!ed,i1meQs;nt0;!s;ng;ne;on;k,us;aYcVgUhTliySng,rQ;av,dvaQgh,on,ti,u;rk;ah;hWs;e,h;cRhO;en;ff;aSgh,hQrT;!hQ;!h;aRgh,h,rQ;gh;aQh;ah,h\";\r\n\r\nvar corpus = Object.keys(unpack(compressedCorpus));\r\n\r\nvar corpusIndex = {};\r\n\r\nvar i = 0;\r\nfor(var word of corpus) {\r\n    corpusIndex[word] = i++;\r\n}\r\n\r\nexport {corpus, corpusIndex};","import traverse from './traverse.js'\n\nconst unpack = function (str) {\n  if (!str) {\n    return {}\n  }\n  //turn the weird string into a key-value object again\n  const obj = str.split('|').reduce((h, s) => {\n    const arr = s.split('¦')\n    h[arr[0]] = arr[1]\n    return h\n  }, {})\n  const all = {}\n  Object.keys(obj).forEach(function (cat) {\n    const arr = traverse(obj[cat])\n    //special case, for botched-boolean\n    if (cat === 'true') {\n      cat = true\n    }\n    for (let i = 0; i < arr.length; i++) {\n      const k = arr[i]\n      if (all.hasOwnProperty(k) === true) {\n        if (Array.isArray(all[k]) === false) {\n          all[k] = [all[k], cat]\n        } else {\n          all[k].push(cat)\n        }\n      } else {\n        all[k] = cat\n      }\n    }\n  })\n  return all\n}\n\nexport default unpack\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import {corpus, corpusIndex} from './corpus.js'\r\n// const {corpus, corpusIndex} = require(\"./corpus.js\");\r\n\r\n// const proj4 = require(\"proj4\");\r\nimport proj4 from 'proj4'\r\n\r\n// 3857\r\n// var projectionBounds = [-20026376.39, -20048966.10, 20026376.39, 20048966.10];\r\n// const projectionBounds = [-20026375, -20048965, 20026375, 20048965];\r\n\r\n// 3395\r\n// var projectionBounds = [-20026376.39, -15496570.74, 20026376.39, 18764656.23];\r\n// var projectionBounds = [-20026376, -15496570, 20026376, 18764656];\r\n\r\n// 32662\r\n// var projectionBounds = [-20026376.39, -9462156.72, 20026376.39, 9462156.72];\r\nvar projectionBounds = [-20026376, -9462156, 20026377, 9462157];\r\n\r\nproj4.defs(\"EPSG:3395\",\"+proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs\");\r\nproj4.defs(\"EPSG:32662\",\"+proj=eqc +lat_ts=0 +lat_0=0 +lon_0=0 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs\");\r\n\r\nvar boundsX = (projectionBounds[2] - projectionBounds[0])\r\nvar boundsY = (projectionBounds[3] - projectionBounds[1])\r\nconst blockArea = 4; // 3msq?\r\nconst corpusSize = 58215; // words.length\r\n\r\nexport class OpenGeoWords {\r\n\r\n    // // EPSG 3857\r\n    // static project(lonlat) {\r\n    //     var x = (lonlat[0] * 20037508.34) / 180;\r\n    //     var y = Math.log(Math.tan(((90 + lonlat[1]) * Math.PI) / 360)) / (Math.PI / 180);\r\n    //     y = (y * 20037508.34) / 180;\r\n    //     return [x, y];\r\n    // }\r\n\r\n    // static unproject(meters) {\r\n    //     var lon = meters[0] *  180 / 20037508.34 ;\r\n    //     var lat = Math.atan(Math.exp(meters[1] * Math.PI / 20037508.34)) * 360 / Math.PI - 90; \r\n    //     return [lon, lat]\r\n    // }\r\n\r\n    // EPSG 32662 (equirectangular)\r\n    static project(lonlat) {\r\n        return proj4(\"EPSG:4326\", \"EPSG:32662\", lonlat);\r\n    }\r\n\r\n    static unproject(meters) {\r\n        return proj4(\"EPSG:32662\", \"EPSG:4326\", meters);\r\n    }\r\n\r\n    static getCorpus() {\r\n        return corpus;\r\n    }\r\n\r\n    // static longToByteArray (/*long*/long) {\r\n    //     // we want to represent the input as a 8-bytes array\r\n    //     var byteArray = [0, 0, 0, 0, 0, 0, 0, 0];\r\n    \r\n    //     for ( var index = 0; index < byteArray.length; index ++ ) {\r\n    //         var byte = long & 0xff;\r\n    //         byteArray [ index ] = byte;\r\n    //         long = (long - byte) / 256 ;\r\n    //     }\r\n    \r\n    //     return byteArray;\r\n    // };\r\n    \r\n    // static byteArrayToLong (/*byte[]*/byteArray) {\r\n    //     var value = 0;\r\n    //     for ( var i = byteArray.length - 1; i >= 0; i--) {\r\n    //         value = (value * 256) + byteArray[i];\r\n    //     }\r\n    \r\n    //     return value;\r\n    // }\r\n\r\n    static encrypt(number) {\r\n        return number;\r\n    }\r\n\r\n    static decrypt(number) {\r\n        return number;\r\n    }\r\n\r\n    static generateWords(lonlat) {\r\n\r\n        var xy = OpenGeoWords.project(lonlat);\r\n        var blockX = Math.round((xy[0] - projectionBounds[0]) / blockArea);\r\n        var blockY = Math.round((xy[1] - projectionBounds[1]) / blockArea);\r\n\r\n        var blockPosition = blockY * boundsX + blockX;\r\n        blockPosition = OpenGeoWords.encrypt(blockPosition);\r\n\r\n        var part1 = Math.floor(blockPosition / corpusSize);\r\n        var part1r = blockPosition % corpusSize;\r\n\r\n        var part2 = Math.floor(part1 / corpusSize);\r\n        var part2r = part1 % corpusSize;\r\n\r\n        var part3 = Math.floor(part2 / corpusSize);\r\n        var part3r = part2 % corpusSize;\r\n\r\n        var part4 = Math.floor(part3 / corpusSize);\r\n        var part4r = part3 % corpusSize;\r\n\r\n        if(part4r > 0) {\r\n            console.log(\"remaining \" , part4r)\r\n        }\r\n\r\n        return [corpus[part1r], corpus[part2r], corpus[part3r]];\r\n    }\r\n\r\n    static generateWordsString(lonlat) {\r\n        var words = OpenGeoWords.generateWords(lonlat);\r\n\r\n        return \"///\" + words[0] + \".\" + words[1] + \".\" + words[2]\r\n    }\r\n\r\n    static parseWordsString(text) {\r\n        var text = text.replace(/\\s/g,'');\r\n        if(!text.startsWith(\"///\")) {\r\n            return null;\r\n        }\r\n\r\n        text = text.substring(3, text.length);\r\n        var words = text.split(\".\");\r\n\r\n        if(words.length != 3) {\r\n            return null;\r\n        }\r\n\r\n        var part1r = corpusIndex[words[0]];\r\n        var part2r = corpusIndex[words[1]];\r\n        var part3r = corpusIndex[words[2]];\r\n\r\n        if(!part1r || !part2r || !part3r) {\r\n            return null;\r\n        }\r\n\r\n        var blockPosition = part3r * corpusSize * corpusSize + part2r * corpusSize + part1r;\r\n        blockPosition = OpenGeoWords.encrypt(blockPosition);\r\n        \r\n        var blockY = Math.floor(blockPosition / boundsX);\r\n        var blockX = blockPosition % boundsX;\r\n\r\n\r\n        var meters = [\r\n            blockX * blockArea + projectionBounds[0],\r\n            blockY * blockArea + projectionBounds[1],\r\n        ]\r\n\r\n        var coordinates = OpenGeoWords.unproject(meters);\r\n\r\n        return coordinates;\r\n    }\r\n\r\n    // reverseCalculateParts(20, 25000); // TODO test\r\n    static reverseCalculateParts(blockArea = 3, corpusSize) {\r\n        var maxBlocks = boundsX / blockArea * boundsY / blockArea\r\n\r\n        var parts = 1;\r\n        while(maxBlocks > corpusSize) {\r\n            maxBlocks = Math.ceil(maxBlocks / corpusSize);\r\n            parts++;\r\n        }\r\n\r\n        return {maxBlocks, parts};\r\n    }\r\n\r\n    // reverseCalculateCorpus(3, 3); // TODO test\r\n    static reverseCalculateCorpus(blockArea = 20, parts = 3) {\r\n        var maxBlocks = boundsX / blockArea * boundsY / blockArea\r\n\r\n        var corpusSize = Math.pow(maxBlocks, 1 / parts);\r\n        \r\n        return {maxBlocks, corpusSize};\r\n    }\r\n\r\n\r\n}\r\n\r\n// console.log(proj4(\"EPSG:4326\", \"EPSG:3857\", [0, 0]));\r\n// console.log(OpenGeoWords.reverseCalculateParts(3, corpusSize));\r\n// console.log(OpenGeoWords.reverseCalculateCorpus(blockArea, 3));","import { OpenGeoWords } from \"../../src\";\r\n\r\n\r\nfunction haversineDistance(coords1, coords2) {\r\n    function toRad(x) {\r\n        return x * Math.PI / 180;\r\n    }\r\n\r\n    var lon1 = coords1[0];\r\n    var lat1 = coords1[1];\r\n\r\n    var lon2 = coords2[0];\r\n    var lat2 = coords2[1];\r\n\r\n    lon1 = lon1 = (lon1 % 360 + 360) % 360;\r\n    lon2 = lon2 = (lon1 % 360 + 360) % 360;\r\n\r\n    var R = 6371; // km\r\n\r\n    var x1 = lat2 - lat1;\r\n    var dLat = toRad(x1);\r\n    var x2 = lon2 - lon1;\r\n    var dLon = toRad(x2)\r\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n        Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\r\n        Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    var d = R * c;\r\n\r\n    return d * 1000;\r\n}\r\n\r\nmap.on('pointermove', function (evt) {\r\n    var lonlat  = ol.proj.toLonLat(evt.coordinate);\r\n    var text = OpenGeoWords.generateWordsString(lonlat)\r\n\r\n    // we get accuracy by reversing the process and finding distance to original coords\r\n    var lonlat2 = OpenGeoWords.parseWordsString(text);\r\n    var distance = haversineDistance(lonlat, lonlat2);\r\n\r\n    var infoBox = document.getElementById(\"info\");\r\n\r\n    if(distance > 2) {\r\n        console.error(\"distance: \", distance);\r\n    }\r\n\r\n    infoBox.innerText = text + \"\\n\" + distance.toFixed(2) + \"m accuracy\"\r\n});\r\n\r\n// console.log(OpenGeoWords.generateWordsString([73.0479, 33.6844]));\r\n// console.log(OpenGeoWords.parseWordsString(\"///final.give.embedded.gulf\"));"],"names":["cache","split","reduce","h","c","i","s","undefined","n","places","range","pow","length","d","charCodeAt","indexFromRef","trie","ref","index","dnode","encoding","symCount","syms","str","nodes","match","t","reSymbol","RegExp","m","exec","slice","all","crawl","pref","node","push","matches","have","newIndex","toArray","corpus","Object","keys","obj","arr","forEach","cat","traverse","k","hasOwnProperty","Array","isArray","corpusIndex","word","SRS_WGS84_SEMIMAJOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","ft","to_meter","ignoredChar","key","testkey","lkey","toLowerCase","replace","defData","paramName","paramVal","paramOutname","self","paramObj","map","v","trim","filter","a","p","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","whitespace","latin","keyword","endThings","digets","Parser","text","Error","this","level","place","root","stack","currentObject","state","mapit","value","unshift","thing","out","newObj","item","sExpr","shift","name","convert","d2r","input","wkt","lisp","output","type","projName","local","PROJECTION","AXIS","axisOrder","ii","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","ellps","TOWGS84","isFinite","outName","inName","rename","cleanWKT","defs","that","arguments","def","charAt","apply","EPSG","ESRI","IAU2000","console","log","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","afterItem","pop","newObjects","WGS84","GOOGLE","global","codeWords","codes","destination","source","property","eccent","sinphi","cosphi","con","sqrt","x","abs","sign","phi","com","tan","ts","dphi","eccnth","atan","sin","identity","pt","projs","init","es","e","cos","msfnz","forward","y","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","names","projStore","add","len","start","get","ellipseName","ellipse","datumName","loadedNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","view","end","String","fromCharCode","Uint8Array","buffer","mapNodes","r","longitudeShift","latitudeShift","readGridHeader","offset","isLittleEndian","parent","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","code","testObj","testDef","some","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","testProj","parseCode","ourProj","projections","datumDef","a2","b2","sphere_","ecc","ep2","getNadgrids","datumObj","datum_type","grids","extend","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","checkParams","applyGridShift","point","Number","NaN","attemptedGrids","subgrid","subgrids","epsilon","del","minX","ll","minY","maxX","lim","maxY","applySubgridShift","isNaN","pin","ct","val","tb","nadInterpolate","dif","inx","indx","floor","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","checkCoord","num","TypeError","transform","dest","enforceAxis","wgs84","toPoint","checkSanity","checkNotWGS","adjust_axis","compareDatums","source_a","source_es","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","datum_transform","transformer","from","to","coords","transformedArray","concat","splice","checkProj","oProj","fromProj","toProj","coord","single","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","accuracy","utm","column","row","colOrigin","rowOrigin","colInt","rowInt","rollover","easting","northing","setParm","seasting","snorthing","zoneNumber","zoneLetter","get100kSetForZone","encode","eccPrimeSquared","N","T","C","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","LetterDesignator","UTMEasting","UTMNorthing","round","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","mgrsString","testChar","hunK","sb","substring","set","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","warn","fromMGRS","mgrsStr","toMGRS","C04","C06","C08","en","sphi","cphi","arg","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","ds","f","g","temp","asin","max","min","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","j","hr","hi1","hr1","hi","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","hypot","log1py","asinhy","tmp","clens_cmplx","adjust_zone","etmerc","dependsOn","esinp","rc","phic0","ratexp","K","srat","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","cosph0","F","H","L","sinph0","J","gamma0","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","V","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","qsfnz","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","beta","cosz","sinz","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml1","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","sinpsi","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","poly3_val","coefs","NODES","f_df","max_err","iters","upd","newton_rapshon","poly3_der","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","proj4","Proj","data","DataView","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","subHeader","lngColumnCount","latColumnCount","count","readSubgrids","nadgrid","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","projectionBounds","boundsX","boundsY","corpusSize","OpenGeoWords","static","lonlat","meters","project","blockX","blockPosition","encrypt","part1","part1r","part2","part2r","part3","part3r","part4r","words","generateWords","startsWith","blockY","unproject","blockArea","maxBlocks","parts","ceil","on","evt","ol","toLonLat","coordinate","generateWordsString","distance","coords1","coords2","toRad","lon1","lon2","dLat","dLon","haversineDistance","parseWordsString","infoBox","document","getElementById","innerText","toFixed"],"sourceRoot":""}